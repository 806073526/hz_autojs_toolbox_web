import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as c,c as i,d as e,b as s,w as l,e as t,f as a}from"./app-ff93bfbc.js";const h={},u=a('<h2 id="继承关系" tabindex="-1"><a class="header-anchor" href="#继承关系" aria-hidden="true">#</a> 继承关系</h2><ul><li><p><code>unknown</code></p><p>↳ <strong><code>Shell</code></strong></p></li></ul><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3>',4),r=e("h3",{id:"events",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#events","aria-hidden":"true"},"#"),t(" Events")],-1),p=e("h2",{id:"方法-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法-1","aria-hidden":"true"},"#"),t(" 方法")],-1),_=e("h3",{id:"exec",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exec","aria-hidden":"true"},"#"),t(" exec")],-1),f=e("strong",null,"exec",-1),x=e("code",null,"cmd",-1),k=e("code",null,"Promise",-1),g=e("code",null,"ExecutionResult",-1),m=a(`<p>执行shell命令，并等待执行结果。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createShell <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;shell&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> shell <span class="token operator">=</span> <span class="token function">createShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> shell<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;touch test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> shell<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;ls -l test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> shell<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cmd</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要执行的命令</td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4>`,6),v=e("code",null,"Promise",-1),y=e("code",null,"ExecutionResult",-1),b=e("p",null,"执行结果的Promise",-1),S=e("hr",null,null,-1),w=e("h3",{id:"exit",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exit","aria-hidden":"true"},"#"),t(" exit")],-1),E=e("strong",null,"exit",-1),R=e("code",null,"forcedly?",-1),q=e("code",null,"Promise",-1),P=e("code",null,"ExitResult",-1),j=a('<p>退出shell进程。若forcedly为true，则会直接杀死进程，此时返回值为字符串，表示杀死进程的signal；如果forcedly为false，则会使用<code>exit</code>命令退出shell进程，并返回退出码(exit code)。</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>forcedly?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否强制退出</td></tr></tbody></table><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4>',4),B=e("code",null,"Promise",-1),N=e("code",null,"ExitResult",-1),V=a('<hr><h3 id="submit" tabindex="-1"><a class="header-anchor" href="#submit" aria-hidden="true">#</a> submit</h3><p>▸ <strong>submit</strong>(<code>input</code>): <code>void</code></p><p>往shell的标准输入中提交文本内容，若文本内容末尾未包含换行符，则会自动添加换行符。</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>input</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><h2 id="events-1" tabindex="-1"><a class="header-anchor" href="#events-1" aria-hidden="true">#</a> Events</h2><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3>',10),T=e("strong",null,"on",-1),C=e("code",null,"event",-1),L=e("code",null,"listener",-1),O=e("code",null,"Shell",-1),z=e("p",null,[t("shell的标准输出或标准输出结果有新数据的事件。"),e("code",null,"type"),t("参数用于区分是标准输出还是标准错误输出。")],-1),A=e("p",null,"data",-1),D=e("h4",{id:"参数-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参数-3","aria-hidden":"true"},"#"),t(" 参数")],-1),F=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型")])],-1),G=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"event")]),e("td",{style:{"text-align":"left"}},[e("code",null,'"data"')])],-1),H=e("td",{style:{"text-align":"left"}},[e("code",null,"listener")],-1),I={style:{"text-align":"left"}},J=e("code",null,"chunk",-1),K=e("code",null,"Buffer",-1),M=e("code",null,"type",-1),Q=e("code",null,"StandardOutputType",-1),U=e("code",null,"void",-1),W=e("h4",{id:"返回值-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回值-3","aria-hidden":"true"},"#"),t(" 返回值")],-1),X=e("code",null,"Shell",-1),Y=e("strong",null,"on",-1),Z=e("code",null,"event",-1),$=e("code",null,"listener",-1),ee=e("code",null,"Shell",-1),te=e("p",null,[t("shell的标准输出或标准输出结果有新的一行数据的事件。"),e("code",null,"type"),t("参数用于区分是标准输出还是标准错误输出。")],-1),ne=e("p",null,"line",-1),se=e("h4",{id:"参数-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参数-4","aria-hidden":"true"},"#"),t(" 参数")],-1),le=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型")])],-1),ae=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"event")]),e("td",{style:{"text-align":"left"}},[e("code",null,'"line"')])],-1),oe=e("td",{style:{"text-align":"left"}},[e("code",null,"listener")],-1),de={style:{"text-align":"left"}},ce=e("code",null,"line",-1),ie=e("code",null,"string",-1),he=e("code",null,"type",-1),ue=e("code",null,"StandardOutputType",-1),re=e("code",null,"void",-1),pe=e("h4",{id:"返回值-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回值-4","aria-hidden":"true"},"#"),t(" 返回值")],-1),_e=e("code",null,"Shell",-1);function fe(xe,ke){const n=d("RouterLink");return c(),i("div",null,[e("p",null,[s(n,{to:"/v9/generated/modules/shell.html"},{default:l(()=>[t("shell")]),_:1}),t(".Shell")]),e("p",null,[t("Shell类，通过"),s(n,{to:"/v9/generated/modules/shell.html#createshell"},{default:l(()=>[t("createShell")]),_:1}),t("创建新实例。")]),u,e("ul",null,[e("li",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html#exec"},{default:l(()=>[t("exec")]),_:1})]),e("li",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html#exit"},{default:l(()=>[t("exit")]),_:1})]),e("li",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html#submit"},{default:l(()=>[t("submit")]),_:1})])]),r,e("ul",null,[e("li",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html#on"},{default:l(()=>[t("on")]),_:1})])]),p,_,e("p",null,[t("▸ "),f,t("("),x,t("): "),k,t("<"),s(n,{to:"/v9/generated/interfaces/shell.ExecutionResult.html"},{default:l(()=>[g]),_:1}),t(">")]),m,e("p",null,[v,t("<"),s(n,{to:"/v9/generated/interfaces/shell.ExecutionResult.html"},{default:l(()=>[y]),_:1}),t(">")]),b,S,w,e("p",null,[t("▸ "),E,t("("),R,t("): "),q,t("<"),s(n,{to:"/v9/generated/modules/shell.html#exitresult"},{default:l(()=>[P]),_:1}),t(">")]),j,e("p",null,[B,t("<"),s(n,{to:"/v9/generated/modules/shell.html#exitresult"},{default:l(()=>[N]),_:1}),t(">")]),V,e("p",null,[t("▸ "),T,t("("),C,t(", "),L,t("): "),s(n,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:l(()=>[O]),_:1})]),z,A,D,e("table",null,[F,e("tbody",null,[G,e("tr",null,[H,e("td",I,[t("("),J,t(": "),K,t(", "),M,t(": "),s(n,{to:"/v9/generated/modules/shell.html#standardoutputtype"},{default:l(()=>[Q]),_:1}),t(") => "),U])])])]),W,e("p",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:l(()=>[X]),_:1})]),e("p",null,[t("▸ "),Y,t("("),Z,t(", "),$,t("): "),s(n,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:l(()=>[ee]),_:1})]),te,ne,se,e("table",null,[le,e("tbody",null,[ae,e("tr",null,[oe,e("td",de,[t("("),ce,t(": "),ie,t(", "),he,t(": "),s(n,{to:"/v9/generated/modules/shell.html#standardoutputtype"},{default:l(()=>[ue]),_:1}),t(") => "),re])])])]),pe,e("p",null,[s(n,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:l(()=>[_e]),_:1})])])}const ve=o(h,[["render",fe],["__file","shell.Shell.html.vue"]]);export{ve as default};
