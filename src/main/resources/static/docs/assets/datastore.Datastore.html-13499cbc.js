import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as r,d as e,b as n,w as d,e as t,f as s}from"./app-ff93bfbc.js";const i={},h=e("h2",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),t(" 目录")],-1),p=e("h3",{id:"方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),t(" 方法")],-1),u=s('<h2 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h2><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear</h3><p>▸ <strong>clear</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>异步删除当前本地存储以及它的全部数据。此过程是异步的，返回一个<code>Promise</code>，当Promise resolve时表示操作完成。</p><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="clearsync" tabindex="-1"><a class="header-anchor" href="#clearsync" aria-hidden="true">#</a> clearSync</h3><p>▸ <strong>clearSync</strong>(): <code>void</code></p>',9),f=s(`<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="contains" tabindex="-1"><a class="header-anchor" href="#contains" aria-hidden="true">#</a> contains</h3><p>▸ <strong>contains</strong>(<code>key</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>判断该本地存储是否包含键值为key的数据并返回Promise，若包含是则该Promise的值为<code>true</code>，否则为<code>false</code>。</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>是否包含该键值的Promise</p><hr><h3 id="containssync" tabindex="-1"><a class="header-anchor" href="#containssync" aria-hidden="true">#</a> containsSync</h3><p>▸ <strong>containsSync</strong>(<code>key</code>): <code>boolean</code></p><p>判断该本地存储是否包含键值为key的数据，若包含是则<code>true</code>，否则为<code>false</code>。</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr></tbody></table><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>是否包含该键值</p><hr><h3 id="edit" tabindex="-1"><a class="header-anchor" href="#edit" aria-hidden="true">#</a> edit</h3><p>▸ <strong>edit</strong>(<code>block</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>批量编辑数据。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> createDatastore <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;datastore&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 创建本地存储，其名称为example.test</span>
<span class="token keyword">const</span> datastore <span class="token operator">=</span> <span class="token function">createDatastore</span><span class="token punctuation">(</span><span class="token string">&#39;example.test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 批量写入多个值，相比依次写入效率更高</span>
    <span class="token keyword">await</span> datastore<span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token parameter">editor</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        editor<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;boolKey&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;arrayKey&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;versions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4>`,27),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型")])],-1),g=e("td",{style:{"text-align":"left"}},[e("code",null,"block")],-1),b={style:{"text-align":"left"}},x=e("code",null,"editor",-1),k=e("code",null,"DatastoreEditor",-1),v=e("code",null,"void",-1),m=s('<h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="editsync" tabindex="-1"><a class="header-anchor" href="#editsync" aria-hidden="true">#</a> editSync</h3><p>▸ <strong>editSync</strong>(<code>block</code>): <code>void</code></p><p>同步批量编辑数据。</p><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4>',7),_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型")])],-1),D=e("td",{style:{"text-align":"left"}},[e("code",null,"block")],-1),P={style:{"text-align":"left"}},S=e("code",null,"editor",-1),T=e("code",null,"DatastoreEditor",-1),w=e("code",null,"void",-1),N=s('<h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h3><p>▸ <strong>get</strong>&lt;<code>T</code>&gt;(<code>key</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>T</code>&gt;</p><p>从本地存储中异步获取键值为key的数据并返回Promise。</p><p>如果该存储中不包含该数据，这时若指定了默认值参数则返回默认值，否则返回undefined。</p><h4 id="类型参数" tabindex="-1"><a class="header-anchor" href="#类型参数" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr></tbody></table><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>undefined</code> | <code>T</code>&gt;</p><hr><h3 id="getsync" tabindex="-1"><a class="header-anchor" href="#getsync" aria-hidden="true">#</a> getSync</h3><p>▸ <strong>getSync</strong>&lt;<code>T</code>&gt;(<code>key</code>): <code>undefined</code> | <code>T</code></p>',16),E=s('<h4 id="类型参数-1" tabindex="-1"><a class="header-anchor" href="#类型参数-1" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr></tbody></table><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4><p><code>undefined</code> | <code>T</code></p><hr><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove</h3><p>▸ <strong>remove</strong>&lt;<code>T</code>&gt;(<code>key</code>): <code>Promise</code>&lt;<code>undefined</code> | <code>T</code>&gt;</p><p>异步移除键值为key的数据，并返回被移除的值的Promise。</p><h4 id="类型参数-2" tabindex="-1"><a class="header-anchor" href="#类型参数-2" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要移除的值的键</td></tr></tbody></table><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>undefined</code> | <code>T</code>&gt;</p><p>被移除的值的Promise，若本身key没有对应的数据，则会得到<code>undefined</code>（的Promise）。</p><hr><h3 id="removesync" tabindex="-1"><a class="header-anchor" href="#removesync" aria-hidden="true">#</a> removeSync</h3><p>▸ <strong>removeSync</strong>&lt;<code>T</code>&gt;(<code>key</code>): <code>undefined</code> | <code>T</code></p>',20),I=s('<h4 id="类型参数-3" tabindex="-1"><a class="header-anchor" href="#类型参数-3" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要移除的值的键</td></tr></tbody></table><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9" aria-hidden="true">#</a> 返回值</h4><p><code>undefined</code> | <code>T</code></p><p>被移除的值，若本身key没有对应的数据，则返回<code>undefined</code>。</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set</h3><p>▸ <strong>set</strong>&lt;<code>T</code>&gt;(<code>key</code>, <code>value</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>把键值对key和value保存到本地存储中。此过程是异步的，返回一个<code>Promise</code>，当Promise resolve时表示操作完成。</p><p>存储的过程实际上是使用<code>JSON.stringify()</code>把value转换为字符串再保存，因此value必须是可JSON化的才能被接受。</p><h4 id="类型参数-4" tabindex="-1"><a class="header-anchor" href="#类型参数-4" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">值</td></tr></tbody></table><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="setsync" tabindex="-1"><a class="header-anchor" href="#setsync" aria-hidden="true">#</a> setSync</h3><p>▸ <strong>setSync</strong>&lt;<code>T</code>&gt;(<code>key</code>, <code>value</code>): <code>void</code></p>',21),J=s('<p>存储的过程实际上是使用<code>JSON.stringify()</code>把value转换为字符串再保存，因此value必须是可JSON化的才能被接受。</p><h4 id="类型参数-5" tabindex="-1"><a class="header-anchor" href="#类型参数-5" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">键值</td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;">值</td></tr></tbody></table><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p>',7);function O(U,V){const a=l("RouterLink");return c(),r("div",null,[e("p",null,[n(a,{to:"/v9/generated/modules/datastore.html"},{default:d(()=>[t("datastore")]),_:1}),t(".Datastore")]),e("p",null,[t("本地存储对象，用"),n(a,{to:"/v9/generated/modules/datastore.html#createdatastore"},{default:d(()=>[t("createDatastore")]),_:1}),t("方法创建。")]),h,p,e("ul",null,[e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#clear"},{default:d(()=>[t("clear")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#clearsync"},{default:d(()=>[t("clearSync")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#contains"},{default:d(()=>[t("contains")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#containssync"},{default:d(()=>[t("containsSync")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#edit"},{default:d(()=>[t("edit")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#editsync"},{default:d(()=>[t("editSync")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#get"},{default:d(()=>[t("get")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#getsync"},{default:d(()=>[t("getSync")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#remove"},{default:d(()=>[t("remove")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#removesync"},{default:d(()=>[t("removeSync")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#set"},{default:d(()=>[t("set")]),_:1})]),e("li",null,[n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#setsync"},{default:d(()=>[t("setSync")]),_:1})])]),u,e("p",null,[t("同步删除当前本地存储以及它的全部数据。大多数情况下不需要使用同步方法，使用异步的"),n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#clear"},{default:d(()=>[t("clear")]),_:1}),t("方法即可，尤其是在UI线程中。")]),f,e("table",null,[y,e("tbody",null,[e("tr",null,[g,e("td",b,[t("("),x,t(": "),n(a,{to:"/v9/generated/interfaces/datastore.DatastoreEditor.html"},{default:d(()=>[k]),_:1}),t(") => "),v])])])]),m,e("table",null,[_,e("tbody",null,[e("tr",null,[D,e("td",P,[t("("),S,t(": "),n(a,{to:"/v9/generated/interfaces/datastore.DatastoreEditor.html"},{default:d(()=>[T]),_:1}),t(") => "),w])])])]),N,e("p",null,[t("从本地存储中同步获取键值为key的数据并返回。大多数情况下不需要使用同步方法，使用异步的"),n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#get"},{default:d(()=>[t("get")]),_:1}),t("方法即可，尤其是在UI线程中。")]),E,e("p",null,[t("同步移除键值为key的数据，并返回移除的值。大多数情况下不需要使用同步方法，使用异步的"),n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#remove"},{default:d(()=>[t("remove")]),_:1}),t("方法即可，尤其是在UI线程中。")]),I,e("p",null,[t("把键值对key和value同步保存到本地存储中。大多数情况下不需要使用同步方法，使用异步的"),n(a,{to:"/v9/generated/interfaces/datastore.Datastore.html#set"},{default:d(()=>[t("set")]),_:1}),t("方法即可，尤其是在UI线程中。")]),J])}const C=o(i,[["render",O],["__file","datastore.Datastore.html.vue"]]);export{C as default};
