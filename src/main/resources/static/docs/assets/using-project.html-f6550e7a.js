import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-ff93bfbc.js";const p="/docs/assets/image/project-menu.b422b5e8.jpg",t={},o=e(`<p>当我们的代码越来越复杂时，我们可能需要编写多个js文件，文件之间互相调用；一些js文件也可能需要读取图片、音乐等资源文件。项目就是用来组织多个文件的文件夹，项目的文件夹中包含一个project.json文件，描述项目的配置，这个配置文件可以让你在打包时无需每次重新填写打包的信息。</p><p>通过Auto.js Pro的文件管理界面右下角的菜单，选择项目即可新建项目。创建时可选择不同的项目模板或者自定义模板，首次使用时选择空项目即可。</p><p>新建项目后将自动创建一个项目名称的文件夹，在该文件夹下可看到至少两个文件：</p><ul><li><code>main.js</code>：项目的主入口文件，运行项目时将执行该文件</li><li><code>project.json</code>：项目的配置文件，配置项目的名称、包名、打包配置等</li></ul><p>在项目中，我们所有使用的资源文件、模块文件都要放在项目的文件夹下，并用相对路径引用，才可以在打包时被打包进apk并正确运行。</p><p>例如我们写了一个模块文件<code>sum.js</code>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sum.js</span>
<span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">+=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> sum<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么在<code>main.js</code>中，需要用相对路径引用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// main.js</span>
<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./sum.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样地，资源文件也需要使用相对路径引用。比如我们的项目文件夹下有以下文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>main.js
sum.js
apple.txt
project.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在读取apple文本时，需要使用相对路径，比如<code>let apple = $files.read(&#39;./apple.txt&#39;)</code>。</p><h2 id="项目管理与打包" tabindex="-1"><a class="header-anchor" href="#项目管理与打包" aria-hidden="true">#</a> 项目管理与打包</h2><p>打开项目的文件夹，可以看到上方工具栏有一个圆规图标：</p><figure><img src="`+p+'" alt="项目管理" tabindex="0" loading="lazy"><figcaption>项目管理</figcaption></figure><p>点击后弹出的菜单可编辑项目、打包项目、发布项目等。项目的打包和上一节的打包基本一样，这里不再阐述；发布项目将会上传项目到商店中，审核通过后，所有人都可以下载该项目。</p>',16),c=[o];function i(l,u){return s(),a("div",null,c)}const m=n(t,[["render",i],["__file","using-project.html.vue"]]);export{m as default};
