import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,d as n,e as s,b as t,f as e}from"./app-ff93bfbc.js";const i={},u=n("p",null,"Auto.js提供了加载插件的机制，允许用户编写带有Activity, Service, C/C++库等的apk，安装到Android设备上，并用Auto.js加载和调用。",-1),r=n("p",null,[s("一个插件是一个可独立安装的apk文件，用户安装后，再通过"),n("code",null,"$plugins"),s("模块加载插件和调用其中的API。")],-1),d=n("p",null,"从Pro 9.2开始，插件支持打包时合并到apk中，打包后无需再单独安装插件。",-1),k={class:"hint-container tip"},v=n("p",{class:"hint-container-title"},"提示",-1),m={href:"https://blog.autojs.org/2022/09/13/pro-9-2-release-notes/",target:"_blank",rel:"noopener noreferrer"},g=e('<h2 id="plugins-load-packagename" tabindex="-1"><a class="header-anchor" href="#plugins-load-packagename" aria-hidden="true">#</a> $plugins.load(packageName)</h2><ul><li><code>packageName</code> {string} 加载的插件包名</li></ul><p>加载一个插件，并返回插件模块中module.exports导出的对象。</p><p>如果插件未安装，则抛出<code>PluginLoadException</code>异常。</p><h2 id="如何开发一个插件" tabindex="-1"><a class="header-anchor" href="#如何开发一个插件" aria-hidden="true">#</a> 如何开发一个插件</h2><p>提示</p>',6),b={href:"https://github.com/bowyn/Auto.js-Plugin-SDK",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>本示例中的包名均为<code>org.autojs.plugin.sdk.demo</code>，在实际项目中插件包名可能有所不同。</p><h3 id="插件sdk集成" tabindex="-1"><a class="header-anchor" href="#插件sdk集成" aria-hidden="true">#</a> 插件SDK集成</h3><p>新建一个Android项目，在项目的build.gradle文件中添加：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://jitpack.io&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在具体模块(比如app)的build.gradle文件中添加：</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>dependencies <span class="token punctuation">{</span>
    <span class="token comment">// ... </span>
    implementation <span class="token string">&#39;com.github.hyb1996:Auto.js-Plugin-SDK:0.2&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://jitpack.io/#hyb1996/Auto.js-Plugin-SDK/0.2",target:"_blank",rel:"noopener noreferrer"},f=e(`<h3 id="插件配置" tabindex="-1"><a class="header-anchor" href="#插件配置" aria-hidden="true">#</a> 插件配置</h3><h4 id="_1-新建pluginhelloworld文件-继承于plugin" tabindex="-1"><a class="header-anchor" href="#_1-新建pluginhelloworld文件-继承于plugin" aria-hidden="true">#</a> 1. 新建<code>PluginHelloWorld</code>文件，继承于Plugin.</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PluginHelloWorld</span> <span class="token keyword">extends</span> <span class="token class-name">Plugin</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">PluginHelloWorld</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Context</span> selfContext<span class="token punctuation">,</span> <span class="token class-name">Object</span> runtime<span class="token punctuation">,</span> <span class="token class-name">Object</span> topLevelScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> selfContext<span class="token punctuation">,</span> runtime<span class="token punctuation">,</span> topLevelScope<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 返回插件的JavaScript胶水层代码的assets目录路径</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getAssetsScriptDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;plugin-helloworld&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 插件public API，可被JavaScript代码调用</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStringFromJava</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Hello, Auto.js!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 插件public API，可被JavaScript代码调用</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">getSelfContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token function">getSelfContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token class-name">HelloWorldActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_NEW_TASK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-新增mypluginregistry文件-继承于pluginregistry" tabindex="-1"><a class="header-anchor" href="#_2-新增mypluginregistry文件-继承于pluginregistry" aria-hidden="true">#</a> 2. 新增<code>MyPluginRegistry</code>文件，继承于PluginRegistry:</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPluginRegistry</span> <span class="token keyword">extends</span> <span class="token class-name">PluginRegistry</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token comment">// 注册默认插件</span>
        <span class="token function">registerDefaultPlugin</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PluginLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Plugin</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">Context</span> selfContext<span class="token punctuation">,</span> <span class="token class-name">Object</span> runtime<span class="token punctuation">,</span> <span class="token class-name">Object</span> topLevelScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PluginHelloWorld</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> selfContext<span class="token punctuation">,</span> runtime<span class="token punctuation">,</span> topLevelScope<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在AndroidManifest.xml中配置以下meta-data, <code>name</code>为<code>&quot;org.autojs.plugin.sdk.registry&quot;</code>，<code>value</code>为MyPluginRegistry的包名。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>
        <span class="token attr-name">...</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta-data</span>
            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.autojs.plugin.sdk.registry<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.autojs.plugin.sdk.demo.MyPluginRegistry<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>
            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.HelloWorldActivity<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>service</span>
            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>.HelloworldPluginService<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>exported</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-编写javascript胶水层" tabindex="-1"><a class="header-anchor" href="#_3-编写javascript胶水层" aria-hidden="true">#</a> 3. 编写JavaScript胶水层</h4><p>在assets的相应目录(由Plugin.getAssetsScriptDir返回)中添加<code>index.js</code>文件，用于作为胶水层导出插件API。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">plugin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> runtime <span class="token operator">=</span> plugin<span class="token punctuation">.</span>runtime<span class="token punctuation">;</span>
    <span class="token keyword">let</span> scope <span class="token operator">=</span> plugin<span class="token punctuation">.</span>topLevelScope<span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">helloworld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    helloworld<span class="token punctuation">.</span>stringFromJava <span class="token operator">=</span> plugin<span class="token punctuation">.</span><span class="token function">getStringFromJava</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    helloworld<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        plugin<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> helloworld<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-在auto-js-pro中调用" tabindex="-1"><a class="header-anchor" href="#_4-在auto-js-pro中调用" aria-hidden="true">#</a> 4. 在Auto.js Pro中调用</h4><p>编译插件为apk(assembleDebug/assembleRelease)，安装到设备上。在Auto.js Pro中使用以下代码调用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> helloworld <span class="token operator">=</span> $plugins<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;org.autojs.plugin.sdk.demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>helloworld<span class="token punctuation">.</span>stringFromJava<span class="token punctuation">)</span><span class="token punctuation">;</span>
helloworld<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, Auto.js Pro Plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-独立服务aidl方式调用" tabindex="-1"><a class="header-anchor" href="#_5-独立服务aidl方式调用" aria-hidden="true">#</a> 5. 独立服务AIDL方式调用</h4><p>可以在插件中编写一个<code>Service</code>，由Auto.js Pro唤起和绑定，并可在js中通过aidl调用Service的接口。</p><p>在Plugin中重写方法<code>getService</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 插件服务类，可选，用于AIDL方式和Auto.js Pro本体通信。可返回null</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">ComponentName</span> <span class="token function">getService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ComponentName</span><span class="token punctuation">(</span><span class="token function">getSelfContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">HelloworldPluginService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建一个Service组件（<strong>注意在AndroidManifest中注册时需要是exported=&quot;true&quot;</strong>)，继承于<code>PluginService</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloworldPluginService</span> <span class="token keyword">extends</span> <span class="token class-name">PluginService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACTION_ADD</span> <span class="token operator">=</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Result</span> <span class="token function">onRemoteCall</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">String</span> action<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">RemoteCallback</span> callback<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">ACTION_ADD</span><span class="token operator">:</span>
                <span class="token keyword">return</span> <span class="token function">invokeAdd</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">notImplemented</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">Result</span> <span class="token function">invokeAdd</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Number</span> a   <span class="token operator">=</span> <span class="token class-name">PluginUtils</span><span class="token punctuation">.</span><span class="token function">getNotNull</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Number</span> b   <span class="token operator">=</span> <span class="token class-name">PluginUtils</span><span class="token punctuation">.</span><span class="token function">getNotNull</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> sum <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">.</span><span class="token function">doubleValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;sum&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在index.js中添加胶水层代码:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>helloworld<span class="token punctuation">.</span><span class="token function-variable function">remoteAdd</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> plugin<span class="token punctuation">.</span><span class="token function">waitForConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">a</span><span class="token operator">:</span> a<span class="token punctuation">,</span>
        <span class="token literal-property property">b</span><span class="token operator">:</span> b
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以在Auto.js Pro中调用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> helloworld <span class="token operator">=</span> $plugins<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&quot;org.autojs.plugin.sdk.demo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>helloworld<span class="token punctuation">.</span><span class="token function">remoteAdd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function w(j,x){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,d,n("div",k,[v,n("p",null,[s("Pro 9.2中，Auto.js Pro应用内置了插件商店，现在可在插件商店下载插件，参见博客"),n("a",m,[s("Auto.js Pro 9.2版本正式发布"),t(a)]),s("。")])]),g,n("p",null,[s("以下示例代码可在这里找到完整项目："),n("a",b,[s("插件SDK"),t(a)])]),h,n("p",null,[s("更多信息参见"),n("a",y,[s("Jitpack.io"),t(a)]),s("。")]),f])}const q=p(i,[["render",w],["__file","plugins.html.vue"]]);export{q as default};
