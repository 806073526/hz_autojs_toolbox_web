import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as t}from"./app-ff93bfbc.js";const p={},e=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>本文将介绍如何使用Auto.js，在Android平台上使用JavaScript代码创建一个带有边框和圆角的渐变背景对象。我们将使用Auto.js提供的类库来实现这个功能。</p><h2 id="导入类" tabindex="-1"><a class="header-anchor" href="#导入类" aria-hidden="true">#</a> 导入类</h2><p>首先，我们需要导入一些Android图形类，包括Color、GradientDrawable、Orientation、ShapeDrawable和RoundRectShape。这些类将用于创建和配置我们的渐变背景对象。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>GradientDrawable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>GradientDrawable<span class="token punctuation">.</span>Orientation<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ShapeDrawable<span class="token punctuation">)</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>RoundRectShape<span class="token punctuation">)</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>LayerDrawable<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建带边框和圆角的gradientdrawable对象" tabindex="-1"><a class="header-anchor" href="#创建带边框和圆角的gradientdrawable对象" aria-hidden="true">#</a> 创建带边框和圆角的GradientDrawable对象</h2><p>下面是我们创建带边框和圆角的GradientDrawable对象的函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 创建一个带有边框和圆角的 GradientDrawable 对象。
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args</span><span class="token punctuation">]</span></span> - 函数参数对象。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>rgb</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token string">&#39;#eeeeee&#39;</span></span><span class="token punctuation">]</span></span> - 边框颜色，默认为灰色（#eeeeee）。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>cornerRadius</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token number">10</span></span><span class="token punctuation">]</span></span> - 圆角半径，默认为 10 像素。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>alpha</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token number">255</span></span><span class="token punctuation">]</span></span> - 填充颜色透明度，取值范围是 0 到 255，默认为不透明（255）。
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>GradientDrawable<span class="token punctuation">}</span></span> 返回一个创建好的 GradientDrawable 对象。
 */</span>
<span class="token keyword">function</span> <span class="token function">createBorderedDrawable</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args <span class="token operator">=</span> args <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    args<span class="token punctuation">.</span>rgb <span class="token operator">=</span> args<span class="token punctuation">.</span>rgb <span class="token operator">||</span> <span class="token string">&#39;#eeeeee&#39;</span><span class="token punctuation">;</span>
    args<span class="token punctuation">.</span>cornerRadius <span class="token operator">=</span> args<span class="token punctuation">.</span>cornerRadius <span class="token operator">||</span> <span class="token number">10</span><span class="token punctuation">;</span>
    args<span class="token punctuation">.</span>alpha <span class="token operator">=</span> args<span class="token punctuation">.</span>alpha <span class="token operator">||</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token comment">// 注意：alpha 的取值范围是 0 到 255</span>
    <span class="token keyword">let</span> gradientDrawable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GradientDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个 GradientDrawable 对象</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>rgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的边框宽度和颜色</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>GradientDrawable$Orientation<span class="token punctuation">.</span><span class="token constant">LEFT_RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的方向为左右</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setCornerRadius</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>cornerRadius<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的圆角半径</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的填充颜色透明度</span>
    <span class="token keyword">return</span> gradientDrawable<span class="token punctuation">;</span> <span class="token comment">// 返回创建的 GradientDrawable 对象</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该函数接受一个可选的参数对象<code>args</code>，用于自定义渐变背景的属性。默认情况下，边框颜色为灰色，圆角半径为10像素，填充颜色透明度为不透明。函数首先根据参数对象来设置相应属性的值，然后创建一个GradientDrawable对象，并使用<code>setStroke</code>方法设置边框的宽度和颜色，使用<code>setOrientation</code>方法设置渐变方向为从左到右，使用<code>setCornerRadius</code>方法设置圆角半径，使用<code>setAlpha</code>方法设置填充颜色的透明度。最后，返回创建好的GradientDrawable对象。</p><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><p>你可以根据自己的需求调用<code>createBorderedDrawable</code>函数并传入自定义的参数来创建渐变背景对象。以下是一个使用示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;ui&quot;</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Color<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>GradientDrawable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>GradientDrawable<span class="token punctuation">.</span>Orientation<span class="token punctuation">)</span><span class="token punctuation">;</span>

$ui<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>vertical gravity<span class="token operator">=</span><span class="token string">&quot;center&quot;</span> padding<span class="token operator">=</span><span class="token string">&quot;20&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>text id<span class="token operator">=</span><span class="token string">&quot;text1&quot;</span> text<span class="token operator">=</span><span class="token string">&quot;示例&quot;</span> textSize<span class="token operator">=</span><span class="token string">&quot;22&quot;</span> padding<span class="token operator">=</span><span class="token string">&quot;5 10&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">&quot;button1&quot;</span> text<span class="token operator">=</span><span class="token string">&quot;按钮&quot;</span> marginTop<span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">&quot;input1&quot;</span> text<span class="token operator">=</span><span class="token string">&quot;输入框&quot;</span> marginTop<span class="token operator">=</span><span class="token string">&quot;10&quot;</span> padding<span class="token operator">=</span><span class="token string">&quot;5 10&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>checkbox id<span class="token operator">=</span><span class="token string">&quot;checkbox1&quot;</span> text<span class="token operator">=</span><span class="token string">&quot;复选框&quot;</span> marginTop<span class="token operator">=</span><span class="token string">&quot;10&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>radio id<span class="token operator">=</span><span class="token string">&quot;radio1&quot;</span> text<span class="token operator">=</span><span class="token string">&quot;单选框1&quot;</span> marginTop<span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>vertical<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> borderedDrawable <span class="token operator">=</span> <span class="token function">createBorderedDrawable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">rgb</span><span class="token operator">:</span> <span class="token string">&#39;#ff0000&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cornerRadius</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">200</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$ui<span class="token punctuation">[</span><span class="token string">&#39;text1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>borderedDrawable<span class="token punctuation">)</span>
$ui<span class="token punctuation">[</span><span class="token string">&#39;button1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>borderedDrawable<span class="token punctuation">)</span>
$ui<span class="token punctuation">[</span><span class="token string">&#39;input1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>borderedDrawable<span class="token punctuation">)</span>
$ui<span class="token punctuation">[</span><span class="token string">&#39;checkbox1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>borderedDrawable<span class="token punctuation">)</span>
$ui<span class="token punctuation">[</span><span class="token string">&#39;radio1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>borderedDrawable<span class="token punctuation">)</span>



<span class="token doc-comment comment">/**
 * 创建一个带有边框和圆角的 GradientDrawable 对象。
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args</span><span class="token punctuation">]</span></span> - 函数参数对象。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>rgb</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token string">&#39;#eeeeee&#39;</span></span><span class="token punctuation">]</span></span> - 边框颜色，默认为灰色（#eeeeee）。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>cornerRadius</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token number">10</span></span><span class="token punctuation">]</span></span> - 圆角半径，默认为 10 像素。
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token optional-parameter"><span class="token punctuation">[</span><span class="token parameter">args<span class="token punctuation">.</span>alpha</span><span class="token punctuation">=</span><span class="token code language-javascript"><span class="token number">255</span></span><span class="token punctuation">]</span></span> - 填充颜色透明度，取值范围是 0 到 255，默认为不透明（255）。
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>GradientDrawable<span class="token punctuation">}</span></span> 返回一个创建好的 GradientDrawable 对象。
 */</span>
<span class="token keyword">function</span> <span class="token function">createBorderedDrawable</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    args <span class="token operator">=</span> args <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    args<span class="token punctuation">.</span>rgb <span class="token operator">=</span> args<span class="token punctuation">.</span>rgb <span class="token operator">||</span> <span class="token string">&#39;#eeeeee&#39;</span><span class="token punctuation">;</span>
    args<span class="token punctuation">.</span>cornerRadius <span class="token operator">=</span> args<span class="token punctuation">.</span>cornerRadius <span class="token operator">||</span> <span class="token number">10</span><span class="token punctuation">;</span>
    args<span class="token punctuation">.</span>alpha <span class="token operator">=</span> args<span class="token punctuation">.</span>alpha <span class="token operator">||</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token comment">// 注意：alpha 的取值范围是 0 到 255</span>
    <span class="token keyword">let</span> gradientDrawable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GradientDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个 GradientDrawable 对象</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> colors<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>rgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的边框宽度和颜色</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>GradientDrawable$Orientation<span class="token punctuation">.</span><span class="token constant">LEFT_RIGHT</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的方向为左右</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setCornerRadius</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>cornerRadius<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的圆角半径</span>
    gradientDrawable<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置对象的填充颜色透明度</span>
    <span class="token keyword">return</span> gradientDrawable<span class="token punctuation">;</span> <span class="token comment">// 返回创建的 GradientDrawable 对象</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述示例中，我们调用<code>createBorderedDrawable</code>函数，并传入了自定义的参数对象。我们设置了边框颜色为红色、圆角半径为20像素、填充颜色透明度为200。然后，将创建的<code>borderedDrawable</code>对象设置为某个View的背景。</p><p>使用以上方法，你可以根据需要创建出符合你期望效果的带有边框和圆角的渐变背景对象。希望本文对你有所帮助！</p>`,14),o=[e];function c(l,i){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","control-styling.html.vue"]]);export{k as default};
