import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as r,c,d as t,b as a,w as s,e,f as o}from"./app-ff93bfbc.js";const p={},h=o('<p>app模块提供一系列函数，用于使用其他应用、与其他应用交互。例如发送意图、打开文件、发送邮件等。</p><p>同时提供了方便的进阶函数startActivity和sendBroadcast，用他们可完成app模块没有内置的和其他应用的交互。</p><p>要导入此模块，请使用语句<code>const app = require(&#39;app&#39;);</code>，或者导入本模块的部分函数、属性<code>const { startActivity, packageName } = require(&#39;app&#39;);</code>。</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3>',5),u=t("h3",{id:"变量",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),e(" 变量")],-1),g=t("h3",{id:"函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),e(" 函数")],-1),f=o(`<h2 id="变量-1" tabindex="-1"><a class="header-anchor" href="#变量-1" aria-hidden="true">#</a> 变量</h2><h3 id="packagename" tabindex="-1"><a class="header-anchor" href="#packagename" aria-hidden="true">#</a> packageName</h3><p>• <code>Const</code> <strong>packageName</strong>: <code>any</code></p><p>当前应用的包名。</p><p>在Auto.js Pro中运行为<code>org.autojs.autojspro</code>，在打包应用中运行为打包应用的包名。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> packageName <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>packageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="函数-1" tabindex="-1"><a class="header-anchor" href="#函数-1" aria-hidden="true">#</a> 函数</h2><h3 id="editfile" tabindex="-1"><a class="header-anchor" href="#editfile" aria-hidden="true">#</a> editFile</h3><p>▸ <strong>editFile</strong>(<code>file</code>): <code>void</code></p><p>用其他应用编辑文件。文件不存在的情况由编辑文件的应用处理。 如果找不出可以编辑该文件的应用，则抛出<code>ActivityNotException</code>。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">editFile</span><span class="token punctuation">(</span><span class="token string">&quot;/sdcard/1.txt/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>file</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文件路径</td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="getapkinfo" tabindex="-1"><a class="header-anchor" href="#getapkinfo" aria-hidden="true">#</a> getApkInfo</h3><p>▸ <strong>getApkInfo</strong>(<code>file</code>, <code>options?</code>): <code>android.content.pm.PackageInfo</code> | <code>null</code></p><p>解析apk文件并返回包信息。</p><p><strong><code>参见</code></strong></p>`,22),k={href:"https://developer.android.google.cn/reference/android/content/pm/PackageManager#getPackageArchiveInfo",target:"_blank",rel:"noopener noreferrer"},v=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> info <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getApkInfo</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/apk&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
   <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;meta_data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>packageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4>`,3),m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),y=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"file")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"文件路径")],-1),b=t("td",{style:{"text-align":"left"}},[t("code",null,"options?")],-1),x={style:{"text-align":"left"}},_=t("code",null,"PMOptions",-1),q=t("td",{style:{"text-align":"left"}},"过滤选项",-1),I=o(`<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>android.content.pm.PackageInfo</code> | <code>null</code></p><p>包信息，若apk无法解析，返回null</p><hr><h3 id="getappname" tabindex="-1"><a class="header-anchor" href="#getappname" aria-hidden="true">#</a> getAppName</h3><p>▸ <strong>getAppName</strong>(<code>packageName</code>): <code>string</code> | <code>null</code></p><p>获取应用包名对应的已安装的应用的名称。如果该找不到该应用，返回null。</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">应用包名</td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>string</code> | <code>null</code></p><p>应用名称，或者null</p><hr><h3 id="getinstalledapps" tabindex="-1"><a class="header-anchor" href="#getinstalledapps" aria-hidden="true">#</a> getInstalledApps</h3><p>▸ <strong>getInstalledApps</strong>(<code>options?</code>): <code>android.content.pm.ApplicationInfo</code>[]</p><p>获取安装的应用列表。</p><p>返回值是ApplicationInfo对象的数组。 如果没有安装任何应用，则返回一个空数组。</p><p>选项options的match选项用于指定要返回哪些应用程序，get选项用于指定返回的应用程序携带哪些信息。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> apps <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">getInstalledApps</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;meta_data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">match</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;system_only&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>apps<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>参见</code></strong></p>`,21),A={href:"https://developer.android.google.cn/reference/android/content/pm/PackageManager#getInstalledApplications(int)",target:"_blank",rel:"noopener noreferrer"},j=t("h4",{id:"参数-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-3","aria-hidden":"true"},"#"),e(" 参数")],-1),P=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),N=t("td",{style:{"text-align":"left"}},[t("code",null,"options?")],-1),O={style:{"text-align":"left"}},B=t("code",null,"PMOptions",-1),R=t("td",{style:{"text-align":"left"}},"过滤选项",-1),U=o('<h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>android.content.pm.ApplicationInfo</code>[]</p><p>为当前用户安装的所有应用程序包的列表。如果设置了match选项 <code>uninstalled_packages</code>，则包括被删除但保留了数据的应用程序。</p><hr><h3 id="getinstalledpackages" tabindex="-1"><a class="header-anchor" href="#getinstalledpackages" aria-hidden="true">#</a> getInstalledPackages</h3><p>▸ <strong>getInstalledPackages</strong>(<code>options?</code>): <code>android.content.pm.PackageInfo</code>[]</p><p>获取安装的应用列表。</p><p><strong><code>参见</code></strong></p>',8),S={href:"https://developer.android.google.cn/reference/android/content/pm/PackageManager#getInstalledPackages(int)",target:"_blank",rel:"noopener noreferrer"},w=t("h4",{id:"参数-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-4","aria-hidden":"true"},"#"),e(" 参数")],-1),E=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),M=t("td",{style:{"text-align":"left"}},[t("code",null,"options?")],-1),F={style:{"text-align":"left"}},Q=t("code",null,"PMOptions",-1),W=t("td",{style:{"text-align":"left"}},"过滤选项",-1),T=o('<h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4" aria-hidden="true">#</a> 返回值</h4><p><code>android.content.pm.PackageInfo</code>[]</p><p>PackageInfo对象的数组。 如果没有安装任何应用，则返回一个空数组。</p><hr><h3 id="getpackagename" tabindex="-1"><a class="header-anchor" href="#getpackagename" aria-hidden="true">#</a> getPackageName</h3><p>▸ <strong>getPackageName</strong>(<code>targetAppName</code>): <code>string</code> | <code>null</code></p><p>获取应用名称对应的已安装的应用的包名。如果该找不到该应用，返回null；如果该名称对应多个应用，则只返回其中某一个的包名。</p><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>targetAppName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">应用名称</td></tr></tbody></table><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4><p><code>string</code> | <code>null</code></p><p>名称对应的包名，或者null</p><hr><h3 id="geturiforfile" tabindex="-1"><a class="header-anchor" href="#geturiforfile" aria-hidden="true">#</a> getUriForFile</h3><p>▸ <strong>getUriForFile</strong>(<code>pathOrUri</code>): <code>android.net.Uri</code></p><p>从一个文件路径创建一个uri对象在高版本Android上，由于系统限制直接在Uri暴露文件的绝对路径，因此返回的Uri会是诸如<code>content://...</code>的形式。</p><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pathOrUri</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文件路径或文件uri，比如&quot;/sdcard/1.txt&quot;或&quot;file:///sdcard/1.txt&quot;</td></tr></tbody></table><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4><p><code>android.net.Uri</code></p><p>文件uri，可作为Intent的data属性</p><hr><h3 id="intenttoshell" tabindex="-1"><a class="header-anchor" href="#intenttoshell" aria-hidden="true">#</a> intentToShell</h3><p>▸ <strong>intentToShell</strong>(<code>options</code>): <code>string</code></p><p>根据选项构造一个Intent，转换为对应的shell的intent命令的参数。</p><p><strong><code>参见</code></strong></p>',26),V={href:"https://developer.android.google.cn/studio/command-line/adb#am",target:"_blank",rel:"noopener noreferrer"},C=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> intentToShell <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;am start &quot;</span> <span class="token operator">+</span> <span class="token function">intentToShell</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">packageName</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autojs&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autojs.ui.settings.SettingsActivity_&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4>`,3),L=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),D=t("td",{style:{"text-align":"left"}},[t("code",null,"options")],-1),$={style:{"text-align":"left"}},z=t("code",null,"IntentOptions",-1),G=t("td",{style:{"text-align":"left"}},"Intent选项",-1),H=o('<h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4><p><code>string</code></p><p>对应的shell的intent命令的参数</p><hr><h3 id="launch" tabindex="-1"><a class="header-anchor" href="#launch" aria-hidden="true">#</a> launch</h3><p>▸ <strong>launch</strong>(<code>packageName</code>): <code>boolean</code></p><p>通过应用包名启动应用。如果该包名对应的应用不存在，则返回false；否则返回true。</p><p>**注意！**在高版本Android或部分系统上，会限制通过后台启动应用，也即在后台的情况下即使返回true，也可能没有实际启动该应用。</p><p><strong><code>参见</code></strong></p>',9),J={href:"https://developer.android.google.cn/guide/components/activities/background-starts",target:"_blank",rel:"noopener noreferrer"},K=o('<h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要启动的应用包名</td></tr></tbody></table><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>是否找到该应用，并不返回是否真正启动成功</p><hr><h3 id="launchapp" tabindex="-1"><a class="header-anchor" href="#launchapp" aria-hidden="true">#</a> launchApp</h3><p>▸ <strong>launchApp</strong>(<code>targetAppName</code>): <code>boolean</code></p><p>通过应用名称启动应用。如果该名称对应的应用不存在，则返回false；否则返回true。如果该名称对应多个应用，将随机启动其中一个。</p><p>**注意！**在高版本Android或部分系统上，会限制通过后台启动应用，也即在后台的情况下即使返回true，也可能没有实际启动该应用。</p><p><strong><code>参见</code></strong></p>',11),X={href:"https://developer.android.google.cn/guide/components/activities/background-starts",target:"_blank",rel:"noopener noreferrer"},Y=o(`<h4 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>targetAppName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要启动的应用名称</td></tr></tbody></table><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>是否找到该应用，并不返回是否真正启动成功</p><hr><h3 id="makeintent" tabindex="-1"><a class="header-anchor" href="#makeintent" aria-hidden="true">#</a> makeIntent</h3><p>▸ <strong>makeIntent</strong>(<code>options</code>): <code>any</code></p><p>根据Intent选项构造一个新的Intent。</p><p>Intent(意图) 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个：</p><ul><li>启动活动(Activity)： Activity 表示应用中的一个&quot;屏幕&quot;。例如应用主入口都是一个Activity，应用的功能通常也以Activity的形式独立，例如微信的主界面、朋友圈、聊天窗口都是不同的Activity。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。</li><li>启动服务(Service)： Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。</li><li>传递广播： 广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。</li></ul><p>需要注意的是，除非应用专门暴露Activity出来，否则在没有root权限的情况下使用intent是无法跳转到特定Activity、应用的特定界面的。例如我们能通过Intent跳转到QQ的分享界面，是因为QQ对外暴露了分享的Activity；而在没有root权限的情况下，我们无法通过intent跳转到QQ的设置界面，因为QQ并没有暴露这个Activity。 但如果有root权限，则在intent的参数加上<code>&quot;root&quot;: true</code>即可。例如使用root权限跳转到Auto.js的设置界面为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;nodejs&quot;;
const { startActivity } = require(&quot;app&quot;);
startActivity({
    packageName: &quot;org.autojs.autojspro&quot;,
    className: &quot;org.autojs.autojs.ui.settings.SettingsActivity&quot;,
    root: true
});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">makeIntent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;VIEW&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;image/png&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;file:///sdcard/1.png&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-10" tabindex="-1"><a class="header-anchor" href="#参数-10" aria-hidden="true">#</a> 参数</h4>`,16),Z=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),tt=t("td",{style:{"text-align":"left"}},[t("code",null,"options")],-1),et={style:{"text-align":"left"}},at=t("code",null,"IntentOptions",-1),nt=t("td",{style:{"text-align":"left"}},"构建Intent的选项",-1),st=o('<h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><p>新的Intent对象</p><hr><h3 id="openappsettings" tabindex="-1"><a class="header-anchor" href="#openappsettings" aria-hidden="true">#</a> openAppSettings</h3><p>▸ <strong>openAppSettings</strong>(<code>packageName</code>): <code>boolean</code></p><p>打开应用的详情页(设置页)。如果找不到该应用，返回false; 否则返回true。</p><h4 id="参数-11" tabindex="-1"><a class="header-anchor" href="#参数-11" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">包名</td></tr></tbody></table><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>是否成功打开应用设置页</p><hr><h3 id="openurl" tabindex="-1"><a class="header-anchor" href="#openurl" aria-hidden="true">#</a> openUrl</h3><p>▸ <strong>openUrl</strong>(<code>url</code>): <code>void</code></p><p>用浏览器打开网站url。 如果没有安装浏览器应用，则抛出<code>ActivityNotException</code>。</p><h4 id="参数-12" tabindex="-1"><a class="header-anchor" href="#参数-12" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">网站的Url，需要以&quot;http://&quot;或&quot;https://&quot;开头。</td></tr></tbody></table><h4 id="返回值-12" tabindex="-1"><a class="header-anchor" href="#返回值-12" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="parseuri" tabindex="-1"><a class="header-anchor" href="#parseuri" aria-hidden="true">#</a> parseUri</h3><p>▸ <strong>parseUri</strong>(<code>uri</code>): <code>android.net.Uri</code></p><p>解析uri字符串并返回相应的Uri对象。即使Uri格式错误，该函数也会返回一个Uri对象，但之后如果访问该对象的scheme, path等值可能因解析失败而返回<code>null</code>。</p><p>在高版本Android上，由于系统限制直接在Uri暴露文件的绝对路径，因此如果uri字符串是文件<code>file://...</code>，返回的Uri会是诸如<code>content://...</code>的形式。</p><h4 id="参数-13" tabindex="-1"><a class="header-anchor" href="#参数-13" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>uri</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">uri字符串或uri对象，后者直接返回uri自身</td></tr></tbody></table><h4 id="返回值-13" tabindex="-1"><a class="header-anchor" href="#返回值-13" aria-hidden="true">#</a> 返回值</h4><p><code>android.net.Uri</code></p><p>解析后的Uri对象</p><hr><h3 id="registerbroadcastreceiver" tabindex="-1"><a class="header-anchor" href="#registerbroadcastreceiver" aria-hidden="true">#</a> registerBroadcastReceiver</h3>',32),ot=t("strong",null,"registerBroadcastReceiver",-1),lt=t("code",null,"filter",-1),dt=t("code",null,"BroadcastReceiver",-1),it=o('<h4 id="参数-14" tabindex="-1"><a class="header-anchor" href="#参数-14" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>filter</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="返回值-14" tabindex="-1"><a class="header-anchor" href="#返回值-14" aria-hidden="true">#</a> 返回值</h4>',3),rt=t("code",null,"BroadcastReceiver",-1),ct=o('<hr><h3 id="sendbroadcast" tabindex="-1"><a class="header-anchor" href="#sendbroadcast" aria-hidden="true">#</a> sendBroadcast</h3><p>▸ <strong>sendBroadcast</strong>(<code>target</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>根据选项构造一个Intent，并发送该广播。</p><p><strong><code>参见</code></strong></p>',5),pt=t("h4",{id:"参数-15",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-15","aria-hidden":"true"},"#"),e(" 参数")],-1),ht=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),ut=t("td",{style:{"text-align":"left"}},[t("code",null,"target")],-1),gt={style:{"text-align":"left"}},ft=t("code",null,"IntentOptionsWithRoot",-1),kt=t("td",{style:{"text-align":"left"}},[e("目标广播的名称或者根据Intent选项构造的广播 Intent。若target为字符串，则： * "),t("code",null,"inspect_layout_hierarchy"),e(" 布局层次分析 * "),t("code",null,"inspect_layout_bounds"),e(" 布局范围分析 但是这些广播在打包后应用中不可用。")],-1),vt=o('<h4 id="返回值-15" tabindex="-1"><a class="header-anchor" href="#返回值-15" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Promise，如果是使用root权限，则会等待执行shell命令后返回；如果不是使用root权限，则会直接返回。</p><hr><h3 id="sendemail" tabindex="-1"><a class="header-anchor" href="#sendemail" aria-hidden="true">#</a> sendEmail</h3><p>▸ <strong>sendEmail</strong>(<code>options</code>): <code>void</code></p><p>启用发送邮件的应用。如果没有安装邮箱应用，则抛出<code>ActivityNotException</code>。</p><h4 id="参数-16" tabindex="-1"><a class="header-anchor" href="#参数-16" aria-hidden="true">#</a> 参数</h4>',8),mt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),yt=t("td",{style:{"text-align":"left"}},[t("code",null,"options")],-1),bt={style:{"text-align":"left"}},xt=t("code",null,"EmailOptions",-1),_t=t("td",{style:{"text-align":"left"}},"邮件发送选项",-1),qt=o('<h4 id="返回值-16" tabindex="-1"><a class="header-anchor" href="#返回值-16" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="startactivity" tabindex="-1"><a class="header-anchor" href="#startactivity" aria-hidden="true">#</a> startActivity</h3><p>▸ <strong>startActivity</strong>(<code>target</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>根据选项构造一个Intent，并启动该Activity。</p><p><strong><code>参见</code></strong></p>',7),It=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> startActivity <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;SEND&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;file:///sdcard/1.txt&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-17" tabindex="-1"><a class="header-anchor" href="#参数-17" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>target</code></td><td style="text-align:left;"><code>&quot;console&quot;</code></td><td style="text-align:left;"><code>&quot;settings&quot;</code></td></tr></tbody></table><h4 id="返回值-17" tabindex="-1"><a class="header-anchor" href="#返回值-17" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Promise，如果是使用root权限，则会等待执行shell命令后返回；如果不是使用root权限，则会直接返回。<strong>不管如何，都不会等待Activity启动才返回。</strong></p><hr><h3 id="startservice" tabindex="-1"><a class="header-anchor" href="#startservice" aria-hidden="true">#</a> startService</h3><p>▸ <strong>startService</strong>(<code>target</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>根据选项构造一个Intent，并启动该服务。</p><p><strong><code>参见</code></strong></p>`,12),At=t("h4",{id:"参数-18",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-18","aria-hidden":"true"},"#"),e(" 参数")],-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),Pt=t("td",{style:{"text-align":"left"}},[t("code",null,"target")],-1),Nt={style:{"text-align":"left"}},Ot=t("code",null,"IntentOptionsWithRoot",-1),Bt=t("td",{style:{"text-align":"left"}},"构造Service Intent的选项",-1),Rt=o('<h4 id="返回值-18" tabindex="-1"><a class="header-anchor" href="#返回值-18" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>Promise，如果是使用root权限，则会等待执行shell命令后返回；如果不是使用root权限，则会直接返回。<strong>不管如何，都不会等待Service启动才返回。</strong></p><hr><h3 id="uninstall" tabindex="-1"><a class="header-anchor" href="#uninstall" aria-hidden="true">#</a> uninstall</h3><p>▸ <strong>uninstall</strong>(<code>packageName</code>): <code>void</code></p><p>卸载应用。执行后会会弹出卸载应用的提示框。如果该包名的应用未安装，由应用卸载程序处理，可能弹出&quot;未找到应用&quot;的提示。</p><h4 id="参数-19" tabindex="-1"><a class="header-anchor" href="#参数-19" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">包名</td></tr></tbody></table><h4 id="返回值-19" tabindex="-1"><a class="header-anchor" href="#返回值-19" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="unregisterbroadcastreceiver" tabindex="-1"><a class="header-anchor" href="#unregisterbroadcastreceiver" aria-hidden="true">#</a> unregisterBroadcastReceiver</h3><p>▸ <strong>unregisterBroadcastReceiver</strong>(<code>receiver</code>): <code>void</code></p><h4 id="参数-20" tabindex="-1"><a class="header-anchor" href="#参数-20" aria-hidden="true">#</a> 参数</h4>',15),Ut=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型")])],-1),St=t("td",{style:{"text-align":"left"}},[t("code",null,"receiver")],-1),wt={style:{"text-align":"left"}},Et=t("code",null,"BroadcastReceiver",-1),Mt=o(`<h4 id="返回值-20" tabindex="-1"><a class="header-anchor" href="#返回值-20" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="viewfile" tabindex="-1"><a class="header-anchor" href="#viewfile" aria-hidden="true">#</a> viewFile</h3><p>▸ <strong>viewFile</strong>(<code>file</code>): <code>void</code></p><p>用其他应用查看文件。文件不存在的情况由查看文件的应用处理。 如果找不出可以查看该文件的应用，则抛出<code>ActivityNotException</code>。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;nodejs&quot;;
const app = require(&quot;app&quot;);
app.viewFile(&quot;/sdcard/1.txt&quot;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-21" tabindex="-1"><a class="header-anchor" href="#参数-21" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>file</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">文件路径</td></tr></tbody></table><h4 id="返回值-21" tabindex="-1"><a class="header-anchor" href="#返回值-21" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p>`,11);function Ft(Qt,Wt){const n=d("RouterLink"),l=d("ExternalLinkIcon");return r(),c("div",null,[h,t("ul",null,[t("li",null,[a(n,{to:"/v9/generated/interfaces/app.BroadcastReceiver.html"},{default:s(()=>[e("BroadcastReceiver")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/interfaces/app.EmailOptions.html"},{default:s(()=>[e("EmailOptions")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/interfaces/app.IntentOptions.html"},{default:s(()=>[e("IntentOptions")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/interfaces/app.IntentOptionsWithRoot.html"},{default:s(()=>[e("IntentOptionsWithRoot")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/interfaces/app.PMOptions.html"},{default:s(()=>[e("PMOptions")]),_:1})])]),u,t("ul",null,[t("li",null,[a(n,{to:"/v9/generated/modules/app.html#packagename"},{default:s(()=>[e("packageName")]),_:1})])]),g,t("ul",null,[t("li",null,[a(n,{to:"/v9/generated/modules/app.html#editfile"},{default:s(()=>[e("editFile")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#getapkinfo"},{default:s(()=>[e("getApkInfo")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#getappname"},{default:s(()=>[e("getAppName")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#getinstalledapps"},{default:s(()=>[e("getInstalledApps")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#getinstalledpackages"},{default:s(()=>[e("getInstalledPackages")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#getpackagename"},{default:s(()=>[e("getPackageName")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#geturiforfile"},{default:s(()=>[e("getUriForFile")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#intenttoshell"},{default:s(()=>[e("intentToShell")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#launch"},{default:s(()=>[e("launch")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#launchapp"},{default:s(()=>[e("launchApp")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#makeintent"},{default:s(()=>[e("makeIntent")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#openappsettings"},{default:s(()=>[e("openAppSettings")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#openurl"},{default:s(()=>[e("openUrl")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#parseuri"},{default:s(()=>[e("parseUri")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#registerbroadcastreceiver"},{default:s(()=>[e("registerBroadcastReceiver")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#sendbroadcast"},{default:s(()=>[e("sendBroadcast")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#sendemail"},{default:s(()=>[e("sendEmail")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#startactivity"},{default:s(()=>[e("startActivity")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#startservice"},{default:s(()=>[e("startService")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#uninstall"},{default:s(()=>[e("uninstall")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#unregisterbroadcastreceiver"},{default:s(()=>[e("unregisterBroadcastReceiver")]),_:1})]),t("li",null,[a(n,{to:"/v9/generated/modules/app.html#viewfile"},{default:s(()=>[e("viewFile")]),_:1})])]),f,t("p",null,[e("[PackageManager.getPackageArchiveInfo]("),t("a",k,[e("https://developer.android.google.cn/reference/android/content/pm/PackageManager#getPackageArchiveInfo"),a(l)]),e("(java.lang.String, int))")]),v,t("table",null,[m,t("tbody",null,[y,t("tr",null,[b,t("td",x,[a(n,{to:"/v9/generated/interfaces/app.PMOptions.html"},{default:s(()=>[_]),_:1})]),q])])]),I,t("p",null,[t("a",A,[e("PackageManager.getInstalledApplication"),a(l)])]),j,t("table",null,[P,t("tbody",null,[t("tr",null,[N,t("td",O,[a(n,{to:"/v9/generated/interfaces/app.PMOptions.html"},{default:s(()=>[B]),_:1})]),R])])]),U,t("p",null,[t("a",S,[e("PackageManager.getInstalledPackages"),a(l)])]),w,t("table",null,[E,t("tbody",null,[t("tr",null,[M,t("td",F,[a(n,{to:"/v9/generated/interfaces/app.PMOptions.html"},{default:s(()=>[Q]),_:1})]),W])])]),T,t("p",null,[t("a",V,[e("adb am"),a(l)])]),C,t("table",null,[L,t("tbody",null,[t("tr",null,[D,t("td",$,[a(n,{to:"/v9/generated/interfaces/app.IntentOptions.html"},{default:s(()=>[z]),_:1})]),G])])]),H,t("p",null,[t("a",J,[e("Restrictions on starting activities from the background"),a(l)])]),K,t("p",null,[t("a",X,[e("Restrictions on starting activities from the background"),a(l)])]),Y,t("table",null,[Z,t("tbody",null,[t("tr",null,[tt,t("td",et,[a(n,{to:"/v9/generated/interfaces/app.IntentOptions.html"},{default:s(()=>[at]),_:1})]),nt])])]),st,t("p",null,[e("▸ "),ot,e("("),lt,e("): "),a(n,{to:"/v9/generated/interfaces/app.BroadcastReceiver.html"},{default:s(()=>[dt]),_:1})]),it,t("p",null,[a(n,{to:"/v9/generated/interfaces/app.BroadcastReceiver.html"},{default:s(()=>[rt]),_:1})]),ct,t("p",null,[a(n,{to:"/v9/generated/modules/app.html#makeintent"},{default:s(()=>[e("makeIntent")]),_:1})]),pt,t("table",null,[ht,t("tbody",null,[t("tr",null,[ut,t("td",gt,[a(n,{to:"/v9/generated/interfaces/app.IntentOptionsWithRoot.html"},{default:s(()=>[ft]),_:1})]),kt])])]),vt,t("table",null,[mt,t("tbody",null,[t("tr",null,[yt,t("td",bt,[a(n,{to:"/v9/generated/interfaces/app.EmailOptions.html"},{default:s(()=>[xt]),_:1})]),_t])])]),qt,t("p",null,[a(n,{to:"/v9/generated/modules/app.html#makeintent"},{default:s(()=>[e("makeIntent")]),_:1})]),It,t("p",null,[a(n,{to:"/v9/generated/modules/app.html#makeintent"},{default:s(()=>[e("makeIntent")]),_:1})]),At,t("table",null,[jt,t("tbody",null,[t("tr",null,[Pt,t("td",Nt,[a(n,{to:"/v9/generated/interfaces/app.IntentOptionsWithRoot.html"},{default:s(()=>[Ot]),_:1})]),Bt])])]),Rt,t("table",null,[Ut,t("tbody",null,[t("tr",null,[St,t("td",wt,[a(n,{to:"/v9/generated/interfaces/app.BroadcastReceiver.html"},{default:s(()=>[Et]),_:1})])])])]),Mt])}const Ct=i(p,[["render",Ft],["__file","app.html.vue"]]);export{Ct as default};
