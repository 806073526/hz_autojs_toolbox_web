import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as d,c as l,d as e,b as s,w as t,e as a,f as o}from"./app-ff93bfbc.js";const i={},p=o(`<p>Deferred类，用于创建Promise的延迟对象，而无需使用<code>new Promise</code>。通过resolve或reject函数可以设置Promise的状态。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Deferred <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lang&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Deferred</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        d<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="类型参数" tabindex="-1"><a class="header-anchor" href="#类型参数" aria-hidden="true">#</a> 类型参数</h2><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h3>`,7),u=e("h3",{id:"accessors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),a(" Accessors")],-1),h=e("h3",{id:"方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),a(" 方法")],-1),f=o('<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Deferred</strong>&lt;<code>T</code>&gt;(<code>keepRunning?</code>)</p><h4 id="类型参数-1" tabindex="-1"><a class="header-anchor" href="#类型参数-1" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>keepRunning</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>true</code></td></tr></tbody></table><h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h3><p>• <code>get</code> <strong>value</strong>(): <code>undefined</code> | <code>T</code></p><p>获取Deferred的值，如果为pending或rejected状态，则返回undefined。</p><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>undefined</code> | <code>T</code></p><h2 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h2><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h3><p>▸ <strong>promise</strong>(): <code>Promise</code>&lt;<code>T</code>&gt;</p><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>T</code>&gt;</p><hr><h3 id="reject" tabindex="-1"><a class="header-anchor" href="#reject" aria-hidden="true">#</a> reject</h3><p>▸ <strong>reject</strong>(<code>reason?</code>): <code>boolean</code></p><p>使用给定的reason作为原因或异常设置Promise的状态为rejected。若已经resolved或rejected状态，则返回false。</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>reason?</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><hr><h3 id="resolve" tabindex="-1"><a class="header-anchor" href="#resolve" aria-hidden="true">#</a> resolve</h3><p>▸ <strong>resolve</strong>(<code>value</code>): <code>boolean</code></p><p>使用给定的值设置Promise的状态为fulfilled。若已经是fulfilled或rejected状态，则返回false。</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p>',34);function k(b,g){const n=r("RouterLink");return d(),l("div",null,[e("p",null,[s(n,{to:"/v9/generated/modules/lang.html"},{default:t(()=>[a("lang")]),_:1}),a(".Deferred")]),p,e("ul",null,[e("li",null,[s(n,{to:"/v9/generated/classes/lang.Deferred.html#constructor"},{default:t(()=>[a("constructor")]),_:1})])]),u,e("ul",null,[e("li",null,[s(n,{to:"/v9/generated/classes/lang.Deferred.html#value"},{default:t(()=>[a("value")]),_:1})])]),h,e("ul",null,[e("li",null,[s(n,{to:"/v9/generated/classes/lang.Deferred.html#promise"},{default:t(()=>[a("promise")]),_:1})]),e("li",null,[s(n,{to:"/v9/generated/classes/lang.Deferred.html#reject"},{default:t(()=>[a("reject")]),_:1})]),e("li",null,[s(n,{to:"/v9/generated/classes/lang.Deferred.html#resolve"},{default:t(()=>[a("resolve")]),_:1})])]),f])}const x=c(i,[["render",k],["__file","lang.Deferred.html.vue"]]);export{x as default};
