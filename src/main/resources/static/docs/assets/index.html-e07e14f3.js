import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as c,c as l,d as o,e,b as s,w as r}from"./app-ff93bfbc.js";const _={},d=o("p",null,[e("基于控件的操作依赖于无障碍服务，因此最好在脚本开头使用"),o("code",null,"auto()"),e("函数来确保无障碍服务已经启用。如果运行到某个需要权限的语句无障碍服务并没启动，则会抛出异常并跳转到无障碍服务界面。这样的用户体验并不好，因为需要重新运行脚本，后续会加入等待无障碍服务启动并让脚本继续运行的函数。")],-1),u=o("p",null,[e("您也可以在脚本开头使用"),o("code",null,'"auto";'),e("表示这个脚本需要无障碍服务，但是不推荐这种做法，因为这个标记必须在脚本的最开头(前面不能有注释或其他语句、空格等)，我们推荐使用"),o("code",null,"auto()"),e("函数来确保无障碍服务已启用。")],-1);function i(m,p){const t=a("RouterLink");return c(),l("div",null,[o("p",null,[e("基于控件的操作指的是选择屏幕上的控件，获取其信息或对其进行操作。对于一般软件而言，基于控件的操作对不同机型有很好的兼容性；但是对于游戏而言，由于游戏界面并不是由控件构成，无法采用本章节的方法，也无法使用本章节的函数。有关游戏脚本的编写，请参考"),s(t,{to:"/v8/coordinatesBasedAutomation.html"},{default:r(()=>[e("自动化 - 坐标操作")]),_:1}),e("。")]),d,u])}const x=n(_,[["render",i],["__file","index.html.vue"]]);export{x as default};
