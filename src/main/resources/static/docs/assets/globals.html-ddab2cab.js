import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,d as s,e as n,b as a,w as u,f as e}from"./app-ff93bfbc.js";const r={},d=e(`<ul><li>exports</li><li>module</li><li>require() 以下的对象是特定于 Auto.js 的。 有些内置对象是 JavaScript 语言本身的一部分，它们也是全局的。</li></ul><p>一些模块中的函数为了使用方便也可以直接全局使用，这些函数在此不再赘述。例如timers模块的setInterval, setTimeout等函数。</p><h2 id="sleep-n" tabindex="-1"><a class="header-anchor" href="#sleep-n" aria-hidden="true">#</a> sleep(n)</h2><ul><li><code>n</code> {number} 毫秒数</li></ul><p>暂停运行n<strong>毫秒</strong>的时间。1秒等于1000毫秒。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//暂停5秒</span>
<span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setclip-text" tabindex="-1"><a class="header-anchor" href="#setclip-text" aria-hidden="true">#</a> setClip(text)</h2><ul><li><code>text</code> {string} 文本</li></ul><p>设置剪贴板内容。此剪贴板即系统剪贴板，在一般应用的输入框中&quot;粘贴&quot;既可使用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setClip</span><span class="token punctuation">(</span><span class="token string">&quot;剪贴板文本&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="getclip" tabindex="-1"><a class="header-anchor" href="#getclip" aria-hidden="true">#</a> getClip()</h2><ul><li>返回 {string}</li></ul><p>返回系统剪贴板的内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;剪贴板内容为:&quot;</span> <span class="token operator">+</span> <span class="token function">getClip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="toast-message" tabindex="-1"><a class="header-anchor" href="#toast-message" aria-hidden="true">#</a> toast(message)</h2><ul><li><code>message</code> {string} 要显示的信息</li></ul><p>以气泡显示信息message几秒。(具体时间取决于安卓系统，一般都是2秒)</p><p>注意，信息的显示是&quot;异步&quot;执行的，并且，不会等待信息消失程序才继续执行。如果在循环中执行该命令，可能出现脚本停止运行后仍然有不断的气泡信息出现的情况。 例如:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">toast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行这段程序以后，会很快执行完成，且不断弹出消息，在任务管理中关闭所有脚本也无法停止。 要保证气泡消息才继续执行可以用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">toast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者修改toast函数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> _toast_ <span class="token operator">=</span> toast<span class="token punctuation">;</span>
<span class="token function-variable function">toast</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">_toast_</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">toast</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="toastlog-message" tabindex="-1"><a class="header-anchor" href="#toastlog-message" aria-hidden="true">#</a> toastLog(message)</h2><ul><li><code>message</code> {string} 要显示的信息</li></ul><p>相当于<code>toast(message);log(message)</code>。显示信息message并在控制台中输出。参见console.log。</p><h2 id="exit" tabindex="-1"><a class="header-anchor" href="#exit" aria-hidden="true">#</a> exit()</h2><p>立即停止脚本运行。</p><p>立即停止是通过抛出<code>ScriptInterruptedException</code>来实现的，因此如果用<code>try...catch</code>把exit()函数的异常捕捉，则脚本不会立即停止，仍会运行几行后再停止。</p><h2 id="random-min-max" tabindex="-1"><a class="header-anchor" href="#random-min-max" aria-hidden="true">#</a> random(min, max)</h2><ul><li><code>min</code> {number} 随机数产生的区间下界</li><li><code>max</code> {number} 随机数产生的区间上界</li><li>返回 {number}</li></ul><p>返回一个在[min...max]之间的随机数。例如random(0, 2)可能产生0, 1, 2。</p><h2 id="random" tabindex="-1"><a class="header-anchor" href="#random" aria-hidden="true">#</a> random()</h2><ul><li>返回 {number}</li></ul><p>返回在[0, 1)的随机浮点数。</p><h2 id="requiresapi-api" tabindex="-1"><a class="header-anchor" href="#requiresapi-api" aria-hidden="true">#</a> requiresApi(api)</h2><ul><li><code>api</code> {number} Android版本号</li></ul><p>表示此脚本需要Android API版本达到指定版本才能运行。例如<code>requiresApi(19)</code>表示脚本需要在Android 4.4以及以上运行。</p><p>调用该函数时会判断运行脚本的设备系统的版本号，如果没有达到要求则抛出异常。</p><p>可以参考以下Android API和版本的对照表:</p><p>平台版本： API级别</p><p>Android 7.0： 24</p><p>Android 6.0： 23</p><p>Android 5.1： 22</p><p>Android 5.0： 21</p><p>Android 4.4W： 20</p><p>Android 4.4： 19</p><p>Android 4.3： 18</p><h2 id="requiresautojsversion-version" tabindex="-1"><a class="header-anchor" href="#requiresautojsversion-version" aria-hidden="true">#</a> requiresAutojsVersion(version)</h2><ul><li><code>version</code> {string} | {number} Auto.js的版本或版本号</li></ul><p>表示此脚本需要Auto.js版本达到指定版本才能运行。例如<code>requiresAutojsVersion(&quot;3.0.0 Beta&quot;)</code>表示脚本需要在Auto.js 3.0.0 Beta以及以上运行。</p><p>调用该函数时会判断运行脚本的Auto.js的版本号，如果没有达到要求则抛出异常。</p><p>version参数可以是整数表示版本号，例如<code>requiresAutojsVersion(250)</code>；也可以是字符串格式表示的版本，例如&quot;3.0.0 Beta&quot;, &quot;3.1.0 Alpha4&quot;, &quot;3.2.0&quot;等。</p><p>可以通过<code>app.autojs.versionCode</code>和<code>app.autojs.versionName</code>获取当前的Auto.js版本号和版本。</p><h2 id="runtime-requestpermissions-permissions" tabindex="-1"><a class="header-anchor" href="#runtime-requestpermissions-permissions" aria-hidden="true">#</a> runtime.requestPermissions(permissions)</h2><ul><li><code>permissions</code> {string[]} 权限的字符串数组</li></ul><p>动态申请安卓的权限。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//请求GPS权限</span>
runtime<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;access_fine_location&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>尽管安卓有很多权限，但必须写入Manifest才能动态申请，为了防止权限的滥用，目前Auto.js只能额外申请两个权限：</p><ul><li><code>access_fine_location</code> GPS权限</li><li><code>record_audio</code> 录音权限</li></ul><p>您可以通过APK编辑器来增加Auto.js以及Auto.js打包的应用的权限。</p>`,61),k={href:"https://developer.android.com/guide/topics/permissions/overview",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="runtime-loadjar-path" tabindex="-1"><a class="header-anchor" href="#runtime-loadjar-path" aria-hidden="true">#</a> runtime.loadJar(path)</h2><ul><li><code>path</code> {string} jar文件路径</li></ul><p>加载目标jar文件，加载成功后将可以使用该Jar文件的类。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 加载jsoup.jar</span>
runtime<span class="token punctuation">.</span><span class="token function">loadJar</span><span class="token punctuation">(</span><span class="token string">&quot;./jsoup.jar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 使用jsoup解析html</span>
<span class="token function">importClass</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>jsoup<span class="token punctuation">.</span>Jsoup<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">log</span><span class="token punctuation">(</span>Jsoup<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">&quot;./test.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"https://jsoup.org/download",target:"_blank",rel:"noopener noreferrer"},h=e(`<h2 id="runtime-loaddex-path" tabindex="-1"><a class="header-anchor" href="#runtime-loaddex-path" aria-hidden="true">#</a> runtime.loadDex(path)</h2><ul><li><code>path</code> {string} dex文件路径</li></ul><p>加载目标dex文件，加载成功后将可以使用该dex文件的类。</p><p>因为加载jar实际上是把jar转换为dex再加载的，因此加载dex文件会比jar文件快得多。可以使用Android SDK的build tools的dx工具把jar转换为dex。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> dexFilePath <span class="token operator">=</span> <span class="token string">&#39;jbdz2019.dex&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>dexFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">loadDex</span><span class="token punctuation">(</span>dexFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">Packages</span><span class="token punctuation">[</span><span class="token string">&quot;jbdz2019&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">__hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;dex文件不存在&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以通过一些方法，将js文件，转换成dex文件。<br> 当然，想指望dex来保证安全性也是不行的，dex都自身难保，需要其他方式来混淆它自己。<br> dex混淆也就是大家常听的app加固。<br> 相对安全的方式，是先将js代码混淆，然后将js文件转换成dex。</p><h2 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> context</h2><p>全局变量。一个android.content.Context对象。</p><p>注意该对象为ApplicationContext，因此不能用于界面、对话框等的创建。</p><h2 id="currentpackage" tabindex="-1"><a class="header-anchor" href="#currentpackage" aria-hidden="true">#</a> currentPackage()</h2><ul><li><code>package_name</code> {string} 取当前正在运行的应用的包名</li></ul><p>获取应用包名</p><p>返回最近一次监测到的正在运行的应用的包名，一般可以认为就是当前正在运行的应用的包名。</p><p>此函数依赖于无障碍服务，如果服务未启动，则抛出异常并提示用户启动。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//获取某音包名</span>
<span class="token comment">//com.ss.android.ugc.aweme</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token function">currentPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="currentactivity" tabindex="-1"><a class="header-anchor" href="#currentactivity" aria-hidden="true">#</a> currentActivity()</h2><ul><li><code>activity</code> {string} 取当前正在运行的应用Activity的名称</li></ul><p>获取应用Activity</p><p>返回最近一次监测到的正在运行的Activity的名称，一般可以认为就是当前正在运行的Activity的名称。</p><p>此函数依赖于无障碍服务，如果服务未启动，则抛出异常并提示用户启动。</p><blockquote><p>auto.js 7以下版本，在部分小米机型下，可能会出现获取错误。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//某音会话页</span>
<span class="token comment">//com.ss.android.ugc.aweme.im.sdk.chat.ChatRoomActivity</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token function">currentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function b(g,x){const o=p("RouterLink"),t=p("ExternalLinkIcon");return c(),l("div",null,[s("p",null,[n("全局变量和函数在所有模块中均可使用。 但以下变量的作用域只在模块内，详见 "),a(o,{to:"/v8/modules.html"},{default:u(()=>[n("module")]),_:1}),n("：")]),d,s("p",null,[n("安卓所有的权限列表参见"),s("a",k,[n("Permissions Overview"),a(t)]),n("。（并没有用）")]),m,s("p",null,[n("(jsoup是一个Java实现的解析Html DOM的库，可以在"),s("a",v,[n("Jsoup"),a(t)]),n("下载)")]),h])}const _=i(r,[["render",b],["__file","globals.html.vue"]]);export{_ as default};
