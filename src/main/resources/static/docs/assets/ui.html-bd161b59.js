import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as u,c as l,d as s,e as n,b as a,w as e,a as r,f as p}from"./app-ff93bfbc.js";const k={},d=p('<h2 id="拟解决的问题" tabindex="-1"><a class="header-anchor" href="#拟解决的问题" aria-hidden="true">#</a> 拟解决的问题</h2><p>运行脚本前，我们往往需要用户开启一些必须的权限。由于用户水平不同，造成部分人群使用困难，甚至不知道需要先开启权限，这与无障碍权限“以人为本”的初衷相违背，因此我们需要一个直观的引导界面，以及方便的跳转方案，降低沟通成本，提升用户使用体验。</p><h2 id="解决思路" tabindex="-1"><a class="header-anchor" href="#解决思路" aria-hidden="true">#</a> 解决思路</h2><p>1）枚举常见权限</p><p>2）获取权限状态</p><p>3）开启或跳转到权限开启界面</p><p>4）将权限状态与ui界面关联互动</p><h2 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤" aria-hidden="true">#</a> 具体步骤</h2><p>我们运行脚本，常见的权限主要有无障碍服务、悬浮窗权限、前台服务、无障碍稳定模式、截图权限、查看使用统计权限、后台弹出权限（小米手机的miui系统），下面将对这7个权限的状态和开启办法逐一进行讨论。</p><h3 id="无障碍服务" tabindex="-1"><a class="header-anchor" href="#无障碍服务" aria-hidden="true">#</a> 无障碍服务</h3>',10),v=s("a",{href:"#"},"上一篇博客",-1),m=s("h3",{id:"悬浮窗权限",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#悬浮窗权限","aria-hidden":"true"},"#"),n(" 悬浮窗权限")],-1),h=p(`<p>使用activity.startActivityForResult()有两个核心部分，一个发起带有标记的intent，另一个接收此标记的监听。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> mIntent <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">intent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;android.settings.action.MANAGE_OVERLAY_PERMISSION&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;package:&quot;</span> <span class="token operator">+</span> context<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//这里把数字1作为标记</span>
activity<span class="token punctuation">.</span><span class="token function">startActivityForResult</span><span class="token punctuation">(</span>mIntent<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
activity<span class="token punctuation">.</span><span class="token function">getEventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;activity_result&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">requestCode<span class="token punctuation">,</span> resultCode<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//requestCode为1说明是跳转到开启悬浮窗权限的activity结束的回调</span>
        <span class="token function">toast</span><span class="token punctuation">(</span>floaty<span class="token punctuation">.</span><span class="token function">checkPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//这里可以进行ui界面的同步</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前台服务" tabindex="-1"><a class="header-anchor" href="#前台服务" aria-hidden="true">#</a> 前台服务</h3>`,3),g=s("p",null,"查询是否开启前台服务：$settings.isEnabled(‘foreground_service’)",-1),_=s("p",null,"设置开启前台服务：$settings.setEnabled(‘foreground_service’, true);",-1),b=s("h3",{id:"无障碍稳定模式",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#无障碍稳定模式","aria-hidden":"true"},"#"),n(" 无障碍稳定模式")],-1),f={href:"https://developer.android.google.cn/reference/android/accessibilityservice/AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS",target:"_blank",rel:"noopener noreferrer"},y=s("p",null,[n("稳定模式的查询可以通过"),s("code",null,"$settings.isEnabled('stable_mode')"),n("来查询。")],-1),x=s("p",null,"设置开启稳定模式：$settings.setEnabled(‘stable_mode’, true);",-1),S=s("h3",{id:"截图权限",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#截图权限","aria-hidden":"true"},"#"),n(" 截图权限")],-1),E=s("p",null,"这里特别提一下，安卓11以上设备，一般可以不申请截图权限，直接使用无障碍权限可以获取到ajtojspro的image对象",-1),q=s("blockquote",null,[s("p",null,"作者注：这种方式截图频繁有限制，一般是1秒一次。")],-1),C=s("h3",{id:"查看使用统计权限",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#查看使用统计权限","aria-hidden":"true"},"#"),n(" 查看使用统计权限")],-1),A=p(`<p>由于官方没有提供此权限的查询办法，这里我查阅安卓文档，自行封装了一份，可以判断是否有此权限</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">checkSystemService</span><span class="token punctuation">(</span><span class="token string">&quot;usage_stats&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">checkSystemService</span><span class="token punctuation">(</span><span class="token parameter">service</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppOpsManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
    appOps <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token constant">APP_OPS_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    mode <span class="token operator">=</span> appOps<span class="token punctuation">.</span><span class="token function">checkOpNoThrow</span><span class="token punctuation">(</span><span class="token string">&quot;android:get_&quot;</span> <span class="token operator">+</span> service<span class="token punctuation">,</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Process<span class="token punctuation">.</span><span class="token function">myUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>granted <span class="token operator">=</span> mode <span class="token operator">==</span> AppOpsManager<span class="token punctuation">.</span><span class="token constant">MODE_ALLOWED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跳转直接使用intent即可</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>app.startActivity({
    action: &quot;android.settings.USAGE_ACCESS_SETTINGS&quot;,
});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="后台弹出权限-miui系统" tabindex="-1"><a class="header-anchor" href="#后台弹出权限-miui系统" aria-hidden="true">#</a> 后台弹出权限（miui系统）</h3>`,5),j={href:"/v8/app#applaunchpackagepackagename",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">checkMiuiPermission</span><span class="token punctuation">(</span><span class="token number">10021</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">checkMiuiPermission</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//flag为10021是后台弹出界面,为10016是NFC权限</span>
    <span class="token function">importClass</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppOpsManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> appOps <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token constant">APP_OPS_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> myClass <span class="token operator">=</span> util<span class="token punctuation">.</span>java<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Class&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        myClass<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Integer<span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">;</span>
        myClass<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Integer<span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">;</span>
        myClass<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.String&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> method <span class="token operator">=</span> appOps<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;checkOpNoThrow&quot;</span><span class="token punctuation">,</span> myClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> op <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Integer</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>appOps<span class="token punctuation">,</span> op<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Integer</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Process<span class="token punctuation">.</span><span class="token function">myUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">getPackageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result <span class="token operator">==</span> AppOpsManager<span class="token punctuation">.</span><span class="token constant">MODE_ALLOWED</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function O(P,I){const t=c("RouterLink"),o=c("ExternalLinkIcon");return u(),l("div",null,[d,s("p",null,[n("无障碍服务是否开启可以通过"),a(t,{to:"/v8/automator/api.html#autoservice"},{default:e(()=>[n("auto.service")]),_:1}),n("或"),a(t,{to:"/v8/automator/api.html#auto-rootinactivewindow"},{default:e(()=>[n("auto.rootInActiveWindow")]),_:1}),n("获取，开启方式在"),v,n("中已经进行了详细的介绍，这里不再赘述。")]),m,s("p",null,[n("悬浮窗权限的判断autojspro已经有封装好的方法，可以直接用"),a(t,{to:"/v8/floaty.html#floaty-checkpermission"},{default:e(()=>[n("floaty.checkPermission()")]),_:1}),n("的返回值进行判断，此权限的跳转，这里介绍两种方法，一种是autojspro自带的基于context.startActivity封装的"),a(t,{to:"/v8/floaty.html#floatyrequestpermission"},{default:e(()=>[n("floaty.requestPermission()")]),_:1}),n("，用起来比较简单。另外介绍一种基于activity.startActivityForResult()封装的方法，可以在activity结束的回调里进行自己的操作，相对复杂，但是一些情形下用起来比较方便，同时也可以初步学习activity.startActivityForResult()的用法，不仅可以用在权限获取，在媒体库选取等方面也同样适用。这里仅展示原理以及相关代码，不做过多细致的讲解。")]),h,s("p",null,[n("前台服务的开启和查询，官方的"),a(t,{to:"/v8/settings.html"},{default:e(()=>[n("Settings")]),_:1}),n("模块都进行了很好地封装，我们可以直接使用。")]),g,_,b,s("p",null,[n("无障碍有一个稳定模式，使用场景不多，这里可以看安卓文档"),s("a",f,[n("AccessibilityServiceInfo"),a(o)]),n("里的相关说明，大致意思就是不访问不重要的视图。")]),y,x,S,s("p",null,[n("目前新版的autojspro的"),a(t,{to:"/v8/images.html"},{default:e(()=>[n("images模块")]),_:1}),n("也支持了截图权限的查询、申请和注销，使用起来也很方便")]),s("p",null,[n("查询是否有截图权限："),a(t,{to:"/v8/images.html#images-getscreencaptureoptions"},{default:e(()=>[n("$images.getScreenCaptureOptions()")]),_:1})]),s("p",null,[n("请求截图权限："),a(t,{to:"/v8/images.html#images-requestscreencapture-landscap"},{default:e(()=>[n("$images.requestScreenCapture(options)")]),_:1})]),s("p",null,[n("注销截图权限："),a(t,{to:"/v8/images.html#images-stopscreencapture"},{default:e(()=>[n("$images.stopScreenCapture()")]),_:1})]),E,s("p",null,[n("安卓11+使用无障碍权限截图："),a(t,{to:"/v8/automator/api.html#automator-takescreenshot"},{default:e(()=>[n("$automator.takeScreenshot()")]),_:1})]),q,C,s("p",null,[n("这个权限一般使用较少，但个别时候也有大作用，比如为了"),a(t,{to:"/v8/globals.html#currentpackage"},{default:e(()=>[n("currentPackage()")]),_:1}),n("获取最近包名更准确，或者获取某一应用的运行状态。")]),A,s("p",null,[n("这个权限主要是会影响到"),s("a",j,[n("app.launchPackage(packageName)"),a(o)]),n("打开未启动的应用，因此必要时我们可以判断是否有该权限，然后对用户进行提示，此权限由于是miui系统自己创造的，且没有文档说明，研究起来用了不少时间，这里我直接贴出来源码")]),w,r(` ## 与UI界面互动关联

此部分是对以上内容的实战升华，建议新入门的同学自己动手写一下，对自己会很有提升。我也自己写了一份，可以参考学习，[点击这里](https://gitee.com/little-alei/blog-source-code/blob/master/Ui界面与权限互动体验.js)查看，希望同学们能够掌握，也欢迎多提意见。（抠脚本人QQ：742374184，接定制，指导教学）。 `)])}const L=i(k,[["render",O],["__file","ui.html.vue"]]);export{L as default};
