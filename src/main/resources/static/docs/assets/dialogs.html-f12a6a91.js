import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as p,d as t,b as e,w as a,e as n,f as l}from"./app-ff93bfbc.js";const r={},u=l('<p>dialogs模块用于显示弹框，一般用于提示用户关键信息、输入信息，完成简易的交互。</p><p>本模块提供了多种配置模式，能够以应用内弹窗或悬浮窗形式显示确认框、输入框、单选框、多选框等，也可以自定义弹出框显示的View。</p><p>可使用<code>const dialogs = require(&#39;dialogs&#39;);</code>导入dialogs模块。然后通过比如<code>dialogs.showInputDialog(&quot;输入框标题&quot;, &quot;输入框默认文本&quot;);</code>的方式调用模块中的方法。</p><p>也可以直接导入要使用的函数，比如<code>const { showInputDialog } = require(&#39;dialogs&#39;); showInputDialog(&quot;输入框标题&quot;, &quot;输入框默认文本&quot;);</code>。</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3>',6),h=t("h3",{id:"类型别名",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#类型别名","aria-hidden":"true"},"#"),n(" 类型别名")],-1),g=t("h3",{id:"变量",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),n(" 变量")],-1),_=t("h3",{id:"函数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),n(" 函数")],-1),k=t("h2",{id:"类型别名-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#类型别名-1","aria-hidden":"true"},"#"),n(" 类型别名")],-1),f=t("h3",{id:"dialog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#dialog","aria-hidden":"true"},"#"),n(" Dialog")],-1),m=t("strong",null,"Dialog",-1),y=t("code",null,"android.app.Dialog",-1),v=t("code",null,"DialogExt",-1),x={href:"https://developer.android.google.cn/reference/android/app/Dialog.html",target:"_blank",rel:"noopener noreferrer"},b=l('<hr><h3 id="dialogtype" tabindex="-1"><a class="header-anchor" href="#dialogtype" aria-hidden="true">#</a> DialogType</h3><p>Ƭ <strong>DialogType</strong>: <code>&quot;overlay&quot;</code> | <code>&quot;app&quot;</code></p><p>弹出对话框的类型。</p><ul><li><code>overlay</code>: 可显示在其他应用上方，需要悬浮窗权限。</li><li><code>app</code>: 应用内对话框，仅可在应用内的当前界面（Activity）显示，不需要额外权限。</li></ul><h2 id="变量-1" tabindex="-1"><a class="header-anchor" href="#变量-1" aria-hidden="true">#</a> 变量</h2><h3 id="defaultdialogtype" tabindex="-1"><a class="header-anchor" href="#defaultdialogtype" aria-hidden="true">#</a> defaultDialogType</h3>',7),D=t("strong",null,"defaultDialogType",-1),w=t("code",null,"DialogType",-1),q=t("code",null,"'app'",-1),P=t("code",null,"app",-1),j=t("p",null,[t("strong",null,[t("code",null,"参见")])],-1),C=t("h2",{id:"函数-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#函数-1","aria-hidden":"true"},"#"),n(" 函数")],-1),S=t("h3",{id:"builddialog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#builddialog","aria-hidden":"true"},"#"),n(" buildDialog")],-1),T=t("strong",null,"buildDialog",-1),I=t("code",null,"properties",-1),A=t("code",null,"Promise",-1),E=t("code",null,"Dialog",-1),z=t("p",null,"创建一个对话框。可自定义对话框的标题、内容、进度条、输入框、按钮等。",-1),N=t("h4",{id:"参数",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数","aria-hidden":"true"},"#"),n(" 参数")],-1),V=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),L=t("td",{style:{"text-align":"left"}},[t("code",null,"properties")],-1),B={style:{"text-align":"left"}},M={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},$=t("code",null,"DialogProperties",-1),R={style:{"text-align":"left"}},Y={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},F=t("h4",{id:"返回值",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值","aria-hidden":"true"},"#"),n(" 返回值")],-1),G=t("code",null,"Promise",-1),H=t("code",null,"Dialog",-1),J=l('<p>Dialog对象的Promise</p><hr><h3 id="setdefaultdialogtype" tabindex="-1"><a class="header-anchor" href="#setdefaultdialogtype" aria-hidden="true">#</a> setDefaultDialogType</h3><p>▸ <strong>setDefaultDialogType</strong>(<code>type</code>): <code>void</code></p><p><strong><code>参见</code></strong></p>',5),K=t("h4",{id:"参数-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-1","aria-hidden":"true"},"#"),n(" 参数")],-1),O=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型")])],-1),Q=t("td",{style:{"text-align":"left"}},[t("code",null,"type")],-1),U={style:{"text-align":"left"}},W=t("code",null,"DialogType",-1),X=l(`<h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p><hr><h3 id="showalertdialog" tabindex="-1"><a class="header-anchor" href="#showalertdialog" aria-hidden="true">#</a> showAlertDialog</h3><p>▸ <strong>showAlertDialog</strong>(<code>title</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>显示一个提示对话框。提示对话框包括标题、内容和一个确认按钮。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showAlertDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">showAlertDialog</span><span class="token punctuation">(</span><span class="token string">&quot;This is an alert dialog.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">showAlertDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Summary&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;Some description&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4>`,9),Z=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),tt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"对话框的标题。")],-1),nt=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),et={style:{"text-align":"left"}},st={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},at=t("code",null,"DialogProperties",-1),ot={style:{"text-align":"left"}},lt={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},it=l(`<h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>可通过await等待弹出框消失。</p><hr><h3 id="showconfirmdialog" tabindex="-1"><a class="header-anchor" href="#showconfirmdialog" aria-hidden="true">#</a> showConfirmDialog</h3><p>▸ <strong>showConfirmDialog</strong>(<code>title</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>显示一个确认对话框，包括一个确认按钮和一个取消按钮。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dialogs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sure <span class="token operator">=</span> <span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Are you sure?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sure<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true or false</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Are you sure?&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">positive</span><span class="token operator">:</span> <span class="token string">&quot;Yes&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">negative</span><span class="token operator">:</span> <span class="token string">&quot;No&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4>`,10),dt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),ct=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"确认对话框的标题。")],-1),pt=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),rt={style:{"text-align":"left"}},ut={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},ht=t("code",null,"DialogProperties",-1),gt={style:{"text-align":"left"}},_t={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},kt=t("h4",{id:"返回值-3",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-3","aria-hidden":"true"},"#"),n(" 返回值")],-1),ft=t("p",null,[t("code",null,"Promise"),n("<"),t("code",null,"boolean"),n(">")],-1),mt=t("p",null,"可通过await获取弹出框选择结果。",-1),yt=t("hr",null,null,-1),vt=t("h3",{id:"showdialog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#showdialog","aria-hidden":"true"},"#"),n(" showDialog")],-1),xt=t("strong",null,"showDialog",-1),bt=t("code",null,"properties",-1),Dt=t("code",null,"Promise",-1),wt=t("code",null,"Dialog",-1),qt=t("code",null,"show",-1),Pt=t("h4",{id:"参数-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#参数-4","aria-hidden":"true"},"#"),n(" 参数")],-1),jt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),Ct=t("td",{style:{"text-align":"left"}},[t("code",null,"properties")],-1),St={style:{"text-align":"left"}},Tt={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},It=t("code",null,"DialogProperties",-1),At={style:{"text-align":"left"}},Et={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},zt=t("h4",{id:"返回值-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-4","aria-hidden":"true"},"#"),n(" 返回值")],-1),Nt=t("code",null,"Promise",-1),Vt=t("code",null,"Dialog",-1),Lt=l(`<p>对话框对象的Promise</p><hr><h3 id="showinputdialog" tabindex="-1"><a class="header-anchor" href="#showinputdialog" aria-hidden="true">#</a> showInputDialog</h3><p>▸ <strong>showInputDialog</strong>(<code>title</code>, <code>prefill?</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>string</code> | <code>null</code>&gt;</p><p>显示一个输入对话框。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dialogs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">inputDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token keyword">await</span> dialogs<span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Input your name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tony&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">inputDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4>`,8),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),Mt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"输入对话框的标题。")],-1),$t=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"prefill?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"输入对话框的默认文本。")],-1),Rt=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),Yt={style:{"text-align":"left"}},Ft={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},Gt=t("code",null,"DialogProperties",-1),Ht={style:{"text-align":"left"}},Jt={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},Kt=l('<h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>string</code> | <code>null</code>&gt;</p><p>可通过await获取弹出输入框的输入结果。若用户取消了输入，则返回null的Promise。</p><hr><h3 id="showmultichoicedialog" tabindex="-1"><a class="header-anchor" href="#showmultichoicedialog" aria-hidden="true">#</a> showMultiChoiceDialog</h3><p>▸ <strong>showMultiChoiceDialog</strong>(<code>title</code>, <code>items</code>, <code>initialSelectedIndices?</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>number</code>[] | <code>null</code>&gt;</p><p>显示一个多选对话框。多选对话框包括标题和一个多选列表，用户选择列表项并确定后会返回点击的结果。</p><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4>',8),Ot=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),Qt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"多选对话框的标题。")],-1),Ut=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"items")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),n("[]")]),t("td",{style:{"text-align":"left"}},"多选框的选项。")],-1),Wt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"initialSelectedIndices?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number"),n("[]")]),t("td",{style:{"text-align":"left"}},[n("默认选中的选项，比如"),t("code",null,"[0, 2]"),n("表示选中第一项和第三项。")])],-1),Xt=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),Zt={style:{"text-align":"left"}},tn={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},nn=t("code",null,"DialogProperties",-1),en={style:{"text-align":"left"}},sn={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},an=l(`<h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>number</code>[] | <code>null</code>&gt;</p><p>选中选项的索引的数组Promise，若用户取消了选择，则返回空数组。索引从0开始。</p><hr><h3 id="showselectdialog" tabindex="-1"><a class="header-anchor" href="#showselectdialog" aria-hidden="true">#</a> showSelectDialog</h3><p>▸ <strong>showSelectDialog</strong>(<code>title</code>, <code>items</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>number</code>&gt;</p><p>显示一个选择对话框。选择对话框包括标题和一个选择列表，用户点击列表项后会返回点击的结果。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showSelectDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">showSelectDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Select an item&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selected item: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4>`,10),on=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),ln=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"选择对话框的标题。")],-1),dn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"items")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),n("[]")]),t("td",{style:{"text-align":"left"}},"选择框的选项。")],-1),cn=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),pn={style:{"text-align":"left"}},rn={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},un=t("code",null,"DialogProperties",-1),hn={style:{"text-align":"left"}},gn={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},_n=l(`<h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>number</code>&gt;</p><p>选择选项的索引的Promise，若用户取消了选择，则返回-1。索引从0开始。</p><hr><h3 id="showsinglechoicedialog" tabindex="-1"><a class="header-anchor" href="#showsinglechoicedialog" aria-hidden="true">#</a> showSingleChoiceDialog</h3><p>▸ <strong>showSingleChoiceDialog</strong>(<code>title</code>, <code>items</code>, <code>initialSelectedIndex?</code>, <code>properties?</code>): <code>Promise</code>&lt;<code>number</code>&gt;</p><p>显示一个单选对话框。单选对话框包括标题和一个单选列表，用户点击列表项并确定后会返回点击的结果。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> showSingleChoiceDialog <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dialogs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">singleChoice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">showSingleChoiceDialog</span><span class="token punctuation">(</span><span class="token string">&quot;Choose an item&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;item3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selected item: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">singleChoice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4>`,10),kn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"名称"),t("th",{style:{"text-align":"left"}},"类型"),t("th",{style:{"text-align":"left"}},"描述")])],-1),fn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"title")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string")]),t("td",{style:{"text-align":"left"}},"单选对话框的标题。")],-1),mn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"items")]),t("td",{style:{"text-align":"left"}},[t("code",null,"string"),n("[]")]),t("td",{style:{"text-align":"left"}},"单选框的选项。")],-1),yn=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"initialSelectedIndex?")]),t("td",{style:{"text-align":"left"}},[t("code",null,"number")]),t("td",{style:{"text-align":"left"}},[n("默认选中的"),t("code",null,"items"),n("数组索引序。")])],-1),vn=t("td",{style:{"text-align":"left"}},[t("code",null,"properties?")],-1),xn={style:{"text-align":"left"}},bn={href:"/v9/generated/interfaces/dialogs.DialogProperties.html",target:"_blank",rel:"noopener noreferrer"},Dn=t("code",null,"DialogProperties",-1),wn={style:{"text-align":"left"}},qn={href:"https://pro.autojs.org/docs/zh/v9/generated/interfaces/dialogs.DialogProperties.md",target:"_blank",rel:"noopener noreferrer"},Pn=t("h4",{id:"返回值-8",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#返回值-8","aria-hidden":"true"},"#"),n(" 返回值")],-1),jn=t("p",null,[t("code",null,"Promise"),n("<"),t("code",null,"number"),n(">")],-1),Cn=t("p",null,"选择选项的索引的Promise，若用户取消了选择，则返回-1。索引从0开始。",-1);function Sn(Tn,In){const s=i("RouterLink"),o=i("ExternalLinkIcon");return c(),p("div",null,[u,t("ul",null,[t("li",null,[e(s,{to:"/v9/generated/interfaces/dialogs.DialogExt.html"},{default:a(()=>[n("DialogExt")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:a(()=>[n("DialogProperties")]),_:1})])]),h,t("ul",null,[t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#dialog"},{default:a(()=>[n("Dialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#dialogtype"},{default:a(()=>[n("DialogType")]),_:1})])]),g,t("ul",null,[t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#defaultdialogtype"},{default:a(()=>[n("defaultDialogType")]),_:1})])]),_,t("ul",null,[t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#builddialog"},{default:a(()=>[n("buildDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#setdefaultdialogtype"},{default:a(()=>[n("setDefaultDialogType")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showalertdialog"},{default:a(()=>[n("showAlertDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showconfirmdialog"},{default:a(()=>[n("showConfirmDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showdialog"},{default:a(()=>[n("showDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showinputdialog"},{default:a(()=>[n("showInputDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showmultichoicedialog"},{default:a(()=>[n("showMultiChoiceDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showselectdialog"},{default:a(()=>[n("showSelectDialog")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#showsinglechoicedialog"},{default:a(()=>[n("showSingleChoiceDialog")]),_:1})])]),k,f,t("p",null,[n("Ƭ "),m,n(": "),y,n(" & "),e(s,{to:"/v9/generated/interfaces/dialogs.DialogExt.html"},{default:a(()=>[v]),_:1})]),t("p",null,[n("对话框类型，基于Android原生"),t("a",x,[n("Dialog类"),e(o)]),n("拓展了一些方法和属性，参见"),e(s,{to:"/v9/generated/interfaces/dialogs.DialogExt.html"},{default:a(()=>[n("DialogExt")]),_:1}),n("。")]),b,t("p",null,[n("• "),D,n(": "),e(s,{to:"/v9/generated/modules/dialogs.html#dialogtype"},{default:a(()=>[w]),_:1}),n(" = "),q]),t("p",null,[n("默认对话框类型，默认为"),P,n("。可通过"),e(s,{to:"/v9/generated/modules/dialogs.html#setdefaultdialogtype"},{default:a(()=>[n("setDefaultDialogType")]),_:1}),n("函数修改。")]),j,t("ul",null,[t("li",null,[e(s,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html"},{default:a(()=>[n("DialogProperties")]),_:1})]),t("li",null,[e(s,{to:"/v9/generated/modules/dialogs.html#builddialog"},{default:a(()=>[n("buildDialog")]),_:1})])]),C,S,t("p",null,[n("▸ "),T,n("("),I,n("): "),A,n("<"),e(s,{to:"/v9/generated/modules/dialogs.html#dialog"},{default:a(()=>[E]),_:1}),n(">")]),z,N,t("table",null,[V,t("tbody",null,[t("tr",null,[L,t("td",B,[t("a",M,[$,e(o)])]),t("td",R,[n("对话框的配置属性。参考 "),t("a",Y,[n("DialogProperties"),e(o)])])])])]),F,t("p",null,[G,n("<"),e(s,{to:"/v9/generated/modules/dialogs.html#dialog"},{default:a(()=>[H]),_:1}),n(">")]),J,t("p",null,[e(s,{to:"/v9/generated/modules/dialogs.html#defaultdialogtype"},{default:a(()=>[n("defaultDialogType")]),_:1})]),K,t("table",null,[O,t("tbody",null,[t("tr",null,[Q,t("td",U,[e(s,{to:"/v9/generated/modules/dialogs.html#dialogtype"},{default:a(()=>[W]),_:1})])])])]),X,t("table",null,[Z,t("tbody",null,[tt,t("tr",null,[nt,t("td",et,[t("a",st,[at,e(o)])]),t("td",ot,[n("对话框的配置属性。参考 "),t("a",lt,[n("DialogProperties"),e(o)])])])])]),it,t("table",null,[dt,t("tbody",null,[ct,t("tr",null,[pt,t("td",rt,[t("a",ut,[ht,e(o)])]),t("td",gt,[n("对话框的额外配置属性。参考 "),t("a",_t,[n("DialogProperties"),e(o)])])])])]),kt,ft,mt,yt,vt,t("p",null,[n("▸ "),xt,n("("),bt,n("): "),Dt,n("<"),e(s,{to:"/v9/generated/modules/dialogs.html#dialog"},{default:a(()=>[wt]),_:1}),n(">")]),t("p",null,[n("创建并显示一个对话框。类似于"),e(s,{to:"/v9/generated/modules/dialogs.html#builddialog"},{default:a(()=>[n("buildDialog")]),_:1}),n("构建对话框，但是构建后直接显示而无需调用"),qt,n("。")]),Pt,t("table",null,[jt,t("tbody",null,[t("tr",null,[Ct,t("td",St,[t("a",Tt,[It,e(o)])]),t("td",At,[n("对话框的配置属性。参考 "),t("a",Et,[n("DialogProperties"),e(o)])])])])]),zt,t("p",null,[Nt,n("<"),e(s,{to:"/v9/generated/modules/dialogs.html#dialog"},{default:a(()=>[Vt]),_:1}),n(">")]),Lt,t("table",null,[Bt,t("tbody",null,[Mt,$t,t("tr",null,[Rt,t("td",Yt,[t("a",Ft,[Gt,e(o)])]),t("td",Ht,[n("对话框的配置属性。参考 "),t("a",Jt,[n("DialogProperties"),e(o)])])])])]),Kt,t("table",null,[Ot,t("tbody",null,[Qt,Ut,Wt,t("tr",null,[Xt,t("td",Zt,[t("a",tn,[nn,e(o)])]),t("td",en,[n("对话框的配置属性。参考 "),t("a",sn,[n("DialogProperties"),e(o)])])])])]),an,t("table",null,[on,t("tbody",null,[ln,dn,t("tr",null,[cn,t("td",pn,[t("a",rn,[un,e(o)])]),t("td",hn,[n("对话框的配置属性。参考 "),t("a",gn,[n("DialogProperties"),e(o)])])])])]),_n,t("table",null,[kn,t("tbody",null,[fn,mn,yn,t("tr",null,[vn,t("td",xn,[t("a",bn,[Dn,e(o)])]),t("td",wn,[n("对话框的配置属性。参考 "),t("a",qn,[n("DialogProperties"),e(o)])])])])]),Pn,jn,Cn])}const zn=d(r,[["render",Sn],["__file","dialogs.html.vue"]]);export{zn as default};
