import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,f as e}from"./app-ff93bfbc.js";const p={},t=e(`<p><strong>[Pro 8.7.0新增]</strong></p><p>Debug模块提供了一些调试工具，比如诊断内存泄露，获取一个Error的详细堆栈等。</p><h2 id="debug-dumphprof-file" tabindex="-1"><a class="header-anchor" href="#debug-dumphprof-file" aria-hidden="true">#</a> $debug.dumpHprof(file)</h2><ul><li><code>file</code> {string} dump文件路径</li></ul><p>将整个脚本进程的内存dump到文件file中。</p><p>当你发现Auto.js Pro占用内存很高时，你可以运行这个函数来dump整个内存并反馈给开发者，开发者可以通过内存dump文件来诊断是否有内存泄露。</p><p>dump过程中整个进程将会卡死，此时请不要操作手机，以便造成dump失败或其他问题等；dump一般需要几十秒到几分钟时间，请耐心等待。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如何将文件发送给开发者？您可以附上您的脚本和dump文件，发送给邮箱 <a href="mailto:hybbbb1996@gmail.com">hybbbb1996@gmail.com</a>，开发者将尽快排查和回复。另外建议在反馈之前，通过<code>$debug.setMemoryLeakDetectionEnabled()</code>函数来开启内存泄露检查，排查脚本中的内存泄露，防止乌龙，减少开发者的工作量。</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$debug<span class="token punctuation">.</span><span class="token function">dumpHprof</span><span class="token punctuation">(</span><span class="token string">&#39;./dump.hprof&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="debug-dumpandsendhprof-file" tabindex="-1"><a class="header-anchor" href="#debug-dumpandsendhprof-file" aria-hidden="true">#</a> $debug.dumpAndSendHprof([file])</h2><ul><li><code>file</code> {string} dump文件路径，可选。默认为当前目录下的<code>dump.hprof.zip</code>。</li></ul><p>将整个脚本进程的内存dump到文件file中，并自动压缩为zip文件。使用压缩程度最高的压缩等级，因此需要的时间更久，但文件更小。</p><p>更多信息参见<code>$debug.dumpHprof</code>。</p><h2 id="debug-getstacktrace-error" tabindex="-1"><a class="header-anchor" href="#debug-getstacktrace-error" aria-hidden="true">#</a> $debug.getStackTrace(error)</h2><ul><li><code>error</code> {Error} 异常/错误</li><li>返回 {string}</li></ul><p>获取一个异常的详细堆栈并返回。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    undefined_var<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>$debug<span class="token punctuation">.</span><span class="token function">getStackTrace</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="debug-setmemoryleakdetectionenabled-enabled" tabindex="-1"><a class="header-anchor" href="#debug-setmemoryleakdetectionenabled-enabled" aria-hidden="true">#</a> $debug.setMemoryLeakDetectionEnabled(enabled)</h2><ul><li><code>enabled</code> {boolean} 是否启用内存泄露检测</li></ul><p>启用内存泄露检测后，将会在日志中打印没有手动回收的对象，比如图片对象。</p><p>目前检测的对象包括：</p><ul><li>图片图像</li></ul><p>例如以下代码将会造成内存泄露，运行后一段时间应该在日志中看到泄露日志。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$debug<span class="token punctuation">.</span><span class="token function">setMemoryLeakDetectionEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">requestScreenCapture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这个图片本应手动调用recycle回收</span>
    <span class="token keyword">let</span> leak <span class="token operator">=</span> <span class="token function">captureScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 我们故意注释掉回收的代码</span>
    <span class="token comment">// leak.recycle();</span>
<span class="token punctuation">}</span>
<span class="token comment">// 触发gc</span>
$debug<span class="token punctuation">.</span><span class="token function">gc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示</p><p>在Auto.js Pro运行时，此功能默认开启；在打包软件中，此功能默认关闭。</p><h2 id="debug-gc" tabindex="-1"><a class="header-anchor" href="#debug-gc" aria-hidden="true">#</a> $debug.gc()</h2><p>建议JVM进行垃圾回收（并不一定进行垃圾回收）。</p>`,28),c=[t];function o(i,l){return a(),s("div",null,c)}const r=n(p,[["render",o],["__file","debug.html.vue"]]);export{r as default};
