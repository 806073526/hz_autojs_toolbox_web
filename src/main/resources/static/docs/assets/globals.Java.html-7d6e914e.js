import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,d as n,b as t,w as e,e as a,f as o}from"./app-ff93bfbc.js";const u={},d=n("h2",{id:"目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),a(" 目录")],-1),r=n("h3",{id:"方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),a(" 方法")],-1),k=o(`<h2 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h2><h3 id="boxboolean" tabindex="-1"><a class="header-anchor" href="#boxboolean" aria-hidden="true">#</a> boxBoolean</h3><p>▸ <strong>boxBoolean</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Boolean的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为boolean或java.lang.Boolean的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Boolean value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxBoolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxbyte" tabindex="-1"><a class="header-anchor" href="#boxbyte" aria-hidden="true">#</a> boxByte</h3><p>▸ <strong>boxByte</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Byte的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为byte或java.lang.Byte的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Byte value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxByte</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxchar" tabindex="-1"><a class="header-anchor" href="#boxchar" aria-hidden="true">#</a> boxChar</h3><p>▸ <strong>boxChar</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Char的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为char或java.lang.Char的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Char value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxChar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxdouble" tabindex="-1"><a class="header-anchor" href="#boxdouble" aria-hidden="true">#</a> boxDouble</h3><p>▸ <strong>boxDouble</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Double的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为double或java.lang.Double的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Double value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxDouble</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxfloat" tabindex="-1"><a class="header-anchor" href="#boxfloat" aria-hidden="true">#</a> boxFloat</h3><p>▸ <strong>boxFloat</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Float的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为float或java.lang.Float的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Float value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxFloat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxint" tabindex="-1"><a class="header-anchor" href="#boxint" aria-hidden="true">#</a> boxInt</h3><p>▸ <strong>boxInt</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Integer的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为int或java.lang.Integer的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Integer value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxlong" tabindex="-1"><a class="header-anchor" href="#boxlong" aria-hidden="true">#</a> boxLong</h3><p>▸ <strong>boxLong</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Long的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为long或java.lang.Long的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Long value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="boxshort" tabindex="-1"><a class="header-anchor" href="#boxshort" aria-hidden="true">#</a> boxShort</h3><p>▸ <strong>boxShort</strong>(<code>value</code>): <code>any</code></p><p>包装为java.lang.Short的包装类，在调用有重载的Java方法时可以避免混淆，从而确定地调用参数类型为short或java.lang.Short的方法。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// public void put(String key, Short value)</span>
values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> $java<span class="token punctuation">.</span><span class="token function">boxShort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h3><p>▸ <strong>create</strong>(<code>constructor</code>, <code>args</code>, <code>threadMode?</code>): <code>Promise</code>&lt;<code>any</code>&gt;</p><p>在指定在线程上中创建相应的Java对象并返回Promise。例如某些Android UI相关对象需要在UI线程创建。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> View <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.view.View&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> context <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>View<span class="token punctuation">,</span> <span class="token punctuation">[</span>context<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4>`,87),h=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"默认值"),n("th",{style:{"text-align":"left"}},"描述")])],-1),v=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"constructor")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any")]),n("td",{style:{"text-align":"left"}},[n("code",null,"undefined")]),n("td",{style:{"text-align":"left"}},"Java类构造函数，若constructor不是Java类构造函数，则抛出TypeError。")],-1),g=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"args")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any"),a("[]")]),n("td",{style:{"text-align":"left"}},[n("code",null,"undefined")]),n("td",{style:{"text-align":"left"}},"构造参数")],-1),m=n("td",{style:{"text-align":"left"}},[n("code",null,"threadMode")],-1),b={style:{"text-align":"left"}},f=n("code",null,"ThreadMode",-1),y=n("td",{style:{"text-align":"left"}},[n("code",null,"'current'")],-1),x=n("td",{style:{"text-align":"left"}},"线程模式",-1),j=o('<h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>any</code>&gt;</p><hr><h3 id="createsync" tabindex="-1"><a class="header-anchor" href="#createsync" aria-hidden="true">#</a> createSync</h3><p>▸ <strong>createSync</strong>(<code>constructor</code>, <code>args</code>, <code>threadMode?</code>): <code>any</code></p><p>类似于create，但不返回Promise，而是阻塞等待Java对象创建完成并返回该对象。因此一般不建议使用该函数，除非你清楚你在做什么。</p><h4 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9" aria-hidden="true">#</a> 参数</h4>',7),w=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"默认值"),n("th",{style:{"text-align":"left"}},"描述")])],-1),_=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"constructor")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any")]),n("td",{style:{"text-align":"left"}},[n("code",null,"undefined")]),n("td",{style:{"text-align":"left"}},"Java类构造函数，若constructor不是Java类构造函数，则抛出TypeError。")],-1),J=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"args")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any"),a("[]")]),n("td",{style:{"text-align":"left"}},[n("code",null,"undefined")]),n("td",{style:{"text-align":"left"}},"构造参数")],-1),C=n("td",{style:{"text-align":"left"}},[n("code",null,"threadMode")],-1),q={style:{"text-align":"left"}},$=n("code",null,"ThreadMode",-1),S=n("td",{style:{"text-align":"left"}},[n("code",null,"'current'")],-1),M=n("td",{style:{"text-align":"left"}},"线程模式",-1),V=o(`<h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="defineclass" tabindex="-1"><a class="header-anchor" href="#defineclass" aria-hidden="true">#</a> defineClass</h3><p>▸ <strong>defineClass</strong>(<code>jsClass</code>, <code>options?</code>): <code>Promise</code>&lt;<code>C</code>&gt;</p><p>动态从给定的JavaScript类生成一个Java类。可在JavaScript类中覆写父类的方法，实现一些Java接口的方法。通常用于继承抽象类或重写某些类的方法。</p><p>比如可继承<code>android.webkit.MyWebViewClient</code>并重写<code>shouldOverrideUrlLoading</code>方法拦截请求。</p><p>本方法是动态生成dex实现的，有一定耗时，需要异步等待，第二次调用时可复用上次生成的dex。默认生成的dex文件位于当前目录下的.codecache目录中，可以通过cacheDexFile指定其他路径。</p><p>注意，若只是为了实现Java接口，则无需使用本方法，直接使用类似<code>new View.OnClickListener(\\{onClick: () =&gt; {}\\})</code>的方式即可。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> MyWebViewClient <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>
     <span class="token keyword">class</span> <span class="token class-name">MyWebViewClient</span> <span class="token keyword">extends</span> <span class="token class-name">android<span class="token punctuation">.</span>webkit<span class="token punctuation">.</span>WebViewClient</span> <span class="token punctuation">{</span>
         
         <span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span><span class="token parameter">webview<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyWebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给定一个JavaScript类，让它继承自某个Java类，并实现给定的Java接口。将生成一个相应的类，从而可在给定的JavaScript类中覆写Java类的相应方法。</p><h4 id="参数-10" tabindex="-1"><a class="header-anchor" href="#参数-10" aria-hidden="true">#</a> 参数</h4>`,13),T=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),D=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"jsClass")]),n("td",{style:{"text-align":"left"}},[n("code",null,"C")]),n("td",{style:{"text-align":"left"}},"JavaScript类")],-1),B=n("td",{style:{"text-align":"left"}},[n("code",null,"options?")],-1),L={style:{"text-align":"left"}},F=n("code",null,"DefineClassOptions",-1),I=n("td",{style:{"text-align":"left"}},"选项，用于指定生成类的包名、要实现的Java接口等。",-1),P=o('<h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>C</code>&gt;</p><hr><h3 id="findclass" tabindex="-1"><a class="header-anchor" href="#findclass" aria-hidden="true">#</a> findClass</h3><p>▸ <strong>findClass</strong>(<code>name</code>): <code>any</code></p><p>搜索类名为name为Java类并加载它，返回该Java类。</p><p>返回的Java类实际上是一个javascript的构造函数，通过他可以构造一个Java对象，也可以访问Java类的静态方法。</p>',7),z=n("p",null,[a("如果要搜索内部类，需要使用'"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msup",null,[n("mrow"),n("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")]),n("mtext",null,"符号，比如"),n("mi",{mathvariant:"normal"},"‘"),n("mi",null,"f"),n("mi",null,"i"),n("mi",null,"n"),n("mi",null,"d"),n("mi",null,"C"),n("mi",null,"l"),n("mi",null,"a"),n("mi",null,"s"),n("mi",null,"s"),n("msup",null,[n("mo",{stretchy:"false"},"("),n("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")]),n("mi",null,"a"),n("mi",null,"n"),n("mi",null,"d"),n("mi",null,"r"),n("mi",null,"o"),n("mi",null,"i"),n("mi",null,"d"),n("mi",{mathvariant:"normal"},"."),n("mi",null,"a"),n("mi",null,"p"),n("mi",null,"p"),n("mi",{mathvariant:"normal"},"."),n("mi",null,"A"),n("mi",null,"l"),n("mi",null,"e"),n("mi",null,"r"),n("mi",null,"t"),n("mi",null,"D"),n("mi",null,"i"),n("mi",null,"a"),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g")]),n("annotation",{encoding:"application/x-tex"},"'符号，比如`findClass('android.app.AlertDialog")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1.0019em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},[n("span"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.7519em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"′")])])])])])])])]),n("span",{class:"mord cjk_fallback"},"符号，比如"),n("span",{class:"mord"},"‘"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"in"),n("span",{class:"mord mathnormal"},"d"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"Cl"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"ss"),n("span",{class:"mopen"},[n("span",{class:"mopen"},"("),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.7519em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"′")])])])])])])])]),n("span",{class:"mord mathnormal"},"an"),n("span",{class:"mord mathnormal"},"d"),n("span",{class:"mord mathnormal"},"ro"),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mord mathnormal"},"d"),n("span",{class:"mord"},"."),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord mathnormal"},"pp"),n("span",{class:"mord"},"."),n("span",{class:"mord mathnormal"},"A"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),n("span",{class:"mord mathnormal"},"ia"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g")])])]),a("Builder')`。")],-1),O=o(`<p>若找不到对应的类，抛出<code>ClassNotFoundError</code>。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> Integer <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;java.lang.Integer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> int <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-11" tabindex="-1"><a class="header-anchor" href="#参数-11" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">完整Java类名</td></tr></tbody></table><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><p>Java类</p><hr><h3 id="findclassornull" tabindex="-1"><a class="header-anchor" href="#findclassornull" aria-hidden="true">#</a> findClassOrNull</h3><p>▸ <strong>findClassOrNull</strong>(<code>name</code>): <code>any</code></p><p>类似于findClass，区别只在于，找不到类时返回null而不是抛出异常。</p><p><strong><code>参见</code></strong></p>`,13),N=o(`<h4 id="参数-12" tabindex="-1"><a class="header-anchor" href="#参数-12" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">类名</td></tr></tbody></table><h4 id="返回值-12" tabindex="-1"><a class="header-anchor" href="#返回值-12" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><p>Java类或者null</p><hr><h3 id="loaddex" tabindex="-1"><a class="header-anchor" href="#loaddex" aria-hidden="true">#</a> loadDex</h3><p>▸ <strong>loadDex</strong>(<code>dexFile</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>异步加载Dex文件，加载后该Dex中的类将可以在JavaScript使用。</p><p>注意，务必使用<code>await</code>等方式等待加载完成，在加载未完成时，无法访问dex中的Java类。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">loadDex</span><span class="token punctuation">(</span><span class="token string">&#39;/sdcard/mydex.dex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-13" tabindex="-1"><a class="header-anchor" href="#参数-13" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>dexFile</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">dex文件路径</td></tr></tbody></table><h4 id="返回值-13" tabindex="-1"><a class="header-anchor" href="#返回值-13" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="loadjar" tabindex="-1"><a class="header-anchor" href="#loadjar" aria-hidden="true">#</a> loadJar</h3><p>▸ <strong>loadJar</strong>(<code>jarFile</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>异步加载jar文件，加载后该jar中的类将可以在JavaScript使用。</p><p>注意，务必使用<code>await</code>等方式等待加载完成，在加载未完成时，无法访问jar中的Java类。</p><p>加载jar实际上是通过将jar转为dex后再加载dex实现的，若jar中出现当前运行的Android环境不支持的指令等情况，则会加载失败，因此在有条件的情况下建议事先转换为dex再加载，提高加载效率和成功率。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rhino&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">loadJar</span><span class="token punctuation">(</span><span class="token string">&#39;/sdcard/myjar.jar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>MyClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-14" tabindex="-1"><a class="header-anchor" href="#参数-14" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>jarFile</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">jar文件路径</td></tr></tbody></table><h4 id="返回值-14" tabindex="-1"><a class="header-anchor" href="#返回值-14" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="setdefaultthreadmode" tabindex="-1"><a class="header-anchor" href="#setdefaultthreadmode" aria-hidden="true">#</a> setDefaultThreadMode</h3><p>▸ <strong>setDefaultThreadMode</strong>(<code>clazz</code>, <code>threadMode</code>): <code>any</code></p><p>设置Java类的默认线程模式。设置后创建该Java类新的Java对象时，默认使用该线程模式。对之前已经创建的Java对象无影响。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> View <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.view.View&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$java<span class="token punctuation">.</span><span class="token function">setDefaultThreadMode</span><span class="token punctuation">(</span>View<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-15" tabindex="-1"><a class="header-anchor" href="#参数-15" aria-hidden="true">#</a> 参数</h4>`,35),W=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),A=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"clazz")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any")]),n("td",{style:{"text-align":"left"}},"Java类")],-1),E=n("td",{style:{"text-align":"left"}},[n("code",null,"threadMode")],-1),U={style:{"text-align":"left"}},H=n("code",null,"ThreadMode",-1),R=n("td",{style:{"text-align":"left"}},"线程模式",-1),G=o(`<h4 id="返回值-15" tabindex="-1"><a class="header-anchor" href="#返回值-15" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="setthreadmode" tabindex="-1"><a class="header-anchor" href="#setthreadmode" aria-hidden="true">#</a> setThreadMode</h3><p>▸ <strong>setThreadMode</strong>(<code>obj</code>, <code>threadMode</code>): <code>any</code></p><p>设置Java对象的线程模式。设置后该Java对象的所有函数调用，均会切换到执行的线程运行，若非当前线程，则这些函数调用会返回Promise。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> TextView <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.widget.TextView&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> textView <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>TextView<span class="token punctuation">,</span> <span class="token punctuation">[</span>$autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $java<span class="token punctuation">.</span><span class="token function">setThreadMode</span><span class="token punctuation">(</span>textView<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> textView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-16" tabindex="-1"><a class="header-anchor" href="#参数-16" aria-hidden="true">#</a> 参数</h4>`,9),K=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Q=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"obj")]),n("td",{style:{"text-align":"left"}},[n("code",null,"any")]),n("td",{style:{"text-align":"left"}},"Java对象")],-1),X=n("td",{style:{"text-align":"left"}},[n("code",null,"threadMode")],-1),Y={style:{"text-align":"left"}},Z=n("code",null,"ThreadMode",-1),nn=n("td",{style:{"text-align":"left"}},"线程模式",-1),an=o(`<h4 id="返回值-16" tabindex="-1"><a class="header-anchor" href="#返回值-16" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><hr><h3 id="wrap" tabindex="-1"><a class="header-anchor" href="#wrap" aria-hidden="true">#</a> wrap</h3><p>▸ <strong>wrap</strong>&lt;<code>T</code>&gt;(<code>obj</code>, <code>sync?</code>): <code>T</code></p><p>包装相应的JavaScript对象，让其返回的新对象的函数被Java调用时，自动切换到JavaScript所在线程。若<code>sync</code>为true，则这些函数会在调用时阻塞等待JavaScript线程返回，并将其值返回给Java。</p><p>通常用于设置一些不在JavaScript线程调用的Java回调。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> $java <span class="token operator">=</span> $autojs<span class="token punctuation">.</span>java<span class="token punctuation">;</span>
<span class="token keyword">const</span> Button <span class="token operator">=</span> $java<span class="token punctuation">.</span><span class="token function">findClass</span><span class="token punctuation">(</span><span class="token string">&#39;android.widget.Button&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token keyword">await</span> $java<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Button<span class="token punctuation">,</span> <span class="token punctuation">[</span>$autojs<span class="token punctuation">.</span>androidContext<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    $java<span class="token punctuation">.</span><span class="token function">setThreadMode</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token string">&#39;ui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span>$java<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    button<span class="token punctuation">.</span><span class="token function">setOnLongClickListener</span><span class="token punctuation">(</span>$java<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
         <span class="token function-variable function">onLongClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;long click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="类型参数" tabindex="-1"><a class="header-anchor" href="#类型参数" aria-hidden="true">#</a> 类型参数</h4><table><thead><tr><th style="text-align:left;">名称</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="参数-17" tabindex="-1"><a class="header-anchor" href="#参数-17" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>obj</code></td><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>undefined</code></td><td style="text-align:left;">JavaScript对象</td></tr><tr><td style="text-align:left;"><code>sync?</code></td><td style="text-align:left;"><code>Boolean</code></td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;">是否同步阻塞调用</td></tr></tbody></table><h4 id="返回值-17" tabindex="-1"><a class="header-anchor" href="#返回值-17" aria-hidden="true">#</a> 返回值</h4><p><code>T</code></p>`,15);function sn(tn,en){const s=p("RouterLink");return c(),i("div",null,[n("p",null,[t(s,{to:"/v9/generated/modules/globals.html"},{default:e(()=>[a("globals")]),_:1}),a(".Java")]),d,r,n("ul",null,[n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxboolean"},{default:e(()=>[a("boxBoolean")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxbyte"},{default:e(()=>[a("boxByte")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxchar"},{default:e(()=>[a("boxChar")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxdouble"},{default:e(()=>[a("boxDouble")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxfloat"},{default:e(()=>[a("boxFloat")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxint"},{default:e(()=>[a("boxInt")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxlong"},{default:e(()=>[a("boxLong")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#boxshort"},{default:e(()=>[a("boxShort")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#create"},{default:e(()=>[a("create")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#createsync"},{default:e(()=>[a("createSync")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#defineclass"},{default:e(()=>[a("defineClass")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#findclass"},{default:e(()=>[a("findClass")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#findclassornull"},{default:e(()=>[a("findClassOrNull")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#loaddex"},{default:e(()=>[a("loadDex")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#loadjar"},{default:e(()=>[a("loadJar")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#setdefaultthreadmode"},{default:e(()=>[a("setDefaultThreadMode")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#setthreadmode"},{default:e(()=>[a("setThreadMode")]),_:1})]),n("li",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#wrap"},{default:e(()=>[a("wrap")]),_:1})])]),k,n("table",null,[h,n("tbody",null,[v,g,n("tr",null,[m,n("td",b,[t(s,{to:"/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[f]),_:1})]),y,x])])]),j,n("table",null,[w,n("tbody",null,[_,J,n("tr",null,[C,n("td",q,[t(s,{to:"/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[$]),_:1})]),S,M])])]),V,n("table",null,[T,n("tbody",null,[D,n("tr",null,[B,n("td",L,[t(s,{to:"/v9/generated/interfaces/globals.DefineClassOptions.html"},{default:e(()=>[F]),_:1})]),I])])]),P,z,O,n("p",null,[t(s,{to:"/v9/generated/interfaces/globals.Java.html#findclass"},{default:e(()=>[a("findClass")]),_:1})]),N,n("table",null,[W,n("tbody",null,[A,n("tr",null,[E,n("td",U,[t(s,{to:"/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[H]),_:1})]),R])])]),G,n("table",null,[K,n("tbody",null,[Q,n("tr",null,[X,n("td",Y,[t(s,{to:"/v9/generated/modules/globals.html#threadmode"},{default:e(()=>[Z]),_:1})]),nn])])]),an])}const pn=l(u,[["render",sn],["__file","globals.Java.html.vue"]]);export{pn as default};
