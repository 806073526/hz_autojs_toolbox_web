import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as d,c as r,d as n,b as s,w as e,e as t,f as o}from"./app-ff93bfbc.js";const p={},i=n("p",null,"一个32位的颜色值，以ARGB格式表示。",-1),u=n("h2",{id:"目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),t(" 目录")],-1),h=n("h3",{id:"constructors",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#constructors","aria-hidden":"true"},"#"),t(" Constructors")],-1),k=n("h3",{id:"accessors",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#accessors","aria-hidden":"true"},"#"),t(" Accessors")],-1),g=n("h3",{id:"方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),t(" 方法")],-1),_=o(`<h2 id="constructors-1" tabindex="-1"><a class="header-anchor" href="#constructors-1" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new Color</strong>(<code>value</code>)</p><p>从整数颜色值构造一个颜色。</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">整数颜色值，格式为0xAARRGGBB</td></tr></tbody></table><h2 id="accessors-1" tabindex="-1"><a class="header-anchor" href="#accessors-1" aria-hidden="true">#</a> Accessors</h2><h3 id="alpha" tabindex="-1"><a class="header-anchor" href="#alpha" aria-hidden="true">#</a> alpha</h3><p>• <code>get</code> <strong>alpha</strong>(): <code>number</code></p><p>这个颜色的alpha值，以8位整数表示。</p><p>值为0表示这个颜色完全透明，值为255表示这个颜色完全不透明。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// black</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 255</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><hr><h3 id="blue" tabindex="-1"><a class="header-anchor" href="#blue" aria-hidden="true">#</a> blue</h3><p>• <code>get</code> <strong>blue</strong>(): <code>number</code></p><p>这个颜色的blue值，以8位整数表示。</p><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><hr><h3 id="green" tabindex="-1"><a class="header-anchor" href="#green" aria-hidden="true">#</a> green</h3><p>• <code>get</code> <strong>green</strong>(): <code>number</code></p><p>这个颜色的green值，以8位整数表示。</p><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><hr><h3 id="opacity" tabindex="-1"><a class="header-anchor" href="#opacity" aria-hidden="true">#</a> opacity</h3><p>• <code>get</code> <strong>opacity</strong>(): <code>number</code></p><p>这个颜色的alpha值，以浮点数表示。</p><p>值为0.0表示这个颜色完全透明，值为1.0表示这个颜色完全不透明。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// black</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>opacity<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><hr><h3 id="red" tabindex="-1"><a class="header-anchor" href="#red" aria-hidden="true">#</a> red</h3><p>• <code>get</code> <strong>red</strong>(): <code>number</code></p><p>The red channel of this color in an 8 bit value.</p><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><hr><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h3><p>• <code>get</code> <strong>value</strong>(): <code>number</code></p><p>这个颜色的32位值。</p><ul><li>第24-31位为alpha值</li><li>第16-23位为red值</li><li>第8-15位为green值</li><li>第0-7位为blue值</li></ul><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4><p><code>number</code></p><h2 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h2><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>▸ <strong>equals</strong>(<code>obj</code>): <code>boolean</code></p><p>比较两个颜色是否完全相等。</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4>`,54),f=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型")])],-1),b=n("td",{style:{"text-align":"left"}},[n("code",null,"obj")],-1),m={style:{"text-align":"left"}},v=n("code",null,"Color",-1),x=o('<h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>两个颜色是否完全相等</p><hr><h3 id="issimilarto" tabindex="-1"><a class="header-anchor" href="#issimilarto" aria-hidden="true">#</a> isSimilarTo</h3><p>▸ <strong>isSimilarTo</strong>(<code>other</code>, <code>options?</code>): <code>boolean</code></p><p>比较当前颜色是否与另一个颜色相似。</p><p><strong><code>参见</code></strong></p>',8),y=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> black <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> white <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> black09 <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;#090909&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>black<span class="token punctuation">.</span><span class="token function">isSimilarTo</span><span class="token punctuation">(</span>white<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>black<span class="token punctuation">.</span><span class="token function">isSimilarTo</span><span class="token punctuation">(</span>black09<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>black<span class="token punctuation">.</span><span class="token function">isSimilarTo</span><span class="token punctuation">(</span>black09<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4>`,3),C=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),w=n("td",{style:{"text-align":"left"}},[n("code",null,"other")],-1),j={style:{"text-align":"left"}},q=n("code",null,"Color",-1),G=n("td",{style:{"text-align":"left"}},"要比较的颜色",-1),B=n("td",{style:{"text-align":"left"}},[n("code",null,"options?")],-1),F={style:{"text-align":"left"}},R=n("code",null,"CompareColorOptions",-1),S=n("td",{style:{"text-align":"left"}},"比较选项",-1),A=o('<h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>两个颜色是否相似</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>▸ <strong>toString</strong>(): <code>string</code></p><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4><p><code>string</code></p><hr><h3 id="withalpha" tabindex="-1"><a class="header-anchor" href="#withalpha" aria-hidden="true">#</a> withAlpha</h3>',10),O=n("strong",null,"withAlpha",-1),T=n("code",null,"a",-1),N=n("code",null,"Color",-1),V=o(`<p>返回一个新的颜色，将原来的颜色的alpha通道的值设置为<code>a</code></p><p>超出范围的值会有意外问题。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// black</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">withAlpha</span><span class="token punctuation">(</span><span class="token number">0x77</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0x77000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">alpha通道的值，范围为0-255</td></tr></tbody></table><h4 id="返回值-9" tabindex="-1"><a class="header-anchor" href="#返回值-9" aria-hidden="true">#</a> 返回值</h4>`,7),L=n("code",null,"Color",-1),E=n("p",null,"新的颜色",-1),z=n("hr",null,null,-1),D=n("h3",{id:"withblue",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#withblue","aria-hidden":"true"},"#"),t(" withBlue")],-1),H=n("strong",null,"withBlue",-1),I=n("code",null,"b",-1),J=n("code",null,"Color",-1),K=o('<p>返回一个新的颜色，将原来的颜色的blue通道的值设置为<code>b</code>。</p><p>超出范围的值会有意外问题。</p><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">blue通道的值，范围为0-255</td></tr></tbody></table><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10" aria-hidden="true">#</a> 返回值</h4>',5),M=n("code",null,"Color",-1),P=n("p",null,"新的颜色",-1),Q=n("hr",null,null,-1),U=n("h3",{id:"withgreen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#withgreen","aria-hidden":"true"},"#"),t(" withGreen")],-1),W=n("strong",null,"withGreen",-1),X=n("code",null,"g",-1),Y=n("code",null,"Color",-1),Z=o('<p>返回一个新的颜色，将原来的颜色的green通道的值设置为<code>g</code>。</p><p>超出范围的值会有意外问题。</p><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">green通道的值，范围为0-255</td></tr></tbody></table><h4 id="返回值-11" tabindex="-1"><a class="header-anchor" href="#返回值-11" aria-hidden="true">#</a> 返回值</h4>',5),$=n("code",null,"Color",-1),nn=n("p",null,"新的颜色",-1),tn=n("hr",null,null,-1),an=n("h3",{id:"withopacity",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#withopacity","aria-hidden":"true"},"#"),t(" withOpacity")],-1),sn=n("strong",null,"withOpacity",-1),en=n("code",null,"opacity",-1),on=n("code",null,"Color",-1),ln=o(`<p>返回一个新的颜色，将原来的颜色的alpha通道的透明度值设置为<code>opacity</code>。</p><p>超出范围的值会有意外问题。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFF000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// black</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">withOpacity</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 0x7F000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>opacity</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">透明度值，范围为0.0-1.0</td></tr></tbody></table><h4 id="返回值-12" tabindex="-1"><a class="header-anchor" href="#返回值-12" aria-hidden="true">#</a> 返回值</h4>`,7),cn=n("code",null,"Color",-1),dn=n("p",null,"新的颜色",-1),rn=n("hr",null,null,-1),pn=n("h3",{id:"withred",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#withred","aria-hidden":"true"},"#"),t(" withRed")],-1),un=n("strong",null,"withRed",-1),hn=n("code",null,"r",-1),kn=n("code",null,"Color",-1),gn=o('<p>返回一个新的颜色，将原来的颜色的red通道的值设置为<code>r</code>。</p><p>超出范围的值会有意外问题。</p><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">red通道的值，范围为0-255</td></tr></tbody></table><h4 id="返回值-13" tabindex="-1"><a class="header-anchor" href="#返回值-13" aria-hidden="true">#</a> 返回值</h4>',5),_n=n("code",null,"Color",-1),fn=n("p",null,"新的颜色",-1),bn=n("hr",null,null,-1),mn=n("h3",{id:"fromargb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fromargb","aria-hidden":"true"},"#"),t(" fromARGB")],-1),vn=n("code",null,"Static",-1),xn=n("strong",null,"fromARGB",-1),yn=n("code",null,"a",-1),Cn=n("code",null,"r",-1),wn=n("code",null,"g",-1),jn=n("code",null,"b",-1),qn=n("code",null,"Color",-1),Gn=o("<p>从四个颜色通道构造一个颜色。</p><ul><li><code>a</code>是透明度，0表示透明，255表示完全不透明。</li><li><code>r</code>是[红]，范围为0-255。</li><li><code>g</code>是[绿]，范围为0-255。</li><li><code>b</code>是[蓝]，范围为0-255。</li></ul><p>超出范围的值会取255的模以保证在255范围内。</p><p><strong><code>参见</code></strong></p>",4),Bn=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> red <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">fromARGB</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>red<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Color(0xFFFF0000)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">alpha通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">red通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">green通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">blue通道的值，范围为0-255</td></tr></tbody></table><h4 id="返回值-14" tabindex="-1"><a class="header-anchor" href="#返回值-14" aria-hidden="true">#</a> 返回值</h4>`,5),Fn=n("code",null,"Color",-1),Rn=n("p",null,"新的颜色",-1),Sn=n("hr",null,null,-1),An=n("h3",{id:"fromgray",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fromgray","aria-hidden":"true"},"#"),t(" fromGray")],-1),On=n("code",null,"Static",-1),Tn=n("strong",null,"fromGray",-1),Nn=n("code",null,"gray",-1),Vn=n("code",null,"Color",-1),Ln=o(`<p>根据灰度值构造颜色，alpha通道为255，R、G、B通道均为gray的值。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gray <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">fromGray</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gray<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Color(0xFF808080)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-9" tabindex="-1"><a class="header-anchor" href="#参数-9" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>gray</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">灰度值</td></tr></tbody></table><h4 id="返回值-15" tabindex="-1"><a class="header-anchor" href="#返回值-15" aria-hidden="true">#</a> 返回值</h4>`,6),En=n("code",null,"Color",-1),zn=n("p",null,"新的颜色对象",-1),Dn=n("hr",null,null,-1),Hn=n("h3",{id:"fromrgb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fromrgb","aria-hidden":"true"},"#"),t(" fromRGB")],-1),In=n("code",null,"Static",-1),Jn=n("strong",null,"fromRGB",-1),Kn=n("code",null,"r",-1),Mn=n("code",null,"g",-1),Pn=n("code",null,"b",-1),Qn=n("code",null,"Color",-1),Un=o(`<p>从RGB颜色通道构造一个不透明颜色（alpha通道为255）。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> red <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">fromRGBO</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>red<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Color(0xFFFF0000)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-10" tabindex="-1"><a class="header-anchor" href="#参数-10" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">red value</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">green value</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">blue value</td></tr></tbody></table><h4 id="返回值-16" tabindex="-1"><a class="header-anchor" href="#返回值-16" aria-hidden="true">#</a> 返回值</h4>`,6),Wn=n("code",null,"Color",-1),Xn=n("p",null,"a new color",-1),Yn=n("hr",null,null,-1),Zn=n("h3",{id:"fromrgbo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fromrgbo","aria-hidden":"true"},"#"),t(" fromRGBO")],-1),$n=n("code",null,"Static",-1),nt=n("strong",null,"fromRGBO",-1),tt=n("code",null,"r",-1),at=n("code",null,"g",-1),st=n("code",null,"b",-1),et=n("code",null,"opacity",-1),ot=n("code",null,"Color",-1),lt=o("<p>从红、绿、蓝和透明度通道构造一个颜色。</p><ul><li><code>r</code>是[红]，范围为0-255。</li><li><code>g</code>是[绿]，范围为0-255。</li><li><code>b</code>是[蓝]，范围为0-255。</li><li><code>opacity</code>是透明度通道的值，0表示透明，1表示完全不透明。</li></ul><p>超出范围的值会取255的模以保证在255范围内。</p><p><strong><code>参见</code></strong></p>",4),ct=o('<h4 id="参数-11" tabindex="-1"><a class="header-anchor" href="#参数-11" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">red通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">green通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">blue通道的值，范围为0-255</td></tr><tr><td style="text-align:left;"><code>opacity</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">alpha通道的值，范围为0-1</td></tr></tbody></table><h4 id="返回值-17" tabindex="-1"><a class="header-anchor" href="#返回值-17" aria-hidden="true">#</a> 返回值</h4>',3),dt=n("code",null,"Color",-1),rt=n("p",null,"新的颜色",-1),pt=n("hr",null,null,-1),it=n("h3",{id:"parse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parse","aria-hidden":"true"},"#"),t(" parse")],-1),ut=n("code",null,"Static",-1),ht=n("strong",null,"parse",-1),kt=n("code",null,"color",-1),gt=n("code",null,"null",-1),_t=n("code",null,"Color",-1),ft=o(`<p>解析十六进制字符串构造一个颜色。若解析失败，则返回null。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> Color<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;#ff0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-12" tabindex="-1"><a class="header-anchor" href="#参数-12" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">颜色字符串，格式为#RRGGBB或#AARRGGBB</td></tr></tbody></table><h4 id="返回值-18" tabindex="-1"><a class="header-anchor" href="#返回值-18" aria-hidden="true">#</a> 返回值</h4>`,6),bt=n("code",null,"null",-1),mt=n("code",null,"Color",-1),vt=n("p",null,"新的颜色，或者null",-1);function xt(yt,Ct){const a=c("RouterLink");return d(),r("div",null,[n("p",null,[s(a,{to:"/v9/generated/modules/color.html"},{default:e(()=>[t("color")]),_:1}),t(".Color")]),i,u,h,n("ul",null,[n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#constructor"},{default:e(()=>[t("constructor")]),_:1})])]),k,n("ul",null,[n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#alpha"},{default:e(()=>[t("alpha")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#blue"},{default:e(()=>[t("blue")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#green"},{default:e(()=>[t("green")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#opacity"},{default:e(()=>[t("opacity")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#red"},{default:e(()=>[t("red")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#value"},{default:e(()=>[t("value")]),_:1})])]),g,n("ul",null,[n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#equals"},{default:e(()=>[t("equals")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#issimilarto"},{default:e(()=>[t("isSimilarTo")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#tostring"},{default:e(()=>[t("toString")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#withalpha"},{default:e(()=>[t("withAlpha")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#withblue"},{default:e(()=>[t("withBlue")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#withgreen"},{default:e(()=>[t("withGreen")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#withopacity"},{default:e(()=>[t("withOpacity")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#withred"},{default:e(()=>[t("withRed")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromargb"},{default:e(()=>[t("fromARGB")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromgray"},{default:e(()=>[t("fromGray")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromrgb"},{default:e(()=>[t("fromRGB")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromrgbo"},{default:e(()=>[t("fromRGBO")]),_:1})]),n("li",null,[s(a,{to:"/v9/generated/classes/color.Color.html#parse"},{default:e(()=>[t("parse")]),_:1})])]),_,n("table",null,[f,n("tbody",null,[n("tr",null,[b,n("td",m,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[v]),_:1})])])])]),x,n("p",null,[s(a,{to:"/v9/generated/interfaces/color.CompareColorOptions.html"},{default:e(()=>[t("CompareColorOptions")]),_:1})]),y,n("table",null,[C,n("tbody",null,[n("tr",null,[w,n("td",j,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[q]),_:1})]),G]),n("tr",null,[B,n("td",F,[s(a,{to:"/v9/generated/interfaces/color.CompareColorOptions.html"},{default:e(()=>[R]),_:1})]),S])])]),A,n("p",null,[t("▸ "),O,t("("),T,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[N]),_:1})]),V,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[L]),_:1})]),E,z,D,n("p",null,[t("▸ "),H,t("("),I,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[J]),_:1})]),K,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[M]),_:1})]),P,Q,U,n("p",null,[t("▸ "),W,t("("),X,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[Y]),_:1})]),Z,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[$]),_:1})]),nn,tn,an,n("p",null,[t("▸ "),sn,t("("),en,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[on]),_:1})]),ln,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[cn]),_:1})]),dn,rn,pn,n("p",null,[t("▸ "),un,t("("),hn,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[kn]),_:1})]),gn,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[_n]),_:1})]),fn,bn,mn,n("p",null,[t("▸ "),vn,t(),xn,t("("),yn,t(", "),Cn,t(", "),wn,t(", "),jn,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[qn]),_:1})]),Gn,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromrgbo"},{default:e(()=>[t("fromRGBO")]),_:1}),t(" which takes the alpha value as a floating point value.")]),Bn,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[Fn]),_:1})]),Rn,Sn,An,n("p",null,[t("▸ "),On,t(),Tn,t("("),Nn,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[Vn]),_:1})]),Ln,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[En]),_:1})]),zn,Dn,Hn,n("p",null,[t("▸ "),In,t(),Jn,t("("),Kn,t(", "),Mn,t(", "),Pn,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[Qn]),_:1})]),Un,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[Wn]),_:1})]),Xn,Yn,Zn,n("p",null,[t("▸ "),$n,t(),nt,t("("),tt,t(", "),at,t(", "),st,t(", "),et,t("): "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[ot]),_:1})]),lt,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html#fromargb"},{default:e(()=>[t("fromARGB")]),_:1}),t(" which takes the opacity as an integer value.")]),ct,n("p",null,[s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[dt]),_:1})]),rt,pt,it,n("p",null,[t("▸ "),ut,t(),ht,t("("),kt,t("): "),gt,t(" | "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[_t]),_:1})]),ft,n("p",null,[bt,t(" | "),s(a,{to:"/v9/generated/classes/color.Color.html"},{default:e(()=>[mt]),_:1})]),vt])}const qt=l(p,[["render",xt],["__file","color.Color.html.vue"]]);export{qt as default};
