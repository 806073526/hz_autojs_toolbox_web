import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as h,c as i,d as e,b as o,w as a,e as t,f as r}from"./app-ff93bfbc.js";const c={},u=e("p",null,"A color represented using [alpha], [hue], [saturation], and [value]. An [HSVColor] is represented in a parameter space that's based on human perception of color in pigments (e.g. paint and printer's ink). The representation is useful for some color computations (e.g. rotating the hue through the colors), because interpolation and picking of colors as red, green, and blue channels doesn't always produce intuitive results. The HSV color space models the way that different pigments are perceived when mixed. The hue describes which pigment is used, the saturation describes which shade of the pigment, and the value resembles mixing the pigment with different amounts of black or white pigment. See also:",-1),_=e("li",null,"[HSLColor], a color that uses a color space based on human perception of colored light.",-1),f={href:"https://en.wikipedia.org/wiki/HSL_and_HSV",target:"_blank",rel:"noopener noreferrer"},p=e("h2",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),t(" 目录")],-1),g=e("h3",{id:"属性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),t(" 属性")],-1),b=e("h3",{id:"方法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),t(" 方法")],-1),m=r('<h2 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1" aria-hidden="true">#</a> 属性</h2><h3 id="alpha" tabindex="-1"><a class="header-anchor" href="#alpha" aria-hidden="true">#</a> alpha</h3><p>• <code>Readonly</code> <strong>alpha</strong>: <code>number</code></p><p>Alpha, from 0.0 to 1.0. The describes the transparency of the color. A value of 0.0 is fully transparent, and 1.0 is fully opaque.</p><hr><h3 id="hue" tabindex="-1"><a class="header-anchor" href="#hue" aria-hidden="true">#</a> hue</h3><p>• <code>Readonly</code> <strong>hue</strong>: <code>number</code></p><p>Hue, from 0.0 to 360.0. Describes which color of the spectrum is represented. A value of 0.0 represents red, as does 360.0. Values in between go through all the hues representable in RGB. You can think of this as selecting which pigment will be added to a color.</p><hr><h3 id="saturation" tabindex="-1"><a class="header-anchor" href="#saturation" aria-hidden="true">#</a> saturation</h3><p>• <code>Readonly</code> <strong>saturation</strong>: <code>number</code></p><p>Saturation, from 0.0 to 1.0. This describes how colorful the color is. 0.0 implies a shade of grey (i.e. no pigment), and 1.0 implies a color as vibrant as that hue gets. You can think of this as the equivalent of how much of a pigment is added.</p><hr><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h3><p>• <code>Readonly</code> <strong>value</strong>: <code>number</code></p><p>Value, from 0.0 to 1.0. The &quot;value&quot; of a color that, in this context, describes how bright a color is. A value of 0.0 indicates black, and 1.0 indicates full intensity color. You can think of this as the equivalent of removing black from the color as value increases.</p><h2 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1" aria-hidden="true">#</a> 方法</h2><h3 id="scalealpha" tabindex="-1"><a class="header-anchor" href="#scalealpha" aria-hidden="true">#</a> _scaleAlpha</h3>',18),x=e("strong",null,"_scaleAlpha",-1),y=e("code",null,"factor",-1),v=e("code",null,"HSVColor",-1),C=r('<h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>factor</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4>',3),S=e("code",null,"HSVColor",-1),V=r('<hr><h3 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>▸ <strong>equals</strong>(<code>other</code>): <code>boolean</code></p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>other</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><hr><h3 id="tocolor" tabindex="-1"><a class="header-anchor" href="#tocolor" aria-hidden="true">#</a> toColor</h3>',9),H=e("strong",null,"toColor",-1),w=e("code",null,"Color",-1),k=e("p",null,"Returns this color in RGB.",-1),A=e("h4",{id:"返回值-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回值-2","aria-hidden":"true"},"#"),t(" 返回值")],-1),R=e("code",null,"Color",-1),q=r('<hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring" aria-hidden="true">#</a> toString</h3><p>▸ <strong>toString</strong>(): <code>string</code></p><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>string</code></p><hr><h3 id="withalpha" tabindex="-1"><a class="header-anchor" href="#withalpha" aria-hidden="true">#</a> withAlpha</h3>',7),T=e("strong",null,"withAlpha",-1),L=e("code",null,"alpha",-1),B=e("code",null,"HSVColor",-1),N=r('<p>Returns a copy of this color with the [alpha] parameter replaced with the given value.</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>alpha</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-4" tabindex="-1"><a class="header-anchor" href="#返回值-4" aria-hidden="true">#</a> 返回值</h4>',4),E=e("code",null,"HSVColor",-1),G=e("hr",null,null,-1),I=e("h3",{id:"withhue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withhue","aria-hidden":"true"},"#"),t(" withHue")],-1),Y=e("strong",null,"withHue",-1),D=e("code",null,"hue",-1),W=e("code",null,"HSVColor",-1),j=r('<p>Returns a copy of this color with the [hue] parameter replaced with the given value.</p><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>hue</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-5" tabindex="-1"><a class="header-anchor" href="#返回值-5" aria-hidden="true">#</a> 返回值</h4>',4),z=e("code",null,"HSVColor",-1),F=e("hr",null,null,-1),J=e("h3",{id:"withsaturation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withsaturation","aria-hidden":"true"},"#"),t(" withSaturation")],-1),K=e("strong",null,"withSaturation",-1),M=e("code",null,"saturation",-1),O=e("code",null,"HSVColor",-1),P=r('<p>Returns a copy of this color with the [saturation] parameter replaced with the given value.</p><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>saturation</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-6" tabindex="-1"><a class="header-anchor" href="#返回值-6" aria-hidden="true">#</a> 返回值</h4>',4),Q=e("code",null,"HSVColor",-1),U=e("hr",null,null,-1),X=e("h3",{id:"withvalue",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#withvalue","aria-hidden":"true"},"#"),t(" withValue")],-1),Z=e("strong",null,"withValue",-1),$=e("code",null,"value",-1),ee=e("code",null,"HSVColor",-1),te=r('<p>Returns a copy of this color with the [value] parameter replaced with the given value.</p><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-7" tabindex="-1"><a class="header-anchor" href="#返回值-7" aria-hidden="true">#</a> 返回值</h4>',4),oe=e("code",null,"HSVColor",-1),le=e("hr",null,null,-1),ae=e("h3",{id:"fromahsv",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fromahsv","aria-hidden":"true"},"#"),t(" fromAHSV")],-1),re=e("code",null,"Static",-1),ne=e("strong",null,"fromAHSV",-1),de=e("code",null,"alpha",-1),se=e("code",null,"hue",-1),he=e("code",null,"saturation",-1),ie=e("code",null,"value",-1),ce=e("code",null,"HSVColor",-1),ue=r('<p>Creates a color.</p><p>All the arguments must not be null and be in their respective ranges. See the fields for each parameter for a description of their ranges.</p><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>alpha</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>hue</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>saturation</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4>',5),_e=e("code",null,"HSVColor",-1),fe=e("hr",null,null,-1),pe=e("h3",{id:"fromcolor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#fromcolor","aria-hidden":"true"},"#"),t(" fromColor")],-1),ge=e("code",null,"Static",-1),be=e("strong",null,"fromColor",-1),me=e("code",null,"color",-1),xe=e("code",null,"HSVColor",-1),ye=e("p",null,"Creates an [HSVColor] from an RGB [Color].",-1),ve=e("p",null,"This constructor does not necessarily round-trip with [toColor] because of floating point imprecision.",-1),Ce=e("h4",{id:"参数-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参数-7","aria-hidden":"true"},"#"),t(" 参数")],-1),Se=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型")])],-1),Ve=e("td",{style:{"text-align":"left"}},[e("code",null,"color")],-1),He={style:{"text-align":"left"}},we=e("code",null,"Color",-1),ke=e("h4",{id:"返回值-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回值-9","aria-hidden":"true"},"#"),t(" 返回值")],-1),Ae=e("code",null,"HSVColor",-1),Re=e("hr",null,null,-1),qe=e("h3",{id:"lerp",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#lerp","aria-hidden":"true"},"#"),t(" lerp")],-1),Te=e("code",null,"Static",-1),Le=e("strong",null,"lerp",-1),Be=e("code",null,"a",-1),Ne=e("code",null,"b",-1),Ee=e("code",null,"t",-1),Ge=e("code",null,"undefined",-1),Ie=e("code",null,"HSVColor",-1),Ye=r('<p>Linearly interpolate between two HSVColors.</p><p>The colors are interpolated by interpolating the [alpha], [hue], [saturation], and [value] channels separately, which usually leads to a more pleasing effect than [Color.lerp] (which interpolates the red, green, and blue channels separately).</p><p>If either color is null, this function linearly interpolates from a transparent instance of the other color. This is usually preferable to interpolating from [Colors.transparent] (<code>const Color(0x00000000)</code>) since that will interpolate from a transparent red and cycle through the hues to match the target color, regardless of what that color&#39;s hue is.</p><p>Values outside of the valid range for each channel will be clamped.</p><h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>a</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>b</code></td><td style="text-align:left;"><code>null</code></td></tr><tr><td style="text-align:left;"><code>t</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-10" tabindex="-1"><a class="header-anchor" href="#返回值-10" aria-hidden="true">#</a> 返回值</h4>',7),De=e("code",null,"undefined",-1),We=e("code",null,"HSVColor",-1);function je(ze,Fe){const l=n("RouterLink"),d=n("ExternalLinkIcon");return h(),i("div",null,[e("p",null,[o(l,{to:"/v9/generated/modules/color.html"},{default:a(()=>[t("color")]),_:1}),t(".HSVColor")]),u,e("ul",null,[_,e("li",null,[e("a",f,[t("HSV and HSL"),o(d)]),t(" Wikipedia article, which this implementation is based upon.")])]),p,g,e("ul",null,[e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#alpha"},{default:a(()=>[t("alpha")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#hue"},{default:a(()=>[t("hue")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#saturation"},{default:a(()=>[t("saturation")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#value"},{default:a(()=>[t("value")]),_:1})])]),b,e("ul",null,[e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#_scalealpha"},{default:a(()=>[t("_scaleAlpha")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#equals"},{default:a(()=>[t("equals")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#tocolor"},{default:a(()=>[t("toColor")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#tostring"},{default:a(()=>[t("toString")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#withalpha"},{default:a(()=>[t("withAlpha")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#withhue"},{default:a(()=>[t("withHue")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#withsaturation"},{default:a(()=>[t("withSaturation")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#withvalue"},{default:a(()=>[t("withValue")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#fromahsv"},{default:a(()=>[t("fromAHSV")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#fromcolor"},{default:a(()=>[t("fromColor")]),_:1})]),e("li",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html#lerp"},{default:a(()=>[t("lerp")]),_:1})])]),m,e("p",null,[t("▸ "),x,t("("),y,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[v]),_:1})]),C,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[S]),_:1})]),V,e("p",null,[t("▸ "),H,t("(): "),o(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[w]),_:1})]),k,A,e("p",null,[o(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[R]),_:1})]),q,e("p",null,[t("▸ "),T,t("("),L,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[B]),_:1})]),N,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[E]),_:1})]),G,I,e("p",null,[t("▸ "),Y,t("("),D,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[W]),_:1})]),j,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[z]),_:1})]),F,J,e("p",null,[t("▸ "),K,t("("),M,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[O]),_:1})]),P,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[Q]),_:1})]),U,X,e("p",null,[t("▸ "),Z,t("("),$,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[ee]),_:1})]),te,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[oe]),_:1})]),le,ae,e("p",null,[t("▸ "),re,t(),ne,t("("),de,t(", "),se,t(", "),he,t(", "),ie,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[ce]),_:1})]),ue,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[_e]),_:1})]),fe,pe,e("p",null,[t("▸ "),ge,t(),be,t("("),me,t("): "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[xe]),_:1})]),ye,ve,Ce,e("table",null,[Se,e("tbody",null,[e("tr",null,[Ve,e("td",He,[o(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[we]),_:1})])])])]),ke,e("p",null,[o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[Ae]),_:1})]),Re,qe,e("p",null,[t("▸ "),Te,t(),Le,t("("),Be,t(", "),Ne,t(", "),Ee,t("): "),Ge,t(" | "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[Ie]),_:1})]),Ye,e("p",null,[De,t(" | "),o(l,{to:"/v9/generated/classes/color.HSVColor.html"},{default:a(()=>[We]),_:1})])])}const Me=s(c,[["render",je],["__file","color.HSVColor.html.vue"]]);export{Me as default};
