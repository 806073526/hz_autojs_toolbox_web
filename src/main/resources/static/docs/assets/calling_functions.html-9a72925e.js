import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-ff93bfbc.js";const e={},o=t(`<h2 id="auto-js中实现电话拨打功能的两种方式" tabindex="-1"><a class="header-anchor" href="#auto-js中实现电话拨打功能的两种方式" aria-hidden="true">#</a> Auto.js中实现电话拨打功能的两种方式</h2><p>在Auto.js中，我们可以使用不同的方式来实现电话拨打功能。本文将介绍其中的两种方式，并提供示例代码。</p><h3 id="跳转拨号界面" tabindex="-1"><a class="header-anchor" href="#跳转拨号界面" aria-hidden="true">#</a> 跳转拨号界面</h3><p>首先，我们可以通过跳转拨号界面的方式实现电话拨打功能。这种方式不需要额外的权限，用户需要手动点击拨打按钮来完成拨号操作。</p><p>以下是使用Auto.js实现跳转拨号界面的示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> Intent <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;DIAL&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;tel:10000&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>Intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这段代码中，我们创建了一个名为<code>Intent</code>的对象，并设置了两个属性：<code>action</code>和<code>data</code>。其中，<code>action</code>的值为<code>DIAL</code>，表示拨号动作；<code>data</code>的值为<code>tel:10000</code>，表示要拨打的电话号码是10000。通过调用<code>app.startActivity(Intent)</code>方法，我们可以在Auto.js应用中启动系统的电话拨号界面，并自动填充电话号码为10000。</p><h3 id="直接拨号" tabindex="-1"><a class="header-anchor" href="#直接拨号" aria-hidden="true">#</a> 直接拨号</h3><p>另一种实现电话拨打功能的方式是直接拨号。但是，这种方式需要在应用中添加相应的权限声明。</p><p>以下是使用Auto.js实现直接拨号的示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> Intent <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;android.intent.action.CALL&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;tel:10000&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>Intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与跳转拨号界面不同，这段代码中的<code>Intent</code>对象设置了两个属性：<code>action</code>和<code>data</code>。其中，<code>action</code>的值为<code>android.intent.action.CALL</code>，表示进行呼叫操作；<code>data</code>的值为<code>tel:10000</code>，表示要拨打的电话号码是10000。</p><p>在中使用直接拨号方式时：</p><ul><li>安卓 <ul><li>需要在<code>AndroidManifest.xml</code>文件中添加相应的权限声明：</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.CALL_PHONE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Autojs <ul><li>需要在<code>project.json</code>文件中添加相应的权限声明：</li></ul></li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;permissionConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;manifestPermissions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token string">&quot;android.permission.CALL_PHONE&quot;</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>- 建议配置启动时自动申请权限:
</code></pre><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;permissionConfig&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token property">&quot;manifestPermissions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token string">&quot;android.permission.CALL_PHONE&quot;</span>
		<span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token property">&quot;requestListOnStartup&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
			<span class="token string">&quot;android.permission.CALL_PHONE&quot;</span>
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样才能确保Auto.js应用在运行时具有拨号权限。</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>本文介绍了在Auto.js中实现电话拨打功能的两种方式。跳转拨号界面方式无需额外权限，但用户需要手动点击拨打按钮来完成拨号操作。直接拨号方式可以直接进行拨号，但需要在应用中添加相应的权限声明。根据实际需求，选择适合的方式来实现电话拨打功能。</p>`,22),p=[o];function i(c,l){return s(),a("div",null,p)}const u=n(e,[["render",i],["__file","calling_functions.html.vue"]]);export{u as default};
