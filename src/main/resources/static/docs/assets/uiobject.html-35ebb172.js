import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as u,d as n,e as a,b as s,w as e,f as o}from"./app-ff93bfbc.js";const d={},r=o('<h2 id="uiobject" tabindex="-1"><a class="header-anchor" href="#uiobject" aria-hidden="true">#</a> UiObject</h2><p>UiObject表示一个控件，可以通过这个对象获取到控件的属性，也可以对控件进行点击、长按等操作。</p><p>获取一个UiObject通常通过选择器的<code>findOne()</code>, <code>findOnce()</code>等函数，也可以通过UiCollection来获取，或者通过<code>UiObject.child()</code>, <code>UiObject.parent()</code>等函数来获取一个控件的子控件或父控件。</p><h3 id="uiobject-click" tabindex="-1"><a class="header-anchor" href="#uiobject-click" aria-hidden="true">#</a> UiObject.click()</h3><ul><li>返回 {boolean}</li></ul><p>点击该控件，并返回是否点击成功。</p><p>如果该函数返回false，可能是该控件不可点击(clickable为false)，当前界面无法响应该点击等（这种情况下可以使用<code>clickCenter()</code>代替）。</p><h3 id="uiobject-clickcenter" tabindex="-1"><a class="header-anchor" href="#uiobject-clickcenter" aria-hidden="true">#</a> UiObject.clickCenter()</h3>',8),k={href:"//www.wuyunai.com/docs",target:"_blank",rel:"noopener noreferrer"},h=o(`<ul><li>返回 {boolean}</li></ul><p>使用坐标点击该控件的中点，相当于<code>click(uiObj.bounds().centerX(), uiObject.bounds().centerY())</code>。</p><p>返回是否点击成功。</p><h3 id="uiobject-longclick" tabindex="-1"><a class="header-anchor" href="#uiobject-longclick" aria-hidden="true">#</a> UiObject.longClick()</h3><ul><li>返回 {boolean}</li></ul><p>长按该控件，并返回是否点击成功。</p><p>如果该函数返回false，可能是该控件不可点击(longClickable为false)，当前界面无法响应该点击等。</p><h3 id="uiobject-settext-text" tabindex="-1"><a class="header-anchor" href="#uiobject-settext-text" aria-hidden="true">#</a> UiObject.setText(text)</h3><ul><li><code>text</code> {string} 文本</li><li>返回 {boolean}</li></ul><p>设置输入框控件的文本内容，并返回是否设置成功。</p><p>该函数只对可编辑的输入框(editable为true)有效。</p><h3 id="uiobject-copy" tabindex="-1"><a class="header-anchor" href="#uiobject-copy" aria-hidden="true">#</a> UiObject.copy()</h3><ul><li>返回 {boolean}</li></ul><p>对输入框文本的选中内容进行复制，并返回是否操作成功。</p><p>该函数只能用于输入框控件，并且当前输入框控件有选中的文本。可以通过<code>setSelection()</code>函数来设置输入框选中的内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> et <span class="token operator">=</span> <span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;EditText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//选中前两个字</span>
et<span class="token punctuation">.</span><span class="token function">setSelection</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//对选中内容进行复制</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;复制成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;复制失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-cut" tabindex="-1"><a class="header-anchor" href="#uiobject-cut" aria-hidden="true">#</a> UiObject.cut()</h3><p>对输入框文本的选中内容进行剪切，并返回是否操作成功。</p><p>该函数只能用于输入框控件，并且当前输入框控件有选中的文本。可以通过<code>setSelection()</code>函数来设置输入框选中的内容。</p><h3 id="uiobject-paste" tabindex="-1"><a class="header-anchor" href="#uiobject-paste" aria-hidden="true">#</a> UiObject.paste()</h3><ul><li>返回 {boolean}</li></ul><p>对输入框控件进行粘贴操作，把剪贴板内容粘贴到输入框中，并返回是否操作成功。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//设置剪贴板内容为“你好”</span>
<span class="token function">setClip</span><span class="token punctuation">(</span><span class="token string">&quot;你好&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> et <span class="token operator">=</span> <span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;EditText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
et<span class="token punctuation">.</span><span class="token function">paste</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-setselection-start-end" tabindex="-1"><a class="header-anchor" href="#uiobject-setselection-start-end" aria-hidden="true">#</a> UiObject.setSelection(start, end)</h3><ul><li><code>start</code> {number} 选中内容起始位置</li><li><code>end</code> {number} 选中内容结束位置(不包括)</li><li>返回 {boolean}</li></ul><p>对输入框控件设置选中的文字内容，并返回是否操作成功。</p><p>索引是从0开始计算的；并且，选中内容不包含end位置的字符。例如，如果一个输入框内容为&quot;123456789&quot;，要选中&quot;4567&quot;的文字的代码为<code>et.setSelection(3, 7)</code>。</p><p>该函数也可以用来设置光标位置，只要参数的end等于start，即可把输入框光标设置在start的位置。例如<code>et.setSelection(1, 1)</code>会把光标设置在第一个字符的后面。</p><h3 id="uiobject-scrollforward" tabindex="-1"><a class="header-anchor" href="#uiobject-scrollforward" aria-hidden="true">#</a> UiObject.scrollForward()</h3><ul><li>返回 {boolean}</li></ul><p>对控件执行向前滑动的操作，并返回是否操作成功。</p><p>向前滑动包括了向右和向下滑动。如果一个控件既可以向右滑动和向下滑动，那么执行<code>scrollForward()</code>的行为是未知的(这是因为Android文档没有指出这一点，同时也没有充分的测试可供参考)。</p><h3 id="uiobject-scrollbackward" tabindex="-1"><a class="header-anchor" href="#uiobject-scrollbackward" aria-hidden="true">#</a> UiObject.scrollBackward()</h3><ul><li>返回 {boolean}</li></ul><p>对控件执行向后滑动的操作，并返回是否操作成功。</p><p>向后滑动包括了向右和向下滑动。如果一个控件既可以向右滑动和向下滑动，那么执行<code>scrollForward()</code>的行为是未知的(这是因为Android文档没有指出这一点，同时也没有充分的测试可供参考)。</p><h3 id="uiobject-select" tabindex="-1"><a class="header-anchor" href="#uiobject-select" aria-hidden="true">#</a> UiObject.select()</h3><ul><li>返回 {boolean}</li></ul><p>对控件执行&quot;选中&quot;操作，并返回是否操作成功。&quot;选中&quot;和<code>isSelected()</code>的属性相关，但该操作十分少用。</p><h3 id="uiobject-collapse" tabindex="-1"><a class="header-anchor" href="#uiobject-collapse" aria-hidden="true">#</a> UiObject.collapse()</h3><ul><li>返回 {boolean}</li></ul><p>对控件执行折叠操作，并返回是否操作成功。</p><h3 id="uiobject-expand" tabindex="-1"><a class="header-anchor" href="#uiobject-expand" aria-hidden="true">#</a> UiObject.expand()</h3><ul><li>返回 {boolean}</li></ul><p>对控件执行操作，并返回是否操作成功。</p><h3 id="uiobject-show" tabindex="-1"><a class="header-anchor" href="#uiobject-show" aria-hidden="true">#</a> UiObject.show()</h3><p>执行显示操作，并返回是否全部操作成功。</p><h3 id="uiobject-scrollup" tabindex="-1"><a class="header-anchor" href="#uiobject-scrollup" aria-hidden="true">#</a> UiObject.scrollUp()</h3><ul><li>返回 {boolean}</li></ul><p>执行向上滑的操作，并返回是否全部操作成功。（虽然有些控件看起来可以滑动，但调用<code>scrollUp</code>可能无效，可以用<code>scrollBackward</code>代替）</p><h3 id="uiobject-scrolldown" tabindex="-1"><a class="header-anchor" href="#uiobject-scrolldown" aria-hidden="true">#</a> UiObject.scrollDown()</h3><ul><li>返回 {boolean}</li></ul><p>执行向下滑的操作，并返回是否全部操作成功。（虽然有些控件看起来可以滑动，但调用<code>scrollDown</code>可能无效，可以用<code>scrollForward</code>代替）</p><h3 id="uiobject-scrollleft" tabindex="-1"><a class="header-anchor" href="#uiobject-scrollleft" aria-hidden="true">#</a> UiObject.scrollLeft()</h3><ul><li>返回 {boolean}</li></ul><p>执行向左滑的操作，并返回是否全部操作成功。（虽然有些控件看起来可以滑动，但调用<code>scrollLeft</code>可能无效，可以用<code>scrollBackward</code>代替）</p><h3 id="uiobject-scrollright" tabindex="-1"><a class="header-anchor" href="#uiobject-scrollright" aria-hidden="true">#</a> UiObject.scrollRight()</h3><ul><li>返回 {boolean}</li></ul><p>执行向右滑的操作，并返回是否全部操作成功。（虽然有些控件看起来可以滑动，但调用<code>scrollRight</code>可能无效，可以用<code>scrollForward</code>代替）</p><h3 id="uiobject-children" tabindex="-1"><a class="header-anchor" href="#uiobject-children" aria-hidden="true">#</a> UiObject.children()</h3><ul><li>返回 {<a href="#uicollection">UiCollection</a>}</li></ul><p>返回该控件的所有子控件组成的控件集合。可以用于遍历一个控件的子控件，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;AbsListView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-childcount" tabindex="-1"><a class="header-anchor" href="#uiobject-childcount" aria-hidden="true">#</a> UiObject.childCount()</h3><ul><li>返回 {number}</li></ul><p>返回子控件数目。</p><h3 id="uiobject-child-i" tabindex="-1"><a class="header-anchor" href="#uiobject-child-i" aria-hidden="true">#</a> UiObject.child(i)</h3><ul><li><code>i</code> {number} 子控件索引</li><li>返回 {UiObject}</li></ul><p>返回第i+1个子控件。如果i&gt;=控件数目或者小于0，则抛出异常。</p><p>需要注意的是，由于布局捕捉的问题，该函数可能返回<code>null</code>，也就是可能获取不到某个子控件。</p><p>遍历子控件的示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;AbsListView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">childCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> child <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">child</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">log</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-parent" tabindex="-1"><a class="header-anchor" href="#uiobject-parent" aria-hidden="true">#</a> UiObject.parent()</h3><ul><li>返回 {UiObject}</li></ul><p>返回该控件的父控件。如果该控件没有父控件，返回<code>null</code>。</p><h3 id="uiobject-bounds" tabindex="-1"><a class="header-anchor" href="#uiobject-bounds" aria-hidden="true">#</a> UiObject.bounds()</h3>`,76),b=o(`<p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;Auto.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&quot;控件在屏幕上的范围为&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果一个控件本身无法通过<code>click()</code>点击，那么我们可以利用<code>bounds()</code>函数获取其坐标，再利用坐标点击。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">desc</span><span class="token punctuation">(</span><span class="token string">&quot;打开侧拉菜单&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">click</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">centerX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token function">centerY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//如果使用root权限，则用 Tap(b.centerX(), b.centerY());</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-boundsinparent" tabindex="-1"><a class="header-anchor" href="#uiobject-boundsinparent" aria-hidden="true">#</a> UiObject.boundsInParent()</h3>`,5),v={href:"/v8/automator/api.html#rect",target:"_blank",rel:"noopener noreferrer"},f={href:"/v8/automator/api.html#rect",target:"_blank",rel:"noopener noreferrer"},m=o('<h3 id="uiobject-drawingorder" tabindex="-1"><a class="header-anchor" href="#uiobject-drawingorder" aria-hidden="true">#</a> UiObject.drawingOrder()</h3><ul><li>返回 {number}</li></ul><p>返回控件在父控件中的绘制次序。该函数在安卓7.0及以上才有效，7.0以下版本调用会返回0。</p><h3 id="uiobject-id" tabindex="-1"><a class="header-anchor" href="#uiobject-id" aria-hidden="true">#</a> UiObject.id()</h3><ul><li>返回 {string}</li></ul><p>获取控件的id，如果一个控件没有id，则返回<code>null</code>。</p><h3 id="uiobject-text" tabindex="-1"><a class="header-anchor" href="#uiobject-text" aria-hidden="true">#</a> UiObject.text()</h3><ul><li>返回 {string}</li></ul><p>获取控件的文本，如果控件没有文本，返回<code>&quot;&quot;</code>。</p><h3 id="uiobject-findbytext-str" tabindex="-1"><a class="header-anchor" href="#uiobject-findbytext-str" aria-hidden="true">#</a> UiObject.findByText(str)</h3>',10),j=n("li",null,[n("code",null,"str"),a(" {string} 文本")],-1),_=n("p",null,[a("根据文本text在子控件中递归地寻找并返回文本或描述(desc)"),n("strong",null,"包含"),a("这段文本str的控件，返回它们组成的集合。")],-1),g=n("p",null,"该函数会在当前控件的子控件，孙控件，曾孙控件...中搜索text或desc包含str的控件，并返回它们组合的集合。",-1),x=n("h3",{id:"uiobject-findone-selector",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uiobject-findone-selector","aria-hidden":"true"},"#"),a(" UiObject.findOne(selector)")],-1),U=n("code",null,"selector",-1),w=o(`<p>根据选择器selector在该控件的子控件、孙控件...中搜索符合该选择器条件的控件，并返回找到的第一个控件；如果没有找到符合条件的控件则返回<code>null</code>。</p><p>例如，对于酷安动态列表，我们可以遍历他的子控件(每个动态列表项)，并在每个子控件中依次寻找点赞数量和图标，对于点赞数量小于10的点赞：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//找出动态列表</span>
<span class="token keyword">var</span> list <span class="token operator">=</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;recycler_view&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//遍历动态</span>
list<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//找出点赞图标</span>
    <span class="token keyword">var</span> like <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;feed_action_view_like&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//找出点赞数量</span>
    <span class="token keyword">var</span> likeCount <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;text_view&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果这两个控件没有找到就不继续了</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>like <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> likeCount <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//判断点赞数量是否小于10</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>likeCount<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//点赞</span>
        like<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uiobject-find-selector" tabindex="-1"><a class="header-anchor" href="#uiobject-find-selector" aria-hidden="true">#</a> UiObject.find(selector)</h3>`,4),O=n("code",null,"selector",-1),q=n("li",null,[a("返回 {"),n("a",{href:"#uicollection"},"UiCollection"),a("}")],-1),y=o(`<p>根据选择器selector在该控件的子控件、孙控件...中搜索符合该选择器条件的控件，并返回它们组合的集合。</p><h2 id="uicollection" tabindex="-1"><a class="header-anchor" href="#uicollection" aria-hidden="true">#</a> UiCollection</h2><p>UiCollection, 控件集合, 通过选择器的<code>find()</code>, <code>untilFind()</code>方法返回的对象。</p><p>UiCollection&quot;继承&quot;于数组，实际上是一个UiObject的数组，因此可以使用数组的函数和属性，例如使用length属性获取UiCollection的大小，使用forEach函数来遍历UiCollection。</p><p>例如，采用forEach遍历屏幕上所有的文本控件并打印出文本内容的代码为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;TextView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">tv</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>tv<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">log</span><span class="token punctuation">(</span>tv<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用传统的数组遍历方式：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> uc <span class="token operator">=</span> <span class="token function">className</span><span class="token punctuation">(</span><span class="token string">&quot;TextView&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> uc<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> tv <span class="token operator">=</span> uc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>tv<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">log</span><span class="token punctuation">(</span>tv<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>UiCollection的每一个元素都是UiObject，我们可以取出他的元素进行操作，例如取出第一个UiObject并点击的代码为<code>ui[0].click()</code>。如果想要对该集合的所有元素进行操作，可以直接在集合上调用相应的函数，例如<code>uc.click()</code>，该代码会对集合上所有UiObject执行点击操作并返回是否全部点击成功。</p><p>因此，UiCollection具有所有UiObject对控件操作的函数，包括<code>click()</code>, <code>longClick()</code>, <code>scrollForward()</code>等等，不再赘述。</p><h3 id="uicollection-size" tabindex="-1"><a class="header-anchor" href="#uicollection-size" aria-hidden="true">#</a> UiCollection.size()</h3><ul><li>返回 {number}</li></ul><p>返回集合中的控件数。</p><p>历史遗留函数，相当于属性length。</p><h3 id="uicollection-get-i" tabindex="-1"><a class="header-anchor" href="#uicollection-get-i" aria-hidden="true">#</a> UiCollection.get(i)</h3>`,15),C=n("li",null,[n("code",null,"i"),a(" {number} 索引")],-1),E=n("p",null,"返回集合中第i+1个控件(UiObject)。",-1),N=n("p",null,"历史遗留函数，建议直接使用数组下标的方式访问元素。",-1),S=n("h3",{id:"uicollection-each-func",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uicollection-each-func","aria-hidden":"true"},"#"),a(" UiCollection.each(func)")],-1),R=n("ul",null,[n("li",null,[n("code",null,"func"),a(" {Function} 遍历函数，参数为UiObject。")])],-1),F=n("p",null,"遍历集合。",-1),L=n("code",null,"forEach",-1),T={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach",target:"_blank",rel:"noopener noreferrer"},V=o('<h3 id="uicollection-empty" tabindex="-1"><a class="header-anchor" href="#uicollection-empty" aria-hidden="true">#</a> UiCollection.empty()</h3><ul><li>返回 {boolean}</li></ul><p>返回控件集合是否为空。</p><h3 id="uicollection-nonempty" tabindex="-1"><a class="header-anchor" href="#uicollection-nonempty" aria-hidden="true">#</a> UiCollection.nonEmpty()</h3><ul><li>返回 {boolean}</li></ul><p>返回控件集合是否非空。</p><h3 id="uicollection-find-selector" tabindex="-1"><a class="header-anchor" href="#uicollection-find-selector" aria-hidden="true">#</a> UiCollection.find(selector)</h3>',7),B=n("li",null,[n("code",null,"selector"),a(" {"),n("a",{href:"../automator/selector"},"UiSelector"),a("}")],-1),A=o(`<p>根据selector所确定的条件在该控件集合的控件、子控件、孙控件...中找到所有符合条件的控件并返回找到的控件集合。</p><p>注意这会递归地遍历控件集合里所有的控件以及他们的子控件。和数组的<code>filter</code>函数不同。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//在集合</span>
<span class="token keyword">var</span> clickableNames <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token function">clickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uicollection-findone-selector" tabindex="-1"><a class="header-anchor" href="#uicollection-findone-selector" aria-hidden="true">#</a> UiCollection.findOne(selector)</h3>`,5),z=n("li",null,[n("code",null,"selector"),a(" {"),n("a",{href:"../automator/selector"},"UiSelector"),a("}")],-1),I=n("p",null,[a("根据选择器selector在该控件集合的控件的子控件、孙控件...中搜索符合该选择器条件的控件，并返回找到的第一个控件；如果没有找到符合条件的控件则返回"),n("code",null,"null"),a("。")],-1);function X(Y,D){const c=p("ExternalLinkIcon"),t=p("RouterLink");return l(),u("div",null,[r,n("p",null,[n("strong",null,[a("["),n("a",k,[a("Pro 8.8.17新增"),s(c)]),a("]")])]),h,n("ul",null,[n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/api.html#rect"},{default:e(()=>[a("Rect")]),_:1}),a("}")])]),n("p",null,[a("返回控件在屏幕上的范围，其值是一个"),s(t,{to:"/v8/automator/api.html#rect"},{default:e(()=>[a("Rect")]),_:1}),a("对象。")]),b,n("ul",null,[n("li",null,[a("返回 {"),n("a",v,[a("Rect"),s(c)]),a("}")])]),n("p",null,[a("返回控件在父控件中的范围，其值是一个"),n("a",f,[a("Rect"),s(c)]),a("对象。")]),m,n("ul",null,[j,n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/uiobject.html#uicollection"},{default:e(()=>[a("UiCollection")]),_:1}),a("}")])]),_,g,x,n("ul",null,[n("li",null,[U,a(" {"),s(t,{to:"/v8/automator/selector.html"},{default:e(()=>[a("UiSelector")]),_:1}),a("}")]),n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/uiobject.html#uiobject"},{default:e(()=>[a("UiObject")]),_:1}),a("}")])]),w,n("ul",null,[n("li",null,[O,a(" {"),s(t,{to:"/v8/automator/selector.html"},{default:e(()=>[a("UiSelector")]),_:1}),a("}")]),q]),y,n("ul",null,[C,n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/uiobject.html#uiobject"},{default:e(()=>[a("UiObject")]),_:1}),a("}")])]),E,N,S,R,F,n("p",null,[a("历史遗留函数，相当于"),L,a("。参考"),n("a",T,[a("forEach"),s(c)]),a("。")]),V,n("ul",null,[B,n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/uiobject.html#uicollection"},{default:e(()=>[a("UiCollection")]),_:1}),a("}")])]),A,n("ul",null,[z,n("li",null,[a("返回 {"),s(t,{to:"/v8/automator/uiobject.html#uiobject"},{default:e(()=>[a("UiObject")]),_:1}),a("}")])]),I])}const J=i(d,[["render",X],["__file","uiobject.html.vue"]]);export{J as default};
