import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as s,d as e,b as t,w as a,e as o,f as d}from"./app-ff93bfbc.js";const h={},p=e("p",null,"对话框的配置属性。",-1),g=e("p",null,[e("strong",null,[e("code",null,"参见")])],-1),u=e("h2",{id:"目录",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),o(" 目录")],-1),_=e("h3",{id:"属性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),o(" 属性")],-1),f=d('<h2 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1" aria-hidden="true">#</a> 属性</h2><h3 id="cancelable" tabindex="-1"><a class="header-anchor" href="#cancelable" aria-hidden="true">#</a> cancelable</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>cancelable</strong>: <code>boolean</code></p><p>对话框是否可取消，如果为<code>false</code>，则对话框只能用代码手动取消。默认为`false·。</p><hr><h3 id="canceledontouchoutside" tabindex="-1"><a class="header-anchor" href="#canceledontouchoutside" aria-hidden="true">#</a> canceledOnTouchOutside</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>canceledOnTouchOutside</strong>: <code>boolean</code></p><p>对话框是否在点击对话框以外区域时自动取消，默认为<code>true</code></p><hr><h3 id="checkboxchecked" tabindex="-1"><a class="header-anchor" href="#checkboxchecked" aria-hidden="true">#</a> checkBoxChecked</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>checkBoxChecked</strong>: <code>boolean</code></p><p>勾选框是否勾选</p><hr><h3 id="checkboxprompt" tabindex="-1"><a class="header-anchor" href="#checkboxprompt" aria-hidden="true">#</a> checkBoxPrompt</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>checkBoxPrompt</strong>: <code>string</code></p><p>勾选框文字内容</p><hr><h3 id="content" tabindex="-1"><a class="header-anchor" href="#content" aria-hidden="true">#</a> content</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>content</strong>: <code>string</code></p><p>对话框文字内容</p><hr><h3 id="contentcolor" tabindex="-1"><a class="header-anchor" href="#contentcolor" aria-hidden="true">#</a> contentColor</h3>',22),m=e("code",null,"Optional",-1),x=e("code",null,"Readonly",-1),v=e("strong",null,"contentColor",-1),b=e("code",null,"Color",-1),y=d('<p>对话框文字内容的颜色</p><hr><h3 id="contentlinespacing" tabindex="-1"><a class="header-anchor" href="#contentlinespacing" aria-hidden="true">#</a> contentLineSpacing</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>contentLineSpacing</strong>: <code>number</code></p><p>对话框文字内容的行高倍数，1.0为一倍行高</p><hr><h3 id="customview" tabindex="-1"><a class="header-anchor" href="#customview" aria-hidden="true">#</a> customView</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>customView</strong>: <code>any</code></p><p>对话框的自定义视图，可使用inflateXml创建。<strong>使用自定义视图后，大部分对话框内的配置项，比如内容、进度条、输入框等将不再有效，需在自定义View中实现</strong></p><hr><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>icon</strong>: <code>string</code></p><p>对话框的图标，是一个URL或者图片对象</p><hr><h3 id="inputhint" tabindex="-1"><a class="header-anchor" href="#inputhint" aria-hidden="true">#</a> inputHint</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>inputHint</strong>: <code>string</code></p><p>对话框的输入框的输入提示</p><hr><h3 id="inputprefill" tabindex="-1"><a class="header-anchor" href="#inputprefill" aria-hidden="true">#</a> inputPrefill</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>inputPrefill</strong>: <code>string</code></p><p>对话框输入框的默认输入内容</p><hr><h3 id="items" tabindex="-1"><a class="header-anchor" href="#items" aria-hidden="true">#</a> items</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>items</strong>: <code>string</code>[]</p><p>对话框列表的选项</p><hr><h3 id="itemscolor" tabindex="-1"><a class="header-anchor" href="#itemscolor" aria-hidden="true">#</a> itemsColor</h3>',27),P=e("code",null,"Optional",-1),D=e("code",null,"Readonly",-1),O=e("strong",null,"itemsColor",-1),C=e("code",null,"Color",-1),R=d('<p>对话框列表的选项的文字颜色</p><hr><h3 id="itemsselectmode" tabindex="-1"><a class="header-anchor" href="#itemsselectmode" aria-hidden="true">#</a> itemsSelectMode</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>itemsSelectMode</strong>: <code>&quot;multi&quot;</code> | <code>&quot;single&quot;</code> | <code>&quot;select&quot;</code></p><p>对话框列表的选项选择模式，可以为:<code>multi</code>、<code>single</code>、<code>select</code>，分别代表多选框、单选框、选择列表</p><hr><h3 id="itemsselectedindex" tabindex="-1"><a class="header-anchor" href="#itemsselectedindex" aria-hidden="true">#</a> itemsSelectedIndex</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>itemsSelectedIndex</strong>: <code>number</code> | <code>number</code>[]</p><p>对话框列表中预先选中的项目索引，如果是单选模式为一个索引；多选模式则为数组</p><hr><h3 id="negative" tabindex="-1"><a class="header-anchor" href="#negative" aria-hidden="true">#</a> negative</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>negative</strong>: <code>string</code></p><p>对话框取消按钮的文字内容(确定按钮左边的按钮)</p><hr><h3 id="negativecolor" tabindex="-1"><a class="header-anchor" href="#negativecolor" aria-hidden="true">#</a> negativeColor</h3>',15),k=e("code",null,"Optional",-1),w=e("code",null,"Readonly",-1),S=e("strong",null,"negativeColor",-1),V=e("code",null,"Color",-1),B=d('<p>对话框取消按钮的文字颜色(确定按钮左边的按钮)</p><hr><h3 id="neutral" tabindex="-1"><a class="header-anchor" href="#neutral" aria-hidden="true">#</a> neutral</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>neutral</strong>: <code>string</code></p><p>对话框中立按钮的文字内容(最左边按钮)</p><hr><h3 id="neutralcolor" tabindex="-1"><a class="header-anchor" href="#neutralcolor" aria-hidden="true">#</a> neutralColor</h3>',7),T=e("code",null,"Optional",-1),I=e("code",null,"Readonly",-1),L=e("strong",null,"neutralColor",-1),q=e("code",null,"Color",-1),M=d('<p>对话框中立按钮的文字颜色(最左边按钮)</p><hr><h3 id="positive" tabindex="-1"><a class="header-anchor" href="#positive" aria-hidden="true">#</a> positive</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>positive</strong>: <code>string</code></p><p>对话框确定按钮的文字内容(最右边按钮)</p><hr><h3 id="positivecolor" tabindex="-1"><a class="header-anchor" href="#positivecolor" aria-hidden="true">#</a> positiveColor</h3>',7),N=e("code",null,"Optional",-1),E=e("code",null,"Readonly",-1),H=e("strong",null,"positiveColor",-1),j=e("code",null,"Color",-1),z=d('<p>对话框确定按钮的文字颜色(最右边按钮)</p><hr><h3 id="progress" tabindex="-1"><a class="header-anchor" href="#progress" aria-hidden="true">#</a> progress</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>progress</strong>: <code>Object</code></p><p>对话框进度条配置项</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>horizontal?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否显示为横向进度条，默认为false</td></tr><tr><td style="text-align:left;"><code>max</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">进度条的最大值</td></tr><tr><td style="text-align:left;"><code>progress?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">进度条的当前数值</td></tr><tr><td style="text-align:left;"><code>showMinMax?</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">是否显示进度条的最小指及最大值指示，默认为true</td></tr></tbody></table><hr><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>title</strong>: <code>string</code></p><p>对话框的标题。</p><hr><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type" aria-hidden="true">#</a> type</h3>',13),U=e("code",null,"Optional",-1),X=e("code",null,"Readonly",-1),A=e("strong",null,"type",-1),F=e("code",null,"DialogType",-1),G={href:"/v9/generated/modules/dialogs.html#dialogtype",target:"_blank",rel:"noopener noreferrer"},J={href:"https://pro.autojs.org/docs/zh/v9/generated/modules/dialogs.md#defaultdialogtype",target:"_blank",rel:"noopener noreferrer"},K=e("code",null,"defaultDialogType",-1),Q=e("code",null,"app",-1),W=d('<hr><h3 id="wrapinscrollview" tabindex="-1"><a class="header-anchor" href="#wrapinscrollview" aria-hidden="true">#</a> wrapInScrollView</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>wrapInScrollView</strong>: <code>boolean</code></p><p>对话框是否使用滚动视图包裹内容，默认为<code>true</code></p>',4);function Y(Z,$){const l=i("RouterLink"),n=i("ExternalLinkIcon");return c(),s("div",null,[e("p",null,[t(l,{to:"/v9/generated/modules/dialogs.html"},{default:a(()=>[o("dialogs")]),_:1}),o(".DialogProperties")]),p,g,e("p",null,[t(l,{to:"/v9/generated/modules/dialogs.html#builddialog"},{default:a(()=>[o("buildDialog")]),_:1})]),u,_,e("ul",null,[e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#cancelable"},{default:a(()=>[o("cancelable")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#canceledontouchoutside"},{default:a(()=>[o("canceledOnTouchOutside")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#checkboxchecked"},{default:a(()=>[o("checkBoxChecked")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#checkboxprompt"},{default:a(()=>[o("checkBoxPrompt")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#content"},{default:a(()=>[o("content")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#contentcolor"},{default:a(()=>[o("contentColor")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#contentlinespacing"},{default:a(()=>[o("contentLineSpacing")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#customview"},{default:a(()=>[o("customView")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#icon"},{default:a(()=>[o("icon")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#inputhint"},{default:a(()=>[o("inputHint")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#inputprefill"},{default:a(()=>[o("inputPrefill")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#items"},{default:a(()=>[o("items")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#itemscolor"},{default:a(()=>[o("itemsColor")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#itemsselectmode"},{default:a(()=>[o("itemsSelectMode")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#itemsselectedindex"},{default:a(()=>[o("itemsSelectedIndex")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#negative"},{default:a(()=>[o("negative")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#negativecolor"},{default:a(()=>[o("negativeColor")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#neutral"},{default:a(()=>[o("neutral")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#neutralcolor"},{default:a(()=>[o("neutralColor")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#positive"},{default:a(()=>[o("positive")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#positivecolor"},{default:a(()=>[o("positiveColor")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#progress"},{default:a(()=>[o("progress")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#title"},{default:a(()=>[o("title")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#type"},{default:a(()=>[o("type")]),_:1})]),e("li",null,[t(l,{to:"/v9/generated/interfaces/dialogs.DialogProperties.html#wrapinscrollview"},{default:a(()=>[o("wrapInScrollView")]),_:1})])]),f,e("p",null,[o("• "),m,o(),x,o(),v,o(": "),t(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[b]),_:1})]),y,e("p",null,[o("• "),P,o(),D,o(),O,o(": "),t(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[C]),_:1})]),R,e("p",null,[o("• "),k,o(),w,o(),S,o(": "),t(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[V]),_:1})]),B,e("p",null,[o("• "),T,o(),I,o(),L,o(": "),t(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[q]),_:1})]),M,e("p",null,[o("• "),N,o(),E,o(),H,o(": "),t(l,{to:"/v9/generated/classes/color.Color.html"},{default:a(()=>[j]),_:1})]),z,e("p",null,[o("• "),U,o(),X,o(),A,o(": "),t(l,{to:"/v9/generated/modules/dialogs.html#dialogtype"},{default:a(()=>[F]),_:1})]),e("p",null,[o("对话框类型，参考"),e("a",G,[o("DialogType"),t(n)]),o("。默认为"),e("a",J,[o("defaultDialogType"),t(n)]),o("，若未修改"),K,o("则默认为"),Q,o("。")]),W])}const te=r(h,[["render",Y],["__file","dialogs.DialogProperties.html.vue"]]);export{te as default};
