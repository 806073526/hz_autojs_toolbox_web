import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,d as n,e as s,b as a,w as e,f as l}from"./app-ff93bfbc.js";const d={},u=n("p",null,"shell即Unix Shell，在类Unix系统提供与操作系统交互的一系列命令。很多程序可以用来执行shell命令，例如终端模拟器。",-1),r=n("code",null,"node",-1),h=n("code",null,"npm",-1),k=n("code",null,"PATH",-1),f=n("a",{href:"#exec"},"exec",-1),g=n("h2",{id:"目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),s(" 目录")],-1),v=n("h3",{id:"接口",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#接口","aria-hidden":"true"},"#"),s(" 接口")],-1),m=n("h3",{id:"类型别名",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#类型别名","aria-hidden":"true"},"#"),s(" 类型别名")],-1),_=n("h3",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),s(" 函数")],-1),b=l('<h2 id="类型别名-1" tabindex="-1"><a class="header-anchor" href="#类型别名-1" aria-hidden="true">#</a> 类型别名</h2><h3 id="exitresult" tabindex="-1"><a class="header-anchor" href="#exitresult" aria-hidden="true">#</a> ExitResult</h3><p>Ƭ <strong>ExitResult</strong>: <code>string</code> | <code>number</code></p><hr><h3 id="privilegetype" tabindex="-1"><a class="header-anchor" href="#privilegetype" aria-hidden="true">#</a> PrivilegeType</h3><p>Ƭ <strong>PrivilegeType</strong>: <code>&quot;root&quot;</code> | <code>&quot;adb&quot;</code></p><hr><h3 id="standardoutputtype" tabindex="-1"><a class="header-anchor" href="#standardoutputtype" aria-hidden="true">#</a> StandardOutputType</h3><p>Ƭ <strong>StandardOutputType</strong>: <code>&quot;stderr&quot;</code> | <code>&quot;stdout&quot;</code></p><h2 id="函数-1" tabindex="-1"><a class="header-anchor" href="#函数-1" aria-hidden="true">#</a> 函数</h2><h3 id="inputtext" tabindex="-1"><a class="header-anchor" href="#inputtext" aria-hidden="true">#</a> InputText</h3><p>▸ <strong>InputText</strong>(<code>text</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>使用默认的shell示例执行<code>input text</code>命令，模拟输入文字。</p>',13),x=n("a",{href:"#inputtext"},"InputText",-1),y=n("a",{href:"#getdefaultshelloptions"},"getDefaultShellOptions",-1),S=n("a",{href:"#setdefaultshelloptions"},"setDefaultShellOptions",-1),w=l(`<p>这些操作函数以大写字母开头，表示其通常需要root或adb权限，否则只能在本应用内生效。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> InputText <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">InputText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">要输入的文字，只支持ASCII字符，不支持中文</td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="sendkey" tabindex="-1"><a class="header-anchor" href="#sendkey" aria-hidden="true">#</a> SendKey</h3><p>▸ <strong>SendKey</strong>(<code>key</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>使用默认的shell示例执行<code>input keyevent key</code>命令，模拟发送按键key。</p>`,11),q=n("a",{href:"#inputtext"},"InputText",-1),j=n("a",{href:"#getdefaultshelloptions"},"getDefaultShellOptions",-1),O=n("a",{href:"#setdefaultshelloptions"},"setDefaultShellOptions",-1),R=l(`<p>这些操作函数以大写字母开头，表示其通常需要root或adb权限，否则只能在本应用内生效。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> SendKey<span class="token punctuation">,</span> setDefaultShellOptions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setDefaultShellOptions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
       <span class="token literal-property property">adb</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">SendKey</span><span class="token punctuation">(</span><span class="token string">&quot;HOME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>key</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="swipe" tabindex="-1"><a class="header-anchor" href="#swipe" aria-hidden="true">#</a> Swipe</h3><p>▸ <strong>Swipe</strong>(<code>x1</code>, <code>y1</code>, <code>x2</code>, <code>y2</code>, <code>duration?</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>使用默认的shell示例执行<code>input swipe x1 y1 x2 y2 duration</code>命令，模拟从位置(x1, y1)滑动到位置(x2, y2)。</p>`,11),T=n("a",{href:"#inputtext"},"InputText",-1),A=n("a",{href:"#getdefaultshelloptions"},"getDefaultShellOptions",-1),P=n("a",{href:"#setdefaultshelloptions"},"setDefaultShellOptions",-1),D=l(`<p>这些操作函数以大写字母开头，表示其通常需要root或adb权限，否则只能在本应用内生效。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Swipe <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">Swipe</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x1</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>y1</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>x2</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>y2</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>duration?</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">滑动时间，单位毫秒</td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="tap" tabindex="-1"><a class="header-anchor" href="#tap" aria-hidden="true">#</a> Tap</h3><p>▸ <strong>Tap</strong>(<code>x</code>, <code>y</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>使用默认的shell示例执行<code>input tab x y</code>命令，模拟点击位置(x, y)。</p>`,11),E=n("a",{href:"#inputtext"},"InputText",-1),I=n("a",{href:"#getdefaultshelloptions"},"getDefaultShellOptions",-1),K=n("a",{href:"#setdefaultshelloptions"},"setDefaultShellOptions",-1),$=l(`<p>这些操作函数以大写字母开头，表示其通常需要root或adb权限，否则只能在本应用内生效。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Tap <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">Tap</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="checkaccess" tabindex="-1"><a class="header-anchor" href="#checkaccess" aria-hidden="true">#</a> checkAccess</h3><p>▸ <strong>checkAccess</strong>(<code>type</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>检查是否有特定的特权，比如是否有root权限。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> checkAccess <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> hasRoot <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">const</span> hasAdb <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkAccess</span><span class="token punctuation">(</span><span class="token string">&quot;adb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hasRoot: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasRoot<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, hasAdb: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hasAdb<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4>`,14),N=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),V=n("td",{style:{"text-align":"left"}},[n("code",null,"type")],-1),B={style:{"text-align":"left"}},C=n("code",null,"PrivilegeType",-1),H=n("td",{style:{"text-align":"left"}},'特权类型，比如"root"或"adb"',-1),L=n("h4",{id:"返回值-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-4","aria-hidden":"true"},"#"),s(" 返回值")],-1),U=n("p",null,[n("code",null,"Promise"),s("<"),n("code",null,"boolean"),s(">")],-1),M=n("p",null,"是否有该类型的特权的Promise",-1),W=n("hr",null,null,-1),z=n("h3",{id:"createshell",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#createshell","aria-hidden":"true"},"#"),s(" createShell")],-1),F=n("strong",null,"createShell",-1),G=n("code",null,"options?",-1),J=n("code",null,"Shell",-1),Q=n("p",null,"创建一个Shell实例。",-1),X=l(`<p>通过Shell对象我们也可监听到Shell的输出。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> createShell <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> shell <span class="token operator">=</span> <span class="token function">createShell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;line&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">line</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;ls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> id <span class="token operator">=</span> $autojs<span class="token punctuation">.</span><span class="token function">keepRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shell<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> $autojs<span class="token punctuation">.</span><span class="token function">cancelKeepRunning</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4>`,4),Y=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Z=n("td",{style:{"text-align":"left"}},[n("code",null,"options?")],-1),nn={style:{"text-align":"left"}},sn=n("code",null,"ShellOptions",-1),tn=n("td",{style:{"text-align":"left"}},"Shell选项，将覆盖默认的Shell选项",-1),an=n("h4",{id:"返回值-5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-5","aria-hidden":"true"},"#"),s(" 返回值")],-1),en=n("code",null,"Shell",-1),ln=n("p",null,"Shell实例",-1),on=n("hr",null,null,-1),pn=n("h3",{id:"exec",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#exec","aria-hidden":"true"},"#"),s(" exec")],-1),cn=n("strong",null,"exec",-1),dn=n("code",null,"cmd",-1),un=n("code",null,"options?",-1),rn=n("code",null,"Promise",-1),hn=n("code",null,"ExecutionResult",-1),kn=l(`<p>创建一个新的shell进程，并执行命令，异步返回结果。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> exec<span class="token punctuation">,</span> isRootAvailable <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;npm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">isRootAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&quot;ls /data&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4>`,4),fn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),gn=n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"cmd")]),n("td",{style:{"text-align":"left"}},[n("code",null,"string")]),n("td",{style:{"text-align":"left"}},"要执行的命令")],-1),vn=n("td",{style:{"text-align":"left"}},[n("code",null,"options?")],-1),mn={style:{"text-align":"left"}},_n=n("code",null,"ShellOptions",-1),bn=n("td",{style:{"text-align":"left"}},"Shell选项，将覆盖默认的Shell选项",-1),xn=n("h4",{id:"返回值-6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-6","aria-hidden":"true"},"#"),s(" 返回值")],-1),yn=n("code",null,"Promise",-1),Sn=n("code",null,"ExecutionResult",-1),wn=n("p",null,"执行结果的Promise",-1),qn=n("hr",null,null,-1),jn=n("h3",{id:"getdefaultshelloptions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getdefaultshelloptions","aria-hidden":"true"},"#"),s(" getDefaultShellOptions")],-1),On=n("strong",null,"getDefaultShellOptions",-1),Rn=n("code",null,"ShellOptions",-1),Tn=n("p",null,"获取默认的Shell选项。",-1),An=n("p",null,[n("strong",null,[n("code",null,"参见")])],-1),Pn=n("h4",{id:"返回值-7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-7","aria-hidden":"true"},"#"),s(" 返回值")],-1),Dn=n("code",null,"ShellOptions",-1),En=l(`<hr><h3 id="isrootavailable" tabindex="-1"><a class="header-anchor" href="#isrootavailable" aria-hidden="true">#</a> isRootAvailable</h3><p>▸ <strong>isRootAvailable</strong>(): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>检查设备是否已Root。需要注意的是，设备已Root不代表本应用已获得Root权限。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> isRootAvailable <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;shell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> rootAvailable <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">isRootAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rootAvailable: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rootAvailable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="返回值-8" tabindex="-1"><a class="header-anchor" href="#返回值-8" aria-hidden="true">#</a> 返回值</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><hr><h3 id="setdefaultshelloptions" tabindex="-1"><a class="header-anchor" href="#setdefaultshelloptions" aria-hidden="true">#</a> setDefaultShellOptions</h3><p>▸ <strong>setDefaultShellOptions</strong>(<code>options</code>): <code>void</code></p><p>设置默认的Shell选项。这些选项包含是否使用Root权限、adb权限、环境变量等，会在创建新的Shell或RootAutomator实例时使用。</p><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4>`,13),In=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),Kn=n("td",{style:{"text-align":"left"}},[n("code",null,"options")],-1),$n={style:{"text-align":"left"}},Nn=n("code",null,"ShellOptions",-1),Vn=n("td",{style:{"text-align":"left"}},"Shell选项",-1),Bn=n("h4",{id:"返回值-9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-9","aria-hidden":"true"},"#"),s(" 返回值")],-1),Cn=n("p",null,[n("code",null,"void")],-1);function Hn(Ln,Un){const t=p("RouterLink");return c(),i("div",null,[u,n("p",null,[s("Auto.js Pro 9也内置了终端用于执行npm, node等命令，而本模块创建的Shell对象或者"),a(t,{to:"/v9/generated/modules/shell.html#exec"},{default:e(()=>[s("exec")]),_:1}),s("函数执行的shell命令，在非打包应用的情况下均支持"),r,s("和"),h,s("命令，除非修改了"),k,s("环境变量。")]),n("p",null,[s("本模块主要提供了创建新的Shell对象的函数"),a(t,{to:"/v9/generated/modules/shell.html#createshell"},{default:e(()=>[s("createShell")]),_:1}),s("用于持续地执行多条shell命令并监听结果，以及"),f,s("函数一次性执行一条shell命令并获取结果。")]),g,v,n("ul",null,[n("li",null,[a(t,{to:"/v9/generated/interfaces/shell.ExecutionResult.html"},{default:e(()=>[s("ExecutionResult")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:e(()=>[s("Shell")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[s("ShellOptions")]),_:1})])]),m,n("ul",null,[n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#exitresult"},{default:e(()=>[s("ExitResult")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#privilegetype"},{default:e(()=>[s("PrivilegeType")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#standardoutputtype"},{default:e(()=>[s("StandardOutputType")]),_:1})])]),_,n("ul",null,[n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#inputtext"},{default:e(()=>[s("InputText")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#sendkey"},{default:e(()=>[s("SendKey")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#swipe"},{default:e(()=>[s("Swipe")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#tap"},{default:e(()=>[s("Tap")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#checkaccess"},{default:e(()=>[s("checkAccess")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#createshell"},{default:e(()=>[s("createShell")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#exec"},{default:e(()=>[s("exec")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#getdefaultshelloptions"},{default:e(()=>[s("getDefaultShellOptions")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#isrootavailable"},{default:e(()=>[s("isRootAvailable")]),_:1})]),n("li",null,[a(t,{to:"/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:e(()=>[s("setDefaultShellOptions")]),_:1})])]),b,n("p",null,[s("默认的shell示例在首次使用"),a(t,{to:"/v9/generated/modules/shell.html#tap"},{default:e(()=>[s("Tap")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#swipe"},{default:e(()=>[s("Swipe")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#sendkey"},{default:e(()=>[s("SendKey")]),_:1}),s(", "),x,s("等操作时会使用默认Shell选项"),y,s("自动创建。若您想让这些操作使用adb权限或特定Shell选项，应当在执行这些函数前使用"),S,s("设置Shell选项。")]),w,n("p",null,[s("默认的shell示例在首次使用"),a(t,{to:"/v9/generated/modules/shell.html#tap"},{default:e(()=>[s("Tap")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#swipe"},{default:e(()=>[s("Swipe")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#sendkey"},{default:e(()=>[s("SendKey")]),_:1}),s(", "),q,s("等操作时会使用默认Shell选项"),j,s("自动创建。若您想让这些操作使用adb权限或特定Shell选项，应当在执行这些函数前使用"),O,s("设置Shell选项。")]),R,n("p",null,[s("默认的shell示例在首次使用"),a(t,{to:"/v9/generated/modules/shell.html#tap"},{default:e(()=>[s("Tap")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#swipe"},{default:e(()=>[s("Swipe")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#sendkey"},{default:e(()=>[s("SendKey")]),_:1}),s(", "),T,s("等操作时会使用默认Shell选项"),A,s("自动创建。若您想让这些操作使用adb权限或特定Shell选项，应当在执行这些函数前使用"),P,s("设置Shell选项。")]),D,n("p",null,[s("默认的shell示例在首次使用"),a(t,{to:"/v9/generated/modules/shell.html#tap"},{default:e(()=>[s("Tap")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#swipe"},{default:e(()=>[s("Swipe")]),_:1}),s(", "),a(t,{to:"/v9/generated/modules/shell.html#sendkey"},{default:e(()=>[s("SendKey")]),_:1}),s(", "),E,s("等操作时会使用默认Shell选项"),I,s("自动创建。若您想让这些操作使用adb权限或特定Shell选项，应当在执行这些函数前使用"),K,s("设置Shell选项。")]),$,n("table",null,[N,n("tbody",null,[n("tr",null,[V,n("td",B,[a(t,{to:"/v9/generated/modules/shell.html#privilegetype"},{default:e(()=>[C]),_:1})]),H])])]),L,U,M,W,z,n("p",null,[s("▸ "),F,s("("),G,s("): "),a(t,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:e(()=>[J]),_:1})]),Q,n("p",null,[s("我们通常用"),a(t,{to:"/v9/generated/modules/shell.html#exec"},{default:e(()=>[s("exec")]),_:1}),s("函数来一次性执行单条命令并获取结果，但如果有多条命令需要执行，用Shell对象的效率更高。这是因为无需每次执行都创建新的shell进程。")]),X,n("table",null,[Y,n("tbody",null,[n("tr",null,[Z,n("td",nn,[a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[sn]),_:1})]),tn])])]),an,n("p",null,[a(t,{to:"/v9/generated/interfaces/shell.Shell.html"},{default:e(()=>[en]),_:1})]),ln,on,pn,n("p",null,[s("▸ "),cn,s("("),dn,s(", "),un,s("): "),rn,s("<"),a(t,{to:"/v9/generated/interfaces/shell.ExecutionResult.html"},{default:e(()=>[hn]),_:1}),s(">")]),kn,n("table",null,[fn,n("tbody",null,[gn,n("tr",null,[vn,n("td",mn,[a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[_n]),_:1})]),bn])])]),xn,n("p",null,[yn,s("<"),a(t,{to:"/v9/generated/interfaces/shell.ExecutionResult.html"},{default:e(()=>[Sn]),_:1}),s(">")]),wn,qn,jn,n("p",null,[s("▸ "),On,s("(): "),a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[Rn]),_:1})]),Tn,An,n("p",null,[a(t,{to:"/v9/generated/modules/shell.html#setdefaultshelloptions"},{default:e(()=>[s("setDefaultShellOptions")]),_:1})]),Pn,n("p",null,[a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[Dn]),_:1})]),En,n("table",null,[In,n("tbody",null,[n("tr",null,[Kn,n("td",$n,[a(t,{to:"/v9/generated/interfaces/shell.ShellOptions.html"},{default:e(()=>[Nn]),_:1})]),Vn])])]),Bn,Cn])}const zn=o(d,[["render",Hn],["__file","shell.html.vue"]]);export{zn as default};
