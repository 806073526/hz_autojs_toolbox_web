import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as r,c as u,d as e,b as t,w as a,e as n,f as l}from"./app-ff93bfbc.js";const c={},h=l(`<p>floating_window模块提供显示悬浮窗，检查是否有悬浮窗权限等功能。</p><p>由于悬浮窗模块涉及UI交互，显示悬浮窗需要在UI线程中运行，因此需要在文件开始指定：</p><ul><li><code>&quot;ui-thread nodejs&quot;;</code>：仅悬浮窗，无UI页面Activity的情况</li><li><code>&quot;ui nodejs&quot;;</code>：既有悬浮窗，又有UI页面Activity</li><li><code>&quot;ui-thread&quot;;</code>：仅悬浮窗，无UI页面Activity，并且文件名本身用.node.js结尾</li><li><code>&quot;ui&quot;;</code>：既有悬浮窗，又有UI页面Activity，并且文件名本身用.node.js结尾</li></ul><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;ui-thread nodejs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> createWindow <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;floating_window&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> window <span class="token operator">=</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">setViewFromXml</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  &lt;vertical bg=&quot;#ffffff&quot;&gt;
      &lt;text text=&quot;Node.js: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; textColor=&quot;#aa0000&quot; textSize=&quot;16&quot; width=&quot;*&quot;/&gt;                
  &lt;/vertical&gt;
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$autojs<span class="token punctuation">.</span><span class="token function">keepRunning</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3>`,7),_=e("h3",{id:"类型别名",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#类型别名","aria-hidden":"true"},"#"),n(" 类型别名")],-1),g=e("h3",{id:"变量",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#变量","aria-hidden":"true"},"#"),n(" 变量")],-1),p=e("h3",{id:"函数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),n(" 函数")],-1),w=l('<h2 id="类型别名-1" tabindex="-1"><a class="header-anchor" href="#类型别名-1" aria-hidden="true">#</a> 类型别名</h2><h3 id="keeptoedgetype" tabindex="-1"><a class="header-anchor" href="#keeptoedgetype" aria-hidden="true">#</a> KeepToEdgeType</h3><p>Ƭ <strong>KeepToEdgeType</strong>: <code>&quot;bounce&quot;</code> | <code>boolean</code></p><p>是否自动贴边。如果为true，在拖拽结束时，悬浮窗会自动贴边；如果为bounce，则会跳跃多次后贴边，类似Auto.js Pro自带悬浮窗的弹性效果。</p><h2 id="变量-1" tabindex="-1"><a class="header-anchor" href="#变量-1" aria-hidden="true">#</a> 变量</h2><h3 id="flag-dim-behind" tabindex="-1"><a class="header-anchor" href="#flag-dim-behind" aria-hidden="true">#</a> FLAG_DIM_BEHIND</h3><p>• <code>Const</code> <strong>FLAG_DIM_BEHIND</strong>: <code>2</code></p>',7),f=e("p",null,[e("strong",null,[e("code",null,"参见")])],-1),m={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_DIM_BEHIND",target:"_blank",rel:"noopener noreferrer"},v=e("hr",null,null,-1),b=e("h3",{id:"flag-fullscreen",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flag-fullscreen","aria-hidden":"true"},"#"),n(" FLAG_FULLSCREEN")],-1),y=e("p",null,[n("• "),e("code",null,"Const"),n(),e("strong",null,"FLAG_FULLSCREEN"),n(": "),e("code",null,"1024")],-1),L=e("p",null,"This flag can be controlled in your theme through the android.R.attr#windowFullscreen attribute; this attribute is automatically set for you in the standard fullscreen themes such as android.R.style#Theme_NoTitleBar_Fullscreen, android.R.style#Theme_Black_NoTitleBar_Fullscreen, android.R.style#Theme_Light_NoTitleBar_Fullscreen, android.R.style#Theme_Holo_NoActionBar_Fullscreen, android.R.style#Theme_Holo_Light_NoActionBar_Fullscreen, android.R.style#Theme_DeviceDefault_NoActionBar_Fullscreen, and android.R.style#Theme_DeviceDefault_Light_NoActionBar_Fullscreen.",-1),A=e("p",null,[e("strong",null,[e("code",null,"Deprecated")])],-1),T=e("p",null,"Use WindowInsetsController#hide(int) with Type#statusBars() instead.",-1),F=e("p",null,[e("strong",null,[e("code",null,"参见")])],-1),E={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_FULLSCREEN",target:"_blank",rel:"noopener noreferrer"},O=l('<hr><h3 id="flag-keep-screen-on" tabindex="-1"><a class="header-anchor" href="#flag-keep-screen-on" aria-hidden="true">#</a> FLAG_KEEP_SCREEN_ON</h3><p>• <code>Const</code> <strong>FLAG_KEEP_SCREEN_ON</strong>: <code>128</code></p><p>设置该标志让窗口显示时保持屏幕常亮。</p><p>Window flag: as long as this window is visible to the user, keep the device&#39;s screen turned on and bright.</p><p><strong><code>参见</code></strong></p>',6),C={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON",target:"_blank",rel:"noopener noreferrer"},I=e("hr",null,null,-1),W=e("h3",{id:"flag-layout-in-screen",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flag-layout-in-screen","aria-hidden":"true"},"#"),n(" FLAG_LAYOUT_IN_SCREEN")],-1),N=e("p",null,[n("• "),e("code",null,"Const"),n(),e("strong",null,"FLAG_LAYOUT_IN_SCREEN"),n(": "),e("code",null,"256")],-1),k=e("p",null,"设置该标志让窗口保持在屏幕内显示。",-1),x=e("p",null,"Window flag for attached windows: Place the window within the entire screen, ignoring any constraints from the parent window.",-1),U=l('<hr><h3 id="flag-layout-no-limits" tabindex="-1"><a class="header-anchor" href="#flag-layout-no-limits" aria-hidden="true">#</a> FLAG_LAYOUT_NO_LIMITS</h3><p>• <code>Const</code> <strong>FLAG_LAYOUT_NO_LIMITS</strong>: <code>512</code></p><p>设置该标志让窗口可超出屏幕范围。</p><p>Window flag: allow window to extend outside of the screen.</p><p><strong><code>参见</code></strong></p>',6),S={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_LAYOUT_NO_LIMITS",target:"_blank",rel:"noopener noreferrer"},G=e("hr",null,null,-1),D=e("h3",{id:"flag-not-focusable",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flag-not-focusable","aria-hidden":"true"},"#"),n(" FLAG_NOT_FOCUSABLE")],-1),P=e("p",null,[n("• "),e("code",null,"Const"),n(),e("strong",null,"FLAG_NOT_FOCUSABLE"),n(": "),e("code",null,"8")],-1),M=e("p",null,"设置该标志将让该窗口无法获得焦点。",-1),R=e("p",null,[e("strong",null,[e("code",null,"参见")])],-1),B={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_NOT_FOCUSABLE",target:"_blank",rel:"noopener noreferrer"},q=l('<hr><h3 id="flag-not-touchable" tabindex="-1"><a class="header-anchor" href="#flag-not-touchable" aria-hidden="true">#</a> FLAG_NOT_TOUCHABLE</h3><p>• <code>Const</code> <strong>FLAG_NOT_TOUCHABLE</strong>: <code>16</code></p><p>设置该标志将让该窗口无法获得触摸事件，但在Android 12及以上因系统安全限制无效。</p><p>Window flag: this window can never receive touch events.</p><p>The intention of this flag is to leave the touch to be handled by some window below this window (in Z order).</p><p>Starting from Android Build.VERSION_CODES#S, for security reasons, touch events that pass through windows containing this flag (ie. are within the bounds of the window) will only be delivered to the touch-consuming window if one (or more) of the items below are true:</p>',7),H=e("li",null,[e("strong",null,"Same UID"),n(": This window belongs to the same UID that owns the touch-consuming window.")],-1),Y=e("strong",null,"Trusted windows",-1),V=e("strong",null,"not",-1),j=e("li",null,[e("strong",null,"Invisible windows"),n(": This window is View#GONE or View#INVISIBLE.")],-1),K=e("li",null,[e("strong",null,"Fully transparent windows"),n(": This window has LayoutParams#alpha equal to 0.")],-1),Z=e("strong",null,"One SAW window with enough transparency",-1),X=e("strong",null,"only",-1),z=e("strong",null,"Multiple SAW windows with enough transparency",-1),$=e("strong",null,"combined obscuring opacity",-1),J=l(`<h3 id="maximum-obscuring-opacity" tabindex="-1"><a class="header-anchor" href="#maximum-obscuring-opacity" aria-hidden="true">#</a> Maximum obscuring opacity</h3><p>This value is <strong>0.8</strong>. Apps that want to gather this value from the system rather than hard-coding it might want to use android.hardware.input.InputManager#getMaximumObscuringOpacityForTouch().</p><h3 id="combined-obscuring-opacity" tabindex="-1"><a class="header-anchor" href="#combined-obscuring-opacity" aria-hidden="true">#</a> Combined obscuring opacity</h3><p>The <strong>combined obscuring opacity</strong> of a set of windows is obtained by combining the opacity values of all windows in the set using the associative and commutative operation defined as:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>opacity({A,B}) = 1 - (1 - opacity(A))*(1 - opacity(B))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>where {@code opacity(X)} is the LayoutParams#alpha of window X. So, for a set of windows {@code {W1, .., Wn}}, the combined obscuring opacity will be:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>opacity({W1, .., Wn}) = 1 - (1 - opacity(W1)) * ... * (1 - opacity(Wn))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong><code>参见</code></strong></p>`,8),Q={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_NOT_TOUCHABLE",target:"_blank",rel:"noopener noreferrer"},ee=l('<hr><h3 id="flag-secure" tabindex="-1"><a class="header-anchor" href="#flag-secure" aria-hidden="true">#</a> FLAG_SECURE</h3><p>• <code>Const</code> <strong>FLAG_SECURE</strong>: <code>8192</code></p><p>设置该标志让窗口内容无法被截图、录屏。</p><p>Window flag: treat the content of the window as secure, preventing it from appearing in screenshots or from being viewed on non-secure displays.</p><p>See android.view.Display#FLAG_SECURE for more details about secure surfaces and secure displays.</p><p><strong><code>参见</code></strong></p>',7),ne={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_SECURE",target:"_blank",rel:"noopener noreferrer"},te=e("hr",null,null,-1),oe=e("h3",{id:"flag-watch-outside-touch",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flag-watch-outside-touch","aria-hidden":"true"},"#"),n(" FLAG_WATCH_OUTSIDE_TOUCH")],-1),ae=e("p",null,[n("• "),e("code",null,"Const"),n(),e("strong",null,"FLAG_WATCH_OUTSIDE_TOUCH"),n(": "),e("code",null,"262144")],-1),le=e("p",null,"设置该标志后，窗口将可在有窗口外部的触摸事件时收到ACTION_OUTSIDE事件。",-1),ie=e("p",null,[e("strong",null,[e("code",null,"参见")])],-1),de={href:"https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_WATCH_OUTSIDE_TOUCH",target:"_blank",rel:"noopener noreferrer"},se=l('<h2 id="函数-1" tabindex="-1"><a class="header-anchor" href="#函数-1" aria-hidden="true">#</a> 函数</h2><h3 id="candrawoverlays" tabindex="-1"><a class="header-anchor" href="#candrawoverlays" aria-hidden="true">#</a> canDrawOverlays</h3><p>▸ <strong>canDrawOverlays</strong>(): <code>boolean</code></p><p>判断是否有悬浮窗权限。</p><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><p>如果本应用有悬浮窗权限，则返回 <code>true</code>，否则返回 <code>false</code></p><hr><h3 id="createwindow" tabindex="-1"><a class="header-anchor" href="#createwindow" aria-hidden="true">#</a> createWindow</h3>',9),re=e("strong",null,"createWindow",-1),ue=e("code",null,"options?",-1),ce=e("code",null,"FloatingWindow",-1),he=e("p",null,"创建一个新悬浮窗，可指定悬浮窗的初始大小、位置等参数。",-1),_e=e("h4",{id:"参数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参数","aria-hidden":"true"},"#"),n(" 参数")],-1),ge=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"名称"),e("th",{style:{"text-align":"left"}},"类型"),e("th",{style:{"text-align":"left"}},"描述")])],-1),pe=e("td",{style:{"text-align":"left"}},[e("code",null,"options?")],-1),we={style:{"text-align":"left"}},fe=e("code",null,"CreateWindowOptions",-1),me={style:{"text-align":"left"}},ve=e("h4",{id:"返回值-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#返回值-1","aria-hidden":"true"},"#"),n(" 返回值")],-1),be=e("code",null,"FloatingWindow",-1),ye=l('<hr><h3 id="managedrawoverlays" tabindex="-1"><a class="header-anchor" href="#managedrawoverlays" aria-hidden="true">#</a> manageDrawOverlays</h3><p>▸ <strong>manageDrawOverlays</strong>(): <code>void</code></p><p>跳转到管理悬浮窗权限的页面。</p><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4><p><code>void</code></p>',6);function Le(Ae,Te){const o=d("RouterLink"),i=d("ExternalLinkIcon");return r(),u("div",null,[h,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.CreateWindowOptions.html"},{default:a(()=>[n("CreateWindowOptions")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.DragGesture.html"},{default:a(()=>[n("DragGesture")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.DragGestureOptions.html"},{default:a(()=>[n("DragGestureOptions")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html"},{default:a(()=>[n("FloatingWindow")]),_:1})])]),_,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#keeptoedgetype"},{default:a(()=>[n("KeepToEdgeType")]),_:1})])]),g,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_dim_behind"},{default:a(()=>[n("FLAG_DIM_BEHIND")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_fullscreen"},{default:a(()=>[n("FLAG_FULLSCREEN")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_keep_screen_on"},{default:a(()=>[n("FLAG_KEEP_SCREEN_ON")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_layout_in_screen"},{default:a(()=>[n("FLAG_LAYOUT_IN_SCREEN")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_layout_no_limits"},{default:a(()=>[n("FLAG_LAYOUT_NO_LIMITS")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_not_focusable"},{default:a(()=>[n("FLAG_NOT_FOCUSABLE")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_not_touchable"},{default:a(()=>[n("FLAG_NOT_TOUCHABLE")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_secure"},{default:a(()=>[n("FLAG_SECURE")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#flag_watch_outside_touch"},{default:a(()=>[n("FLAG_WATCH_OUTSIDE_TOUCH")]),_:1})])]),p,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#candrawoverlays"},{default:a(()=>[n("canDrawOverlays")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#createwindow"},{default:a(()=>[n("createWindow")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/modules/floating_window.html#managedrawoverlays"},{default:a(()=>[n("manageDrawOverlays")]),_:1})])]),w,e("p",null,[n("Window flag: everything behind this window will be dimmed. Use "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#dimAmount")]),_:1}),n(" to control the amount of dim.")]),f,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",m,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_DIM_BEHIND"),t(i)])])]),v,b,y,e("p",null,[n("Window flag: hide all screen decorations (such as the status bar) while this window is displayed. This allows the window to use the entire display space for itself -- the status bar will be hidden when an app window with this flag set is on the top layer. A fullscreen window will ignore a value of "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#SOFT_INPUT_ADJUST_RESIZE")]),_:1}),n(" for the window's "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#softInputMode")]),_:1}),n(" field; the window will stay fullscreen and will not resize.")]),L,A,T,F,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",E,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_FULLSCREEN"),t(i)])])]),O,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",C,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_KEEP_SCREEN_ON"),t(i)])])]),I,W,N,k,x,e("p",null,[n("Note: on displays that have a DisplayCutout, the window may be placed such that it avoids the DisplayCutout area if necessary according to the "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#layoutInDisplayCutoutMode")]),_:1}),n(".")]),U,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",S,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_LAYOUT_NO_LIMITS"),t(i)])])]),G,D,P,M,e("p",null,[n("Window flag: this window won't ever get key input focus, so the user can not send key or other button events to it. Those will instead go to whatever focusable window is behind it. This flag will also enable "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#FLAG_NOT_TOUCH_MODAL")]),_:1}),n(" whether or not that is explicitly set.")]),e("p",null,[n("Setting this flag also implies that the window will not need to interact with a soft input method, so it will be Z-ordered and positioned independently of any active input method (typically this means it gets Z-ordered on top of the input method, so it can use the full screen for its content and cover the input method if needed. You can use "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#FLAG_ALT_FOCUSABLE_IM")]),_:1}),n(" to modify this behavior.")]),R,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",B,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_NOT_FOCUSABLE"),t(i)])])]),q,e("ul",null,[H,e("li",null,[Y,n(": This window is trusted. Trusted windows include (but are not limited to) accessibility windows ("),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_ACCESSIBILITY_OVERLAY")]),_:1}),n("), the IME ("),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_INPUT_METHOD")]),_:1}),n(") and assistant windows (TYPE_VOICE_INTERACTION). Windows of type "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_APPLICATION_OVERLAY")]),_:1}),n(" are "),V,n(" trusted, see below.")]),j,K,e("li",null,[Z,n(": This window is of type "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_APPLICATION_OVERLAY")]),_:1}),n(", has LayoutParams#alpha below or equal to the "),t(o,{to:"/v9/generated/modules/floating_window.html#MaximumOpacity"},{default:a(()=>[n("maximum obscuring opacity")]),_:1}),n(" (see below) and it's the "),X,n(" window of type "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_APPLICATION_OVERLAY")]),_:1}),n(" from this UID in the touch path.")]),e("li",null,[z,n(": The multiple overlapping "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#TYPE_APPLICATION_OVERLAY")]),_:1}),n(" windows in the touch path from this UID have a "),$,n(" below or equal to the "),t(o,{to:"/v9/generated/modules/floating_window.html#MaximumOpacity"},{default:a(()=>[n("maximum obscuring opacity")]),_:1}),n(". See section "),t(o,{to:"/v9/generated/modules/floating_window.html#ObscuringOpacity"},{default:a(()=>[n("Combined obscuring opacity")]),_:1}),n(" below on how to compute this value. If none of these cases hold, the touch will not be delivered and a message will be logged to logcat.")])]),J,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",Q,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_NOT_TOUCHABLE"),t(i)])])]),ee,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",ne,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_SECURE"),t(i)])])]),te,oe,ae,le,e("p",null,[n("Window flag: if you have set "),t(o,{to:"/v9/generated/modules/floating_window.html"},{default:a(()=>[n("#FLAG_NOT_TOUCH_MODAL")]),_:1}),n(", you can set this flag to receive a single special MotionEvent with the action MotionEvent#ACTION_OUTSIDE MotionEvent.ACTION_OUTSIDE for touches that occur outside of your window. Note that you will not receive the full down/move/up gesture, only the location of the first down as an ACTION_OUTSIDE.")]),ie,e("ul",null,[e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#addflags"},{default:a(()=>[n("addFlags")]),_:1})]),e("li",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html#removeflags"},{default:a(()=>[n("removeFlags")]),_:1})]),e("li",null,[e("a",de,[n("https://developer.android.google.cn/reference/android/view/WindowManager.LayoutParams#FLAG_WATCH_OUTSIDE_TOUCH"),t(i)])])]),se,e("p",null,[n("▸ "),re,n("("),ue,n("): "),t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html"},{default:a(()=>[ce]),_:1})]),he,_e,e("table",null,[ge,e("tbody",null,[e("tr",null,[pe,e("td",we,[t(o,{to:"/v9/generated/interfaces/floating_window.CreateWindowOptions.html"},{default:a(()=>[fe]),_:1})]),e("td",me,[n("创建悬浮窗选项，参见"),t(o,{to:"/v9/generated/interfaces/floating_window.CreateWindowOptions.html"},{default:a(()=>[n("CreateWindowOptions")]),_:1})])])])]),ve,e("p",null,[t(o,{to:"/v9/generated/interfaces/floating_window.FloatingWindow.html"},{default:a(()=>[be]),_:1})]),ye])}const Oe=s(c,[["render",Le],["__file","floating_window.html.vue"]]);export{Oe as default};
