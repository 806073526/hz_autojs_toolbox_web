import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as r,c as p,d as n,b as t,w as s,e,f as o}from"./app-ff93bfbc.js";const d={},u=n("p",null,"此模块可让您控制本应用的电源策略，通过忽略电池优化来让本应用在后台时更不容易系统杀死。使用此API有可能影响设备的电池寿命。",-1),h=n("h2",{id:"目录",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#目录","aria-hidden":"true"},"#"),e(" 目录")],-1),g=n("h3",{id:"接口",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#接口","aria-hidden":"true"},"#"),e(" 接口")],-1),k=n("h3",{id:"函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#函数","aria-hidden":"true"},"#"),e(" 函数")],-1),_=o(`<h2 id="函数-1" tabindex="-1"><a class="header-anchor" href="#函数-1" aria-hidden="true">#</a> 函数</h2><h3 id="isignoringbatteryoptimizations" tabindex="-1"><a class="header-anchor" href="#isignoringbatteryoptimizations" aria-hidden="true">#</a> isIgnoringBatteryOptimizations</h3><p>▸ <strong>isIgnoringBatteryOptimizations</strong>(<code>pkg?</code>): <code>any</code></p><p>返回当前是否对应用pkg启用了【忽略电池优化】。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isIgnoringBatteryOptimizations <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;isIgnoringBatteryOptimizations:&#39;</span><span class="token punctuation">,</span> <span class="token function">isIgnoringBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>pkg</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;">应用包名，默认为本应用包名</td></tr></tbody></table><h4 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值" aria-hidden="true">#</a> 返回值</h4><p><code>any</code></p><p>是否已忽略电池优化</p><hr><h3 id="isscreenon" tabindex="-1"><a class="header-anchor" href="#isscreenon" aria-hidden="true">#</a> isScreenOn</h3><p>▸ <strong>isScreenOn</strong>(): <code>boolean</code></p><p>如果设备处于交互状态，则返回 true。</p><p>当此方法返回 true 时，设备处于唤醒状态并准备好与用户交互（尽管这并不能保证用户此时正在积极地与设备交互）。主屏幕通常在此状态下打开。某些功能（例如接近传感器）可能会暂时关闭屏幕，同时仍使设备处于交互状态。</p><p>当此方法返回 false 时，设备正在打瞌睡或睡着，并且必须在它准备好再次与用户交互之前被唤醒。在这种状态下，主屏幕通常是关闭的。某些功能，例如“环境模式”可能会导致主屏幕保持开启（尽管处于低功耗状态）以在设备打盹时显示系统提供的内容。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isScreenOn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="返回值-1" tabindex="-1"><a class="header-anchor" href="#返回值-1" aria-hidden="true">#</a> 返回值</h4><p><code>boolean</code></p><hr><h3 id="newwakelock" tabindex="-1"><a class="header-anchor" href="#newwakelock" aria-hidden="true">#</a> newWakeLock</h3>`,23),f=n("strong",null,"newWakeLock",-1),m=n("code",null,"levelAndFlags",-1),v=n("code",null,"tag",-1),y=n("code",null,"WakeLock",-1),b=n("p",null,"创建具有指定级别和标志的新唤醒锁。",-1),x=n("p",null,'levelAndFlags 参数指定使用逻辑或"|"运算符组合的唤醒锁定级别和可选标志。',-1),w=n("p",null,"唤醒锁定级别为：PARTIAL_WAKE_LOCK、FULL_WAKE_LOCK、SCREEN_DIM_WAKE_LOCK 和 SCREEN_BRIGHT_WAKE_LOCK。必须将确切的一个唤醒锁定级别指定为 levelAndFlags 参数的一部分。",-1),O=n("p",null,"唤醒锁定标志是：ACQUIRE_CAUSES_WAKEUP 和 ON_AFTER_RELEASE。多个标志可以组合为 levelAndFlags 参数的一部分。",-1),L=n("p",null,"在对象上调用 acquire() 以获取唤醒锁，并在完成后调用 release()。",-1),W=n("p",null,"尽管无需特殊权限即可创建唤醒锁，但需要 android.Manifest.permission.WAKE_LOCK 权限才能实际获取或释放返回的唤醒锁。",-1),q=n("p",null,"如果使用它来保持屏幕开启，您应该强烈考虑使用 android.view.WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON 代替。当用户在应用程序之间移动时，该窗口标志将由平台正确管理，并且不需要特殊权限。此外，使用标志将在多显示器场景中仅保持适当的屏幕打开，而使用唤醒锁将保持每个屏幕都打开。",-1),E=n("p",null,[n("strong",null,[n("code",null,"参见")])],-1),I={href:"https://developer.android.google.cn/reference/android/os/PowerManager#newWakeLock",target:"_blank",rel:"noopener noreferrer"},z=o('<h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>levelAndFlags</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">唤醒锁级别和标志值的组合，定义了所请求的 WakeLock 行为。</td></tr><tr><td style="text-align:left;"><code>tag</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">用于调试目的的类名（或其他标记）。</td></tr></tbody></table><h4 id="返回值-2" tabindex="-1"><a class="header-anchor" href="#返回值-2" aria-hidden="true">#</a> 返回值</h4>',3),A=n("code",null,"WakeLock",-1),j=o(`<hr><h3 id="requestignorebatteryoptimizations" tabindex="-1"><a class="header-anchor" href="#requestignorebatteryoptimizations" aria-hidden="true">#</a> requestIgnoreBatteryOptimizations</h3><p>▸ <strong>requestIgnoreBatteryOptimizations</strong>(<code>forceRequest?</code>, <code>pkg?</code>): <code>void</code></p><p>请求用户忽略对应用pkg的电池优化。系统将会弹出一个弹窗提示用户确认，这个过程是异步的，确认结果不会返回。</p><p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isIgnoringBatteryOptimizations<span class="token punctuation">,</span> requestIgnoreBatteryOptimizations <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isIgnoringBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;requestIgnoreBatteryOptimizations&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">requestIgnoreBatteryOptimizations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:left;">默认值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>forceRequest</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;"><code>false</code></td><td style="text-align:left;">如果为false，并且当前已经开启了忽略电池优化，则不执行请求；如果为true，则一律请求忽略电池优化。默认为false。</td></tr><tr><td style="text-align:left;"><code>pkg</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>packageName</code></td><td style="text-align:left;">需要忽略电池优化的包名。默认为本应用包名。</td></tr></tbody></table><h4 id="返回值-3" tabindex="-1"><a class="header-anchor" href="#返回值-3" aria-hidden="true">#</a> 返回值</h4><p><code>void </code></p><hr><h3 id="wakeup" tabindex="-1"><a class="header-anchor" href="#wakeup" aria-hidden="true">#</a> wakeUp</h3><p>▸ <strong>wakeUp</strong>(<code>options?</code>): <code>void</code></p><p>获取一个唤醒锁，该唤醒锁将唤醒屏幕并保持一定时间, timeout时间（默认为5秒）后唤醒锁将自动释放。</p><p><strong><code>参见</code></strong></p>`,15),B={href:"https://developer.android.google.cn/reference/android/os/PowerManager#newWakeLock",target:"_blank",rel:"noopener noreferrer"},S=o(`<p><strong><code>示例</code></strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;nodejs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> isScreenOn<span class="token punctuation">,</span> wakeUp <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;power_manager&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isScreenOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">wakeUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4>`,3),U=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"描述")])],-1),C=n("td",{style:{"text-align":"left"}},[n("code",null,"options?")],-1),K={style:{"text-align":"left"}},R=n("code",null,"WakeUpOptions",-1),N=n("td",{style:{"text-align":"left"}},"唤醒锁选项",-1),P=n("h4",{id:"返回值-4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#返回值-4","aria-hidden":"true"},"#"),e(" 返回值")],-1),M=n("p",null,[n("code",null,"void")],-1);function F(T,V){const a=l("RouterLink"),i=l("ExternalLinkIcon");return r(),p("div",null,[u,h,g,n("ul",null,[n("li",null,[t(a,{to:"/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[e("WakeLock")]),_:1})]),n("li",null,[t(a,{to:"/v9/generated/interfaces/power_manager.WakeUpOptions.html"},{default:s(()=>[e("WakeUpOptions")]),_:1})])]),k,n("ul",null,[n("li",null,[t(a,{to:"/v9/generated/modules/power_manager.html#isignoringbatteryoptimizations"},{default:s(()=>[e("isIgnoringBatteryOptimizations")]),_:1})]),n("li",null,[t(a,{to:"/v9/generated/modules/power_manager.html#isscreenon"},{default:s(()=>[e("isScreenOn")]),_:1})]),n("li",null,[t(a,{to:"/v9/generated/modules/power_manager.html#newwakelock"},{default:s(()=>[e("newWakeLock")]),_:1})]),n("li",null,[t(a,{to:"/v9/generated/modules/power_manager.html#requestignorebatteryoptimizations"},{default:s(()=>[e("requestIgnoreBatteryOptimizations")]),_:1})]),n("li",null,[t(a,{to:"/v9/generated/modules/power_manager.html#wakeup"},{default:s(()=>[e("wakeUp")]),_:1})])]),_,n("p",null,[e("▸ "),f,e("("),m,e(", "),v,e("): "),t(a,{to:"/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[y]),_:1})]),b,x,w,O,L,W,q,E,n("p",null,[e("[PowerManager.newWakeLock]("),n("a",I,[e("https://developer.android.google.cn/reference/android/os/PowerManager#newWakeLock"),t(i)]),e("(int, java.lang.String))。")]),z,n("p",null,[t(a,{to:"/v9/generated/interfaces/power_manager.WakeLock.html"},{default:s(()=>[A]),_:1})]),j,n("p",null,[e("[PowerManager.newWakeLock]("),n("a",B,[e("https://developer.android.google.cn/reference/android/os/PowerManager#newWakeLock"),t(i)]),e("(int, java.lang.String))。")]),S,n("table",null,[U,n("tbody",null,[n("tr",null,[C,n("td",K,[t(a,{to:"/v9/generated/interfaces/power_manager.WakeUpOptions.html"},{default:s(()=>[R]),_:1})]),N])])]),P,M])}const H=c(d,[["render",F],["__file","power_manager.html.vue"]]);export{H as default};
